2025/01/13 09:49:07 fileService.go:35: Trace | FileChangeListeners: [0xc0001000a8]
2025/01/13 09:49:07 util.go:36: Trace | Read Content-Length: 3705 from Content-Length: 3705
2025/01/13 09:49:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":20136,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:49:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:49:07 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/13 09:49:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/13 09:49:07 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 09:49:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 09:49:07 server.go:103: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 09:49:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 09:49:08 util.go:36: Trace | Read Content-Length: 3167 from Content-Length: 3167
2025/01/13 09:49:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:49:08 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:49:08 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:49:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:49:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:49:08 util.go:36: Trace | Read Content-Length: 1166 from Content-Length: 1166
2025/01/13 09:49:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar 체ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund {\n\n         }\n    }\n}"}}}
2025/01/13 09:49:08 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:49:08 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/13 09:49:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:49:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:49:08 util.go:36: Trace | Read Content-Length: 173 from Content-Length: 173
2025/01/13 09:49:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"}}}
2025/01/13 09:49:08 server.go:106: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 09:49:08 foldingService.go:196: Trace | Found 13 Comment Ranges
2025/01/13 09:49:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":[{"startLine":68,"startCharacter":19,"endLine":109,"endCharacter":4},{"startLine":78,"startCharacter":29,"endLine":85,"endCharacter":8},{"startLine":4,"startCharacter":31,"endLine":110,"endCharacter":0},{"startLine":23,"startCharacter":24,"endLine":30,"endCharacter":8},{"startLine":33,"startCharacter":23,"endLine":40,"endCharacter":8},{"startLine":43,"startCharacter":38,"endLine":54,"endCharacter":8},{"startLine":88,"startCharacter":25,"endLine":93,"endCharacter":8},{"startLine":96,"startCharacter":21,"endLine":108,"endCharacter":8},{"startLine":9,"startCharacter":19,"endLine":65,"endCharacter":4},{"startLine":12,"startCharacter":26,"endLine":20,"endCharacter":8},{"startLine":57,"startCharacter":43,"endLine":64,"endCharacter":8},{"startLine":70,"startCharacter":24,"endLine":76,"endCharacter":8},{"startLine":6,"startCharacter":6,"endLine":8,"endCharacter":34,"kind":"comment"},{"startLine":11,"startCharacter":1,"endLine":11,"endCharacter":38,"kind":"comment"},{"startLine":22,"startCharacter":1,"endLine":22,"endCharacter":27,"kind":"comment"},{"startLine":32,"startCharacter":1,"endLine":32,"endCharacter":29,"kind":"comment"},{"startLine":42,"startCharacter":1,"endLine":42,"endCharacter":33,"kind":"comment"},{"startLine":45,"startCharacter":1,"endLine":45,"endCharacter":6,"kind":"comment"},{"startLine":48,"startCharacter":1,"endLine":48,"endCharacter":6,"kind":"comment"},{"startLine":56,"startCharacter":1,"endLine":56,"endCharacter":31,"kind":"comment"},{"startLine":67,"startCharacter":1,"endLine":67,"endCharacter":21,"kind":"comment"},{"startLine":69,"startCharacter":1,"endLine":69,"endCharacter":22,"kind":"comment"},{"startLine":77,"startCharacter":1,"endLine":77,"endCharacter":30,"kind":"comment"},{"startLine":87,"startCharacter":1,"endLine":87,"endCharacter":17,"kind":"comment"},{"startLine":95,"startCharacter":1,"endLine":95,"endCharacter":19,"kind":"comment"}]}
2025/01/13 09:49:08 foldingService.go:90: Trace | Finished Folding Range
2025/01/13 09:49:33 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:49:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":39,"character":14}}}
2025/01/13 09:49:33 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:49:33 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:49:33 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/13 09:49:33 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/13 09:49:33 hoverService.go:372: Trace | Index 0 Argumente: 1
2025/01/13 09:49:33 hoverService.go:373: Trace | Value: {ModelElement:{Kommentar:<nil> Node:0xc0000f4e80} Ignored:false Value:5}
2025/01/13 09:49:33 hoverService.go:372: Trace | Index 1 Argumente: 1
2025/01/13 09:49:33 hoverService.go:373: Trace | Value: {ModelElement:{Kommentar:<nil> Node:0xc0000f4f80} Value:Geschichte}
2025/01/13 09:49:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### HISTORY\n###### In [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34)\n\n\n**[Index]()**: 5\u003cbr\u003e\n**[name](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L35)**: Geschichte\u003cbr\u003e\n\n"},"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":14}}}}
2025/01/13 09:49:33 hoverService.go:136: Trace | Finished Hover with Content: 
#### HISTORY
###### In [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34)


**[Index]()**: 5<br>
**[name](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L35)**: Geschichte<br>


2025/01/13 09:50:19 fileService.go:35: Trace | FileChangeListeners: [0xc000134138]
2025/01/13 09:50:19 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:50:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:50:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:50:19 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:50:19 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:50:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:50:19 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:50:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:50:19 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:50:19 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:50:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:50:19 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:50:19 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:50:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:50:19 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:50:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":39,"character":14}}}
2025/01/13 09:50:19 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:50:19 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:50:19 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:50:19 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/13 09:50:19 hoverService.go:372: Trace | Index 0 Argumente: 1
2025/01/13 09:50:19 hoverService.go:373: Trace | Value: {ModelElement:{Kommentar:<nil> Node:0xc0001df3e0} Ignored:false Value:5}
2025/01/13 09:50:19 hoverService.go:372: Trace | Index 1 Argumente: 1
2025/01/13 09:50:19 hoverService.go:373: Trace | Value: {ModelElement:{Kommentar:<nil> Node:0xc0001df4e0} Value:Geschichte}
2025/01/13 09:50:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### HISTORY\n###### In [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34)\n\n\n**[Index]()**: 5\u003cbr\u003e\n**[name](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L35)**: Geschichte\u003cbr\u003e\n\n"},"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":14}}}}
2025/01/13 09:50:19 hoverService.go:136: Trace | Finished Hover with Content: 
#### HISTORY
###### In [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34)


**[Index]()**: 5<br>
**[name](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L35)**: Geschichte<br>


2025/01/13 09:50:19 util.go:36: Trace | Read Content-Length: 429 from Content-Length: 429
2025/01/13 09:50:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### HISTORY\n###### In [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34)\n\n\n**[Index]()**: 5\u003cbr\u003e\n**[name](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L35)**: Geschichte\u003cbr\u003e\n\n"},"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":14}}}}
2025/01/13 09:50:31 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:50:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":46,"character":22}}}
2025/01/13 09:50:31 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:50:31 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:50:31 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/13 09:50:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 \"Kategorisierung der MedienEnum Category in Package de.library.management.media\") category\nsad\n\n\n"},"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":22}}}}
2025/01/13 09:50:31 hoverService.go:136: Trace | Finished Hover with Content: 
#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 "Kategorisierung der MedienEnum Category in Package de.library.management.media") category
sad



2025/01/13 09:51:16 fileService.go:35: Trace | FileChangeListeners: [0xc000012150]
2025/01/13 09:51:16 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:51:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:51:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:51:16 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:51:16 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:51:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:51:16 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:51:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:51:16 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:51:16 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:51:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:51:16 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:51:16 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:51:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:51:16 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:51:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":46,"character":22}}}
2025/01/13 09:51:16 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:51:16 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:51:16 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:51:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 \"Kategorisierung der MedienEnum Category in Package de.library.management.media\") category\nsad\n\n\n"},"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":22}}}}
2025/01/13 09:51:16 hoverService.go:136: Trace | Finished Hover with Content: 
#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 "Kategorisierung der MedienEnum Category in Package de.library.management.media") category
sad



2025/01/13 09:51:16 util.go:36: Trace | Read Content-Length: 356 from Content-Length: 356
2025/01/13 09:51:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 \"Kategorisierung der MedienEnum Category in Package de.library.management.media\") category\nsad\n\n\n"},"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":22}}}}
2025/01/13 09:52:31 fileService.go:35: Trace | FileChangeListeners: [0xc000134138]
2025/01/13 09:52:31 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:52:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:52:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:52:31 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:52:31 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:52:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:52:31 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:52:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:52:31 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:52:31 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:52:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:52:31 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:52:31 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:52:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:52:31 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:52:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":46,"character":22}}}
2025/01/13 09:52:31 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:52:31 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:52:31 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:52:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 \"Kategorisierung der MedienEnum Category in Package de.library.management.media\") category\nsad\n\n\n"},"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":22}}}}
2025/01/13 09:52:31 hoverService.go:136: Trace | Finished Hover with Content: 
#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 "Kategorisierung der MedienEnum Category in Package de.library.management.media") category
sad



2025/01/13 09:52:31 util.go:36: Trace | Read Content-Length: 356 from Content-Length: 356
2025/01/13 09:52:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 \"Kategorisierung der MedienEnum Category in Package de.library.management.media\") category\nsad\n\n\n"},"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":22}}}}
2025/01/13 09:52:35 fileService.go:35: Trace | FileChangeListeners: [0xc000132138]
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:52:35 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 890 from Content-Length: 890
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","languageId":"dmf","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        entity Person implements Inte {\n            arg int i;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Inte  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/13 09:52:35 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:52:35 fileService.go:88: Trace | Create FileHandle for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:52:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 264 from Content-Length: 264
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":1,"character":31},"end":{"line":1,"character":32}},"rangeLength":1,"text":""}]}}
2025/01/13 09:52:35 server.go:106: INFO  | Handle Method: textDocument/didChange 
2025/01/13 09:52:35 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":2,"diagnostics":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":5}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:2:0\nmodel\n^^^^^\nkeine Model Deklaration vorhanden\n","message":"keine Model Deklaration vorhanden"},{"range":{"start":{"line":1,"character":6},"end":{"line":1,"character":7}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:2:6\n\"\n^\nkein Inhalt im Package\n","message":"kein Inhalt im Package"},{"range":{"start":{"line":1,"character":7},"end":{"line":1,"character":17}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:2:7\ndp_success\n^^^^^^^^^^\nkein Inhalt im Package:string_content_double_quote\n","message":"kein Inhalt im Package:string_content_double_quote"},{"range":{"start":{"line":1,"character":17},"end":{"line":1,"character":18}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:2:17\n\"\n^\nkein Inhalt im Package\n","message":"kein Inhalt im Package"}]}}
2025/01/13 09:52:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 44 34 99 104 97 114 97 99 116 101 114 34 58 48 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 44 34 99 104 97 114 97 99 116 101 114 34 58 53 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 50 58 48 92 110 109 111 100 101 108 92 110 94 94 94 94 94 92 110 107 101 105 110 101 32 77 111 100 101 108 32 68 101 107 108 97 114 97 116 105 111 110 32 118 111 114 104 97 110 100 101 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 107 101 105 110 101 32 77 111 100 101 108 32 68 101 107 108 97 114 97 116 105 111 110 32 118 111 114 104 97 110 100 101 110 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 44 34 99 104 97 114 97 99 116 101 114 34 58 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 44 34 99 104 97 114 97 99 116 101 114 34 58 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 50 58 54 92 110 92 34 92 110 94 92 110 107 101 105 110 32 73 110 104 97 108 116 32 105 109 32 80 97 99 107 97 103 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 107 101 105 110 32 73 110 104 97 108 116 32 105 109 32 80 97 99 107 97 103 101 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 44 34 99 104 97 114 97 99 116 101 114 34 58 55 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 44 34 99 104 97 114 97 99 116 101 114 34 58 49 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 50 58 55 92 110 100 112 95 115 117 99 99 101 115 115 92 110 94 94 94 94 94 94 94 94 94 94 92 110 107 101 105 110 32 73 110 104 97 108 116 32 105 109 32 80 97 99 107 97 103 101 58 115 116 114 105 110 103 95 99 111 110 116 101 110 116 95 100 111 117 98 108 101 95 113 117 111 116 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 107 101 105 110 32 73 110 104 97 108 116 32 105 109 32 80 97 99 107 97 103 101 58 115 116 114 105 110 103 95 99 111 110 116 101 110 116 95 100 111 117 98 108 101 95 113 117 111 116 101 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 44 34 99 104 97 114 97 99 116 101 114 34 58 49 55 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 44 34 99 104 97 114 97 99 116 101 114 34 58 49 56 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 50 58 49 55 92 110 92 34 92 110 94 92 110 107 101 105 110 32 73 110 104 97 108 116 32 105 109 32 80 97 99 107 97 103 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 107 101 105 110 32 73 110 104 97 108 116 32 105 109 32 80 97 99 107 97 103 101 34 125 93 125] <nil> <nil>}
2025/01/13 09:52:35 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:/Code/DMF/intellijTest/test.dmf:2:0
model
^^^^^
keine Model Deklaration vorhanden

2025/01/13 09:52:35 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:/Code/DMF/intellijTest/test.dmf:2:6
"
^
kein Inhalt im Package

2025/01/13 09:52:35 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:/Code/DMF/intellijTest/test.dmf:2:7
dp_success
^^^^^^^^^^
kein Inhalt im Package:string_content_double_quote

2025/01/13 09:52:35 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:/Code/DMF/intellijTest/test.dmf:2:17
"
^
kein Inhalt im Package

2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 265 from Content-Length: 265
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":3,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":1,"character":31},"end":{"line":1,"character":31}},"rangeLength":0,"text":"1"}]}}
2025/01/13 09:52:35 server.go:106: INFO  | Handle Method: textDocument/didChange 
2025/01/13 09:52:35 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":3,"diagnostics":[]}}
2025/01/13 09:52:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:52:35 fileService.go:35: Trace | FileChangeListeners: [0xc0002084f8]
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:52:35 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:52:35 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:52:35 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:52:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":53,"character":16}}}
2025/01/13 09:52:35 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:52:35 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:52:35 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:52:35 hoverService.go:269: Trace | IdentifierElementMarkdown Nodes: &{{[1345 53 12 0] 0x7f515c017ac8 0x7f515c030740}}(identifier_statement) entity_block
2025/01/13 09:52:35 hoverService.go:270: Trace | IdentifierElementMarkdown LookUp: map[de.library.management:0xc0002209a0 de.library.management.media:0xc000220850 de.library.management.media.Book:0xc0002a25a0 de.library.management.media.Category:0xc00020cf30 de.library.management.media.Magazine:0xc0002a26c0 de.library.management.media.MediaItem:0xc000292d20 de.library.management.media.MediaType:0xc00020ce10 de.library.management.users:0xc0002208c0 de.library.management.users.Address:0xc000292e10 de.library.management.users.MembershipType:0xc00020d0e0 de.library.management.users.User:0xc0002a2a20 de.library.management.users.UserStatus:0xc00020d200]
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n#### Identifier von [Book](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L44)\n\n---\n* **string [isbn](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L15)**\n\n* **int [copyNumber](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L18)**\n\n\n"},"range":{"start":{"line":53,"character":16},"end":{"line":53,"character":16}}}}
2025/01/13 09:52:35 hoverService.go:136: Trace | Finished Hover with Content: 
#### Identifier von [Book](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L44)

---
* **string [isbn](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L15)**

* **int [copyNumber](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L18)**



2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 482 from Content-Length: 482
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n#### Identifier von [Book](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L44)\n\n---\n* **string [isbn](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L15)**\n\n* **int [copyNumber](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L18)**\n\n\n"},"range":{"start":{"line":53,"character":16},"end":{"line":53,"character":16}}}}
2025/01/13 09:52:35 fileService.go:35: Trace | FileChangeListeners: [0xc000208f18]
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:52:35 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:52:35 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:52:35 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:52:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":43,"character":15}}}
2025/01/13 09:52:35 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:52:35 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:52:35 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n#### Book\n###### Entity in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)\nDetaillierte Buchinformationen\n\n"},"range":{"start":{"line":43,"character":15},"end":{"line":43,"character":15}}}}
2025/01/13 09:52:35 hoverService.go:136: Trace | Finished Hover with Content: 
#### Book
###### Entity in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)
Detaillierte Buchinformationen


2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 339 from Content-Length: 339
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n#### Book\n###### Entity in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)\nDetaillierte Buchinformationen\n\n"},"range":{"start":{"line":43,"character":15},"end":{"line":43,"character":15}}}}
2025/01/13 09:52:35 fileService.go:35: Trace | FileChangeListeners: [0xc0002098d8]
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:52:35 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:52:35 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:52:35 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:52:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 203 from Content-Length: 203
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":14,"character":4}}}
2025/01/13 09:52:35 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:52:35 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:52:35 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### MediaItem\n###### Struct in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)\nBasisstruktur f체r alle Medientypen\n\n"},"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":4}}}}
2025/01/13 09:52:35 hoverService.go:136: Trace | Finished Hover with Content: 
#### MediaItem
###### Struct in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)
Basisstruktur f체r alle Medientypen


2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 347 from Content-Length: 347
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### MediaItem\n###### Struct in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)\nBasisstruktur f체r alle Medientypen\n\n"},"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":4}}}}
2025/01/13 09:52:35 fileService.go:35: Trace | FileChangeListeners: [0xc00032a318]
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:52:35 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:52:35 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:52:35 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:52:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":39,"character":14}}}
2025/01/13 09:52:35 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:52:35 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:52:35 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:52:35 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/13 09:52:35 hoverService.go:372: Trace | Index 0 Argumente: 1
2025/01/13 09:52:35 hoverService.go:373: Trace | Value: {ModelElement:{Kommentar:<nil> Node:0xc000358880} Ignored:false Value:5}
2025/01/13 09:52:35 hoverService.go:372: Trace | Index 1 Argumente: 1
2025/01/13 09:52:35 hoverService.go:373: Trace | Value: {ModelElement:{Kommentar:<nil> Node:0xc000358980} Value:Geschichte}
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### HISTORY\n###### In [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34)\n\n\n**[Index]()**: 5\u003cbr\u003e\n**[name](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L35)**: Geschichte\u003cbr\u003e\n\n"},"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":14}}}}
2025/01/13 09:52:35 hoverService.go:136: Trace | Finished Hover with Content: 
#### HISTORY
###### In [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34)


**[Index]()**: 5<br>
**[name](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L35)**: Geschichte<br>


2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 429 from Content-Length: 429
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### HISTORY\n###### In [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34)\n\n\n**[Index]()**: 5\u003cbr\u003e\n**[name](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L35)**: Geschichte\u003cbr\u003e\n\n"},"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":14}}}}
2025/01/13 09:52:35 fileService.go:35: Trace | FileChangeListeners: [0xc00032acd8]
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:52:35 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:52:35 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:52:35 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:52:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":46,"character":22}}}
2025/01/13 09:52:35 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:52:35 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:52:35 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:52:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 \"Kategorisierung der MedienEnum Category in Package de.library.management.media\") category\nsad\n\n\n"},"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":22}}}}
2025/01/13 09:52:35 hoverService.go:136: Trace | Finished Hover with Content: 
#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 "Kategorisierung der MedienEnum Category in Package de.library.management.media") category
sad



2025/01/13 09:52:35 util.go:36: Trace | Read Content-Length: 356 from Content-Length: 356
2025/01/13 09:52:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 \"Kategorisierung der MedienEnum Category in Package de.library.management.media\") category\nsad\n\n\n"},"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":22}}}}
2025/01/13 09:53:28 fileService.go:35: Trace | FileChangeListeners: [0xc0000121c8]
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:53:28 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:53:28 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:53:28 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:53:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":53,"character":16}}}
2025/01/13 09:53:28 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:53:28 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:53:28 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:53:28 hoverService.go:269: Trace | IdentifierElementMarkdown Nodes: &{{[1345 53 12 0] 0x3fb65428 0x3fb7dc50}}(identifier_statement) entity_block
2025/01/13 09:53:28 hoverService.go:270: Trace | IdentifierElementMarkdown LookUp: map[de.library.management:0xc0000b1490 de.library.management.media:0xc0000b1340 de.library.management.media.Book:0xc000181d40 de.library.management.media.Category:0xc0001b22d0 de.library.management.media.Magazine:0xc000181e60 de.library.management.media.MediaItem:0xc0000cec30 de.library.management.media.MediaType:0xc0001b21b0 de.library.management.users:0xc0000b13b0 de.library.management.users.Address:0xc0000ced20 de.library.management.users.MembershipType:0xc0001b2480 de.library.management.users.User:0xc0001ca240 de.library.management.users.UserStatus:0xc0001b25a0]
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n#### Identifier von [Book](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L44)\n\n---\n* **string [isbn](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L15)**\n\n* **int [copyNumber](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L18)**\n\n\n"},"range":{"start":{"line":53,"character":16},"end":{"line":53,"character":16}}}}
2025/01/13 09:53:28 hoverService.go:136: Trace | Finished Hover with Content: 
#### Identifier von [Book](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L44)

---
* **string [isbn](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L15)**

* **int [copyNumber](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L18)**



2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 482 from Content-Length: 482
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n#### Identifier von [Book](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L44)\n\n---\n* **string [isbn](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L15)**\n\n* **int [copyNumber](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L18)**\n\n\n"},"range":{"start":{"line":53,"character":16},"end":{"line":53,"character":16}}}}
2025/01/13 09:53:28 fileService.go:35: Trace | FileChangeListeners: [0xc000013ab8]
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:53:28 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:53:28 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:53:28 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:53:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":43,"character":15}}}
2025/01/13 09:53:28 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:53:28 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:53:28 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n#### Book\n###### Entity in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)\nDetaillierte Buchinformationen\n\n"},"range":{"start":{"line":43,"character":15},"end":{"line":43,"character":15}}}}
2025/01/13 09:53:28 hoverService.go:136: Trace | Finished Hover with Content: 
#### Book
###### Entity in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)
Detaillierte Buchinformationen


2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 339 from Content-Length: 339
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n#### Book\n###### Entity in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)\nDetaillierte Buchinformationen\n\n"},"range":{"start":{"line":43,"character":15},"end":{"line":43,"character":15}}}}
2025/01/13 09:53:28 fileService.go:35: Trace | FileChangeListeners: [0xc00019e4f8]
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:53:28 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:53:28 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:53:28 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:53:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 203 from Content-Length: 203
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":14,"character":4}}}
2025/01/13 09:53:28 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:53:28 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:53:28 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### MediaItem\n###### Struct in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)\nBasisstruktur f체r alle Medientypen\n\n"},"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":4}}}}
2025/01/13 09:53:28 hoverService.go:136: Trace | Finished Hover with Content: 
#### MediaItem
###### Struct in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)
Basisstruktur f체r alle Medientypen


2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 347 from Content-Length: 347
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### MediaItem\n###### Struct in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)\nBasisstruktur f체r alle Medientypen\n\n"},"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":4}}}}
2025/01/13 09:53:28 fileService.go:35: Trace | FileChangeListeners: [0xc00019eeb8]
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:53:28 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:53:28 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:53:28 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:53:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":39,"character":14}}}
2025/01/13 09:53:28 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:53:28 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:53:28 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:53:28 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/13 09:53:28 hoverService.go:372: Trace | Index 0 Argumente: 1
2025/01/13 09:53:28 hoverService.go:373: Trace | Value: {ModelElement:{Kommentar:<nil> Node:0xc0002e07c0} Ignored:false Value:5}
2025/01/13 09:53:28 hoverService.go:372: Trace | Index 1 Argumente: 1
2025/01/13 09:53:28 hoverService.go:373: Trace | Value: {ModelElement:{Kommentar:<nil> Node:0xc0002e08c0} Value:Geschichte}
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### HISTORY\n###### In [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34)\n\n\n**[Index]()**: 5\u003cbr\u003e\n**[name](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L35)**: Geschichte\u003cbr\u003e\n\n"},"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":14}}}}
2025/01/13 09:53:28 hoverService.go:136: Trace | Finished Hover with Content: 
#### HISTORY
###### In [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34)


**[Index]()**: 5<br>
**[name](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L35)**: Geschichte<br>


2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 429 from Content-Length: 429
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### HISTORY\n###### In [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34)\n\n\n**[Index]()**: 5\u003cbr\u003e\n**[name](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L35)**: Geschichte\u003cbr\u003e\n\n"},"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":14}}}}
2025/01/13 09:53:28 fileService.go:35: Trace | FileChangeListeners: [0xc00019f878]
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:53:28 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:53:28 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:53:28 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:53:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":46,"character":22}}}
2025/01/13 09:53:28 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:53:28 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:53:28 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:53:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 \"Kategorisierung der MedienEnum Category in Package de.library.management.media\") category\nsad\n\n\n"},"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":22}}}}
2025/01/13 09:53:28 hoverService.go:136: Trace | Finished Hover with Content: 
#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 "Kategorisierung der MedienEnum Category in Package de.library.management.media") category
sad



2025/01/13 09:53:28 util.go:36: Trace | Read Content-Length: 356 from Content-Length: 356
2025/01/13 09:53:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 \"Kategorisierung der MedienEnum Category in Package de.library.management.media\") category\nsad\n\n\n"},"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":22}}}}
2025/01/13 09:53:45 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:53:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":49,"character":22}}}
2025/01/13 09:53:45 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:53:45 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:53:45 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/13 09:53:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n#### int pageCount\nasd\n\n\n"},"range":{"start":{"line":49,"character":22},"end":{"line":49,"character":22}}}}
2025/01/13 09:53:45 hoverService.go:136: Trace | Finished Hover with Content: 
#### int pageCount
asd



2025/01/13 09:54:27 fileService.go:35: Trace | FileChangeListeners: [0xc0001ac1c8]
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:54:27 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:54:27 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:54:27 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:54:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":53,"character":16}}}
2025/01/13 09:54:27 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:54:27 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:54:27 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:54:27 hoverService.go:269: Trace | IdentifierElementMarkdown Nodes: &{{[1345 53 12 0] 0xa00c428 0xa024c50}}(identifier_statement) entity_block
2025/01/13 09:54:27 hoverService.go:270: Trace | IdentifierElementMarkdown LookUp: map[de.library.management:0xc0001c1730 de.library.management.media:0xc0001c15e0 de.library.management.media.Book:0xc00021db00 de.library.management.media.Category:0xc0002522d0 de.library.management.media.Magazine:0xc00021dc20 de.library.management.media.MediaItem:0xc0001e6c30 de.library.management.media.MediaType:0xc0002521b0 de.library.management.users:0xc0001c1650 de.library.management.users.Address:0xc0001e6d20 de.library.management.users.MembershipType:0xc000252480 de.library.management.users.User:0xc000268000 de.library.management.users.UserStatus:0xc0002525a0]
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n#### Identifier von [Book](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L44)\n\n---\n* **string [isbn](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L15)**\n\n* **int [copyNumber](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L18)**\n\n\n"},"range":{"start":{"line":53,"character":16},"end":{"line":53,"character":16}}}}
2025/01/13 09:54:27 hoverService.go:136: Trace | Finished Hover with Content: 
#### Identifier von [Book](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L44)

---
* **string [isbn](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L15)**

* **int [copyNumber](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L18)**



2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 482 from Content-Length: 482
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n#### Identifier von [Book](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L44)\n\n---\n* **string [isbn](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L15)**\n\n* **int [copyNumber](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L18)**\n\n\n"},"range":{"start":{"line":53,"character":16},"end":{"line":53,"character":16}}}}
2025/01/13 09:54:27 fileService.go:35: Trace | FileChangeListeners: [0xc0001adab8]
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:54:27 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:54:27 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:54:27 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:54:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":43,"character":15}}}
2025/01/13 09:54:27 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:54:27 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:54:27 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n#### Book\n###### Entity in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)\nDetaillierte Buchinformationen\n\n"},"range":{"start":{"line":43,"character":15},"end":{"line":43,"character":15}}}}
2025/01/13 09:54:27 hoverService.go:136: Trace | Finished Hover with Content: 
#### Book
###### Entity in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)
Detaillierte Buchinformationen


2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 339 from Content-Length: 339
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n#### Book\n###### Entity in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)\nDetaillierte Buchinformationen\n\n"},"range":{"start":{"line":43,"character":15},"end":{"line":43,"character":15}}}}
2025/01/13 09:54:27 fileService.go:35: Trace | FileChangeListeners: [0xc0002a04f8]
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:54:27 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:54:27 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:54:27 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:54:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 203 from Content-Length: 203
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":14,"character":4}}}
2025/01/13 09:54:27 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:54:27 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:54:27 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### MediaItem\n###### Struct in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)\nBasisstruktur f체r alle Medientypen\n\n"},"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":4}}}}
2025/01/13 09:54:27 hoverService.go:136: Trace | Finished Hover with Content: 
#### MediaItem
###### Struct in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)
Basisstruktur f체r alle Medientypen


2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 347 from Content-Length: 347
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### MediaItem\n###### Struct in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L10)\nBasisstruktur f체r alle Medientypen\n\n"},"range":{"start":{"line":14,"character":4},"end":{"line":14,"character":4}}}}
2025/01/13 09:54:27 fileService.go:35: Trace | FileChangeListeners: [0xc0000120c0]
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:54:27 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:54:27 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:54:27 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:54:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":39,"character":14}}}
2025/01/13 09:54:27 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:54:27 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:54:27 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:54:27 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/13 09:54:27 hoverService.go:372: Trace | Index 0 Argumente: 1
2025/01/13 09:54:27 hoverService.go:373: Trace | Value: {ModelElement:{Kommentar:<nil> Node:0xc0000f58c0} Ignored:false Value:5}
2025/01/13 09:54:27 hoverService.go:372: Trace | Index 1 Argumente: 1
2025/01/13 09:54:27 hoverService.go:373: Trace | Value: {ModelElement:{Kommentar:<nil> Node:0xc0000f59c0} Value:Geschichte}
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### HISTORY\n###### In [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34)\n\n\n**[Index]()**: 5\u003cbr\u003e\n**[name](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L35)**: Geschichte\u003cbr\u003e\n\n"},"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":14}}}}
2025/01/13 09:54:27 hoverService.go:136: Trace | Finished Hover with Content: 
#### HISTORY
###### In [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34)


**[Index]()**: 5<br>
**[name](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L35)**: Geschichte<br>


2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 429 from Content-Length: 429
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### HISTORY\n###### In [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34)\n\n\n**[Index]()**: 5\u003cbr\u003e\n**[name](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L35)**: Geschichte\u003cbr\u003e\n\n"},"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":14}}}}
2025/01/13 09:54:27 fileService.go:35: Trace | FileChangeListeners: [0xc000012a80]
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:54:27 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:54:27 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:54:27 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:54:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":46,"character":22}}}
2025/01/13 09:54:27 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:54:27 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:54:27 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 \"Kategorisierung der MedienEnum Category in Package de.library.management.media\") category\nsad\n\n\n"},"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":22}}}}
2025/01/13 09:54:27 hoverService.go:136: Trace | Finished Hover with Content: 
#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 "Kategorisierung der MedienEnum Category in Package de.library.management.media") category
sad



2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 356 from Content-Length: 356
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L34 \"Kategorisierung der MedienEnum Category in Package de.library.management.media\") category\nsad\n\n\n"},"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":22}}}}
2025/01/13 09:54:27 fileService.go:35: Trace | FileChangeListeners: [0xc000013440]
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":25904,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-241.15989.150)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:54:27 server.go:150: ERROR | Error While Reading initialized Message: &{%!e(string=EOF)}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 262 from Content-Length: 262
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 3171 from Content-Length: 3171
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 09:54:27 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 09:54:27 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:54:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 182 from Content-Length: 182
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":49,"character":22}}}
2025/01/13 09:54:27 server.go:106: INFO  | Handle Method: textDocument/hover 
2025/01/13 09:54:27 hoverService.go:106: Trace | Start Get File Content
2025/01/13 09:54:27 hoverService.go:112: Trace | Start Find Node
2025/01/13 09:54:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n#### int pageCount\nasd\n\n\n"},"range":{"start":{"line":49,"character":22},"end":{"line":49,"character":22}}}}
2025/01/13 09:54:27 hoverService.go:136: Trace | Finished Hover with Content: 
#### int pageCount
asd



2025/01/13 09:54:27 util.go:36: Trace | Read Content-Length: 188 from Content-Length: 188
2025/01/13 09:54:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n#### int pageCount\nasd\n\n\n"},"range":{"start":{"line":49,"character":22},"end":{"line":49,"character":22}}}}
2025/01/13 09:59:41 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/13 09:59:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"shutdown","params":null}
2025/01/13 09:59:41 server.go:90: INFO  | Received Shutdown Request
2025/01/13 09:59:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6"}
2025/01/13 09:59:41 server.go:77: INFO  | Server Closed
2025/01/13 09:59:41 main.go:28: Server Shutdown
2025/01/13 10:02:34 fileService.go:35: Trace | FileChangeListeners: [0xc0000be0d8]
2025/01/13 10:02:34 util.go:36: Trace | Read Content-Length: 3705 from Content-Length: 3705
2025/01/13 10:02:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":20136,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 10:02:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 10:02:34 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/13 10:02:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/13 10:02:34 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 10:02:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 10:02:34 server.go:103: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 10:02:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 10:02:34 util.go:36: Trace | Read Content-Length: 1166 from Content-Length: 1166
2025/01/13 10:02:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar 체ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund {\n\n         }\n    }\n}"}}}
2025/01/13 10:02:34 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 10:02:34 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/13 10:02:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/13 10:02:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 10:02:34 util.go:36: Trace | Read Content-Length: 3167 from Content-Length: 3167
2025/01/13 10:02:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\n\npackage de.library.management {\n\n    // Basispaket f체r Medienverwaltung\n    // asdas d\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur f체r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n            arg double asd;\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem{\n            arg string author;\n            // sad\n            ref .Category category;\n            ref .MediaType type;\n            // asd\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // Benutzerentit채t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/13 10:02:34 server.go:106: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 10:02:34 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/13 10:02:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/13 10:02:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 10:02:34 util.go:36: Trace | Read Content-Length: 173 from Content-Length: 173
2025/01/13 10:02:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"}}}
2025/01/13 10:02:34 server.go:106: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 10:02:34 foldingService.go:196: Trace | Found 13 Comment Ranges
2025/01/13 10:02:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":[{"startLine":23,"startCharacter":24,"endLine":30,"endCharacter":8},{"startLine":33,"startCharacter":23,"endLine":40,"endCharacter":8},{"startLine":43,"startCharacter":38,"endLine":54,"endCharacter":8},{"startLine":57,"startCharacter":43,"endLine":64,"endCharacter":8},{"startLine":78,"startCharacter":29,"endLine":85,"endCharacter":8},{"startLine":88,"startCharacter":25,"endLine":93,"endCharacter":8},{"startLine":96,"startCharacter":21,"endLine":108,"endCharacter":8},{"startLine":4,"startCharacter":31,"endLine":110,"endCharacter":0},{"startLine":9,"startCharacter":19,"endLine":65,"endCharacter":4},{"startLine":12,"startCharacter":26,"endLine":20,"endCharacter":8},{"startLine":68,"startCharacter":19,"endLine":109,"endCharacter":4},{"startLine":70,"startCharacter":24,"endLine":76,"endCharacter":8},{"startLine":6,"startCharacter":6,"endLine":8,"endCharacter":34,"kind":"comment"},{"startLine":11,"startCharacter":1,"endLine":11,"endCharacter":38,"kind":"comment"},{"startLine":22,"startCharacter":1,"endLine":22,"endCharacter":27,"kind":"comment"},{"startLine":32,"startCharacter":1,"endLine":32,"endCharacter":29,"kind":"comment"},{"startLine":42,"startCharacter":1,"endLine":42,"endCharacter":33,"kind":"comment"},{"startLine":45,"startCharacter":1,"endLine":45,"endCharacter":6,"kind":"comment"},{"startLine":48,"startCharacter":1,"endLine":48,"endCharacter":6,"kind":"comment"},{"startLine":56,"startCharacter":1,"endLine":56,"endCharacter":31,"kind":"comment"},{"startLine":67,"startCharacter":1,"endLine":67,"endCharacter":21,"kind":"comment"},{"startLine":69,"startCharacter":1,"endLine":69,"endCharacter":22,"kind":"comment"},{"startLine":77,"startCharacter":1,"endLine":77,"endCharacter":30,"kind":"comment"},{"startLine":87,"startCharacter":1,"endLine":87,"endCharacter":17,"kind":"comment"},{"startLine":95,"startCharacter":1,"endLine":95,"endCharacter":19,"kind":"comment"}]}
2025/01/13 10:02:34 foldingService.go:90: Trace | Finished Folding Range
2025/01/13 10:02:49 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/13 10:02:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"shutdown","params":null}
2025/01/13 10:02:49 server.go:90: INFO  | Received Shutdown Request
2025/01/13 10:02:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3"}
2025/01/13 10:02:49 server.go:77: INFO  | Server Closed
2025/01/13 10:02:49 main.go:24: Server Shutdown
