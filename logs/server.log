2025/01/05 15:59:46 fileService.go:35: Trace | FileChangeListeners: [0xc0000c8048]
2025/01/05 15:59:47 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 15:59:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 15:59:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 15:59:47 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 15:59:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 15:59:47 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 15:59:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 15:59:47 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 15:59:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 15:59:47 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 15:59:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 15:59:47 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 15:59:47 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 15:59:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 15:59:47 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:00:05 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:00:05 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"shutdown","params":null}
2025/01/05 16:00:05 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:00:05 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2"}
2025/01/05 16:00:05 server.go:69: INFO  | Server Closed
2025/01/05 16:00:05 main.go:23: Server Shutdown
2025/01/05 16:00:06 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:00:06 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:00:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:00:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:00:06 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:00:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:00:06 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:00:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:00:06 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:00:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:00:06 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:00:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:00:06 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:00:06 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:00:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:00:06 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:00:08 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:00:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":17}}}
2025/01/05 16:00:08 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:00:08 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:00:08 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:00:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# One\n#### Struct in Package [de.alex.brand.rekur](test.dmf#L34.11)\n\n"},"range":{"start":{"line":34,"character":17},"end":{"line":34,"character":17}}}}
2025/01/05 16:00:08 hoverService.go:112: Trace | Finished Hover with Content: 
# One
#### Struct in Package [de.alex.brand.rekur](test.dmf#L34.11)


2025/01/05 16:00:13 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:00:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":37,"character":18}}}
2025/01/05 16:00:13 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:00:13 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:00:13 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:00:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# OneE\n#### Entity in Package [de.alex.brand.rekur](test.dmf#L34.11)\n\n"},"range":{"start":{"line":37,"character":18},"end":{"line":37,"character":18}}}}
2025/01/05 16:00:13 hoverService.go:112: Trace | Finished Hover with Content: 
# OneE
#### Entity in Package [de.alex.brand.rekur](test.dmf#L34.11)


2025/01/05 16:00:42 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:00:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":37,"character":16}}}
2025/01/05 16:00:42 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:00:42 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:00:42 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:00:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# OneE\n#### Entity in Package [de.alex.brand.rekur](test.dmf#L34.11)\n\n"},"range":{"start":{"line":37,"character":16},"end":{"line":37,"character":16}}}}
2025/01/05 16:00:42 hoverService.go:112: Trace | Finished Hover with Content: 
# OneE
#### Entity in Package [de.alex.brand.rekur](test.dmf#L34.11)


2025/01/05 16:00:52 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:00:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:00:52 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:00:52 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:00:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:00:52 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:00:54 util.go:36: Trace | Read Content-Length: 203 from Content-Length: 203
2025/01/05 16:00:54 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":7,"character":14}}}
2025/01/05 16:00:54 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:00:54 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:00:54 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:00:54 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n# media\n#### Package in Package [de.library.management](test.dmf#L4.19)\nBasispaket fÃ¼r Medienverwaltung\n\nDas ist ein neuer Kommentar\n\n\n"},"range":{"start":{"line":7,"character":14},"end":{"line":7,"character":14}}}}
2025/01/05 16:00:54 hoverService.go:112: Trace | Finished Hover with Content: 
# media
#### Package in Package [de.library.management](test.dmf#L4.19)
Basispaket fÃ¼r Medienverwaltung

Das ist ein neuer Kommentar



2025/01/05 16:01:29 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:01:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"shutdown","params":null}
2025/01/05 16:01:29 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:01:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6"}
2025/01/05 16:01:29 server.go:69: INFO  | Server Closed
2025/01/05 16:01:29 main.go:23: Server Shutdown
2025/01/05 16:01:29 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:01:30 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:01:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:01:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:01:30 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:01:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:01:30 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:01:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:01:30 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:01:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:01:30 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:01:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:01:30 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:01:30 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:01:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:01:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:01:30 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:01:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:01:30 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:01:30 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:01:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:01:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:01:31 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:01:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":47,"character":23}}}
2025/01/05 16:01:31 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:01:31 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:01:31 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:01:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# IGrund\n#### Interface in Package [de.alex.brand.grund](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L47)\n\n"},"range":{"start":{"line":47,"character":23},"end":{"line":47,"character":23}}}}
2025/01/05 16:01:31 hoverService.go:112: Trace | Finished Hover with Content: 
# IGrund
#### Interface in Package [de.alex.brand.grund](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L47)


2025/01/05 16:01:35 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:01:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":31}}}
2025/01/05 16:01:35 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:01:35 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:01:35 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:01:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# TwoE\n#### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":42,"character":31},"end":{"line":42,"character":31}}}}
2025/01/05 16:01:35 hoverService.go:112: Trace | Finished Hover with Content: 
# TwoE
#### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:03:47 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:03:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"shutdown","params":null}
2025/01/05 16:03:47 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:03:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4"}
2025/01/05 16:03:47 server.go:69: INFO  | Server Closed
2025/01/05 16:03:47 main.go:23: Server Shutdown
2025/01/05 16:03:48 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:03:48 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:03:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:03:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:03:48 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:03:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:03:48 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:03:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:03:48 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:03:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:03:48 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:03:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:03:48 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:03:48 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:03:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:03:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:03:48 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:03:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:03:48 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:03:48 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:03:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:03:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:03:50 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:03:50 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":17}}}
2025/01/05 16:03:50 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:03:50 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:03:50 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:03:50 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# One\n#### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34 11)\n\n"},"range":{"start":{"line":34,"character":17},"end":{"line":34,"character":17}}}}
2025/01/05 16:03:50 hoverService.go:112: Trace | Finished Hover with Content: 
# One
#### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34 11)


2025/01/05 16:04:01 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:04:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"shutdown","params":null}
2025/01/05 16:04:01 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:04:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3"}
2025/01/05 16:04:01 server.go:69: INFO  | Server Closed
2025/01/05 16:04:01 main.go:23: Server Shutdown
2025/01/05 16:04:02 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:04:02 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:04:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:04:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:04:02 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:04:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:04:02 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:04:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:04:02 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:04:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:04:02 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:04:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:04:02 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:04:02 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:04:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:04:02 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:04:02 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:04:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:04:02 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:04:02 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:04:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:04:02 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:04:04 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:04:04 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":16}}}
2025/01/05 16:04:04 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:04:04 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:04:04 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:04:04 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# One\n#### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34,11)\n\n"},"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":16}}}}
2025/01/05 16:04:04 hoverService.go:112: Trace | Finished Hover with Content: 
# One
#### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34,11)


2025/01/05 16:04:07 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:04:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":17}}}
2025/01/05 16:04:07 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:04:07 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:04:07 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:04:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# One\n#### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34,11)\n\n"},"range":{"start":{"line":34,"character":17},"end":{"line":34,"character":17}}}}
2025/01/05 16:04:07 hoverService.go:112: Trace | Finished Hover with Content: 
# One
#### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34,11)


2025/01/05 16:04:32 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:04:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":19}}}
2025/01/05 16:04:32 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:04:32 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:04:32 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:04:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# OneE\n#### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34,11)\n\n"},"range":{"start":{"line":40,"character":19},"end":{"line":40,"character":19}}}}
2025/01/05 16:04:32 hoverService.go:112: Trace | Finished Hover with Content: 
# OneE
#### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34,11)


2025/01/05 16:04:36 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:04:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":17}}}
2025/01/05 16:04:36 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:04:36 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:04:36 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:04:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n# One\n#### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34,11)\n\n"},"range":{"start":{"line":34,"character":17},"end":{"line":34,"character":17}}}}
2025/01/05 16:04:36 hoverService.go:112: Trace | Finished Hover with Content: 
# One
#### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34,11)


2025/01/05 16:04:38 util.go:36: Trace | Read Content-Length: 196 from Content-Length: 196
2025/01/05 16:04:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":4,"character":1}}}
2025/01/05 16:04:38 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:04:38 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:04:38 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:07:12 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/05 16:07:12 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:07:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:07:12 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:07:12 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:07:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:07:12 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:07:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:07:12 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:07:12 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:07:12 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:07:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:07:12 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:07:12 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:07:12 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:07:12 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:07:12 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:07:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:07:12 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:07:12 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:07:12 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:07:12 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:07:25 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:07:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"shutdown","params":null}
2025/01/05 16:07:25 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:07:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2"}
2025/01/05 16:07:25 server.go:69: INFO  | Server Closed
2025/01/05 16:07:25 main.go:26: Server Shutdown
2025/01/05 16:07:26 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:07:26 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:07:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:07:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:07:26 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:07:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:07:26 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:07:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:07:26 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:07:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:07:26 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:07:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:07:26 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:07:26 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:07:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:07:26 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:07:26 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:07:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:07:26 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:07:26 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:07:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:07:26 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:07:33 util.go:36: Trace | Read Content-Length: 196 from Content-Length: 196
2025/01/05 16:07:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":4,"character":1}}}
2025/01/05 16:07:33 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:07:33 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:07:33 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:07:33 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:07:33 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:07:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:07:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:07:33 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:07:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:07:33 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:07:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:07:33 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:07:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:07:33 util.go:36: Trace | Read Content-Length: 991 from Content-Length: 991
2025/01/05 16:07:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        \n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:07:33 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:07:33 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:07:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:07:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:07:33 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:07:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:07:33 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:07:33 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:07:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:07:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:07:33 util.go:36: Trace | Read Content-Length: 290 from Content-Length: 290
2025/01/05 16:07:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":27,"character":8},"end":{"line":27,"character":9}},"rangeLength":1,"text":""}]}}
2025/01/05 16:07:33 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:07:33 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:07:33 fileService.go:107: ERROR | Error Editing FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf: &{%!e(string=end offset calculation failed: character number 9 exceeds line length 8) %!e(*errors.errorString=&{character number 9 exceeds line length 8})}
2025/01/05 16:07:34 util.go:36: Trace | Read Content-Length: 196 from Content-Length: 196
2025/01/05 16:07:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":4,"character":1}}}
2025/01/05 16:07:34 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:07:34 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:07:34 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:07:35 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:07:35 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:07:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:07:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:07:35 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:07:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:07:35 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:07:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:07:35 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:07:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:07:35 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:07:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:07:35 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:07:35 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:07:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:07:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:07:35 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:07:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:07:35 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:07:35 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:07:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:07:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:07:35 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/05 16:07:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":27,"character":8},"end":{"line":27,"character":8}},"rangeLength":0,"text":"}"}]}}
2025/01/05 16:07:35 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:07:35 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:07:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":2,"diagnostics":[]}}
2025/01/05 16:07:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:07:36 util.go:36: Trace | Read Content-Length: 196 from Content-Length: 196
2025/01/05 16:07:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":4,"character":1}}}
2025/01/05 16:07:36 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:07:36 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:07:36 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:07:36 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/05 16:07:36 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:07:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:07:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:07:36 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:07:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:07:36 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:07:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:07:36 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:07:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:07:36 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:07:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:07:36 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:07:36 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:07:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:07:36 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:07:36 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:07:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:07:36 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:07:36 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:07:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:07:36 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:08:07 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:08:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"shutdown","params":null}
2025/01/05 16:08:07 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:08:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2"}
2025/01/05 16:08:07 server.go:69: INFO  | Server Closed
2025/01/05 16:08:07 main.go:26: Server Shutdown
2025/01/05 16:08:08 fileService.go:35: Trace | FileChangeListeners: [0xc0000c8048]
2025/01/05 16:08:08 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:08:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:08:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:08:08 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:08:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:08:08 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:08:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:08:08 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:08:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:08:08 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:08:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:08:08 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:08:08 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:08:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:08:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:08:08 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:08:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:08:08 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:08:08 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:08:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:08:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:08:47 fileService.go:35: Trace | FileChangeListeners: [0xc000134048]
2025/01/05 16:08:51 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:08:51 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"shutdown","params":null}
2025/01/05 16:08:51 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:08:51 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2"}
2025/01/05 16:08:51 server.go:69: INFO  | Server Closed
2025/01/05 16:08:51 main.go:26: Server Shutdown
2025/01/05 16:08:52 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:08:52 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:08:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:08:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:08:52 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:08:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:08:52 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:08:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:08:52 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:08:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:08:52 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:08:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:08:52 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:08:52 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:08:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:08:52 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:08:52 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:08:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:08:52 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:08:52 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:08:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:08:52 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:09:35 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:09:40 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:09:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"shutdown","params":null}
2025/01/05 16:09:40 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:09:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2"}
2025/01/05 16:09:40 server.go:69: INFO  | Server Closed
2025/01/05 16:09:40 main.go:28: Server Shutdown
2025/01/05 16:09:41 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:09:41 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:09:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:09:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:09:41 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:09:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:09:41 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:09:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:09:41 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:09:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:09:41 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:09:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:09:41 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:09:41 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:09:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:09:41 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:09:41 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:09:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:09:41 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:09:41 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:09:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:09:41 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:09:48 util.go:36: Trace | Read Content-Length: 196 from Content-Length: 196
2025/01/05 16:09:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":4,"character":1}}}
2025/01/05 16:09:48 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:09:48 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:09:48 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:09:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# brand\n#### Package in Package [de.alex]()\n\n"},"range":{"start":{"line":4,"character":1},"end":{"line":4,"character":1}}}}
2025/01/05 16:09:48 hoverService.go:112: Trace | Finished Hover with Content: 
# brand
#### Package in Package [de.alex]()


2025/01/05 16:09:58 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:09:58 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":12,"character":13}}}
2025/01/05 16:09:58 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:09:58 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:09:58 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:09:58 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# Ort\n#### Enum in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)\nKommentar von Ort\n\n\n"},"range":{"start":{"line":12,"character":13},"end":{"line":12,"character":13}}}}
2025/01/05 16:09:58 hoverService.go:112: Trace | Finished Hover with Content: 
# Ort
#### Enum in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)
Kommentar von Ort



2025/01/05 16:10:03 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:10:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":6,"character":17}}}
2025/01/05 16:10:03 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:10:03 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:10:03 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:10:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# Test\n#### Struct in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)\n\n"},"range":{"start":{"line":6,"character":17},"end":{"line":6,"character":17}}}}
2025/01/05 16:10:03 hoverService.go:112: Trace | Finished Hover with Content: 
# Test
#### Struct in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)


2025/01/05 16:10:05 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:10:05 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":14,"character":16}}}
2025/01/05 16:10:05 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:10:05 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:10:05 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:10:05 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n# Ort\n#### Enum in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)\nKommentar von Ort\n\n\n"},"range":{"start":{"line":14,"character":16},"end":{"line":14,"character":16}}}}
2025/01/05 16:10:05 hoverService.go:112: Trace | Finished Hover with Content: 
# Ort
#### Enum in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)
Kommentar von Ort



2025/01/05 16:10:21 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:10:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":6,"character":18}}}
2025/01/05 16:10:21 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:10:21 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:10:21 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:10:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n# Test\n#### Struct in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)\n\n"},"range":{"start":{"line":6,"character":18},"end":{"line":6,"character":18}}}}
2025/01/05 16:10:21 hoverService.go:112: Trace | Finished Hover with Content: 
# Test
#### Struct in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)


2025/01/05 16:10:22 util.go:36: Trace | Read Content-Length: 196 from Content-Length: 196
2025/01/05 16:10:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":4,"character":0}}}
2025/01/05 16:10:22 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:10:22 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:10:22 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:10:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"\n# brand\n#### Package in Package [de.alex]()\n\n"},"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":0}}}}
2025/01/05 16:10:22 hoverService.go:112: Trace | Finished Hover with Content: 
# brand
#### Package in Package [de.alex]()


2025/01/05 16:10:27 util.go:36: Trace | Read Content-Length: 196 from Content-Length: 196
2025/01/05 16:10:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":7,"character":0}}}
2025/01/05 16:10:27 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:10:27 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:10:27 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:10:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"contents":{"kind":"markdown","value":"\n# Test\n#### Struct in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)\n\n"},"range":{"start":{"line":7,"character":0},"end":{"line":7,"character":0}}}}
2025/01/05 16:10:27 hoverService.go:112: Trace | Finished Hover with Content: 
# Test
#### Struct in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)


2025/01/05 16:10:28 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:10:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":4,"character":19}}}
2025/01/05 16:10:28 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:10:28 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:10:28 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:10:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":{"contents":{"kind":"markdown","value":"\n# other\n#### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)\n\n"},"range":{"start":{"line":4,"character":19},"end":{"line":4,"character":19}}}}
2025/01/05 16:10:28 hoverService.go:112: Trace | Finished Hover with Content: 
# other
#### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)


2025/01/05 16:10:30 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:10:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":3,"character":0}}}
2025/01/05 16:10:30 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:10:30 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:10:30 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:10:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10","result":{"contents":{"kind":"markdown","value":"\n# brand\n#### Package in Package [de.alex]()\n\n"},"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":0}}}}
2025/01/05 16:10:30 hoverService.go:112: Trace | Finished Hover with Content: 
# brand
#### Package in Package [de.alex]()


2025/01/05 16:10:32 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:10:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":3,"character":20}}}
2025/01/05 16:10:32 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:10:32 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:10:32 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:10:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"11","result":{"contents":{"kind":"markdown","value":"\n# brand\n#### Package in Package [de.alex]()\n\n"},"range":{"start":{"line":3,"character":20},"end":{"line":3,"character":20}}}}
2025/01/05 16:10:32 hoverService.go:112: Trace | Finished Hover with Content: 
# brand
#### Package in Package [de.alex]()


2025/01/05 16:10:33 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:10:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"12","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":3,"character":6}}}
2025/01/05 16:10:33 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:10:33 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:10:33 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:10:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"12","result":{"contents":{"kind":"markdown","value":"\n# brand\n#### Package in Package [de.alex]()\n\n"},"range":{"start":{"line":3,"character":6},"end":{"line":3,"character":6}}}}
2025/01/05 16:10:33 hoverService.go:112: Trace | Finished Hover with Content: 
# brand
#### Package in Package [de.alex]()


2025/01/05 16:10:33 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:10:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"13","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":3,"character":20}}}
2025/01/05 16:10:33 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:10:33 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:10:33 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:10:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"13","result":{"contents":{"kind":"markdown","value":"\n# brand\n#### Package in Package [de.alex]()\n\n"},"range":{"start":{"line":3,"character":20},"end":{"line":3,"character":20}}}}
2025/01/05 16:10:33 hoverService.go:112: Trace | Finished Hover with Content: 
# brand
#### Package in Package [de.alex]()


2025/01/05 16:10:36 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:10:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"14","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":16}}}
2025/01/05 16:10:36 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:10:36 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:10:36 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:10:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"14","result":{"contents":{"kind":"markdown","value":"\n# One\n#### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":16}}}}
2025/01/05 16:10:36 hoverService.go:112: Trace | Finished Hover with Content: 
# One
#### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:10:38 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:10:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"15","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":33,"character":0}}}
2025/01/05 16:10:38 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:10:38 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:10:38 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:10:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"15","result":{"contents":{"kind":"markdown","value":"\n# brand\n#### Package in Package [de.alex]()\n\n"},"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":0}}}}
2025/01/05 16:10:38 hoverService.go:112: Trace | Finished Hover with Content: 
# brand
#### Package in Package [de.alex]()


2025/01/05 16:10:39 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:10:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"16","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":19,"character":19}}}
2025/01/05 16:10:39 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:10:39 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:10:39 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:10:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"16","result":{"contents":{"kind":"markdown","value":"\n# Person\n#### Entity in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)\nKommentar Ã¼ber Person\n\n\n"},"range":{"start":{"line":19,"character":19},"end":{"line":19,"character":19}}}}
2025/01/05 16:10:39 hoverService.go:112: Trace | Finished Hover with Content: 
# Person
#### Entity in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)
Kommentar Ã¼ber Person



2025/01/05 16:10:48 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:10:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"17","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":33,"character":0}}}
2025/01/05 16:10:48 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:10:48 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:10:48 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:10:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"17","result":{"contents":{"kind":"markdown","value":"\n# brand\n#### Package in Package [de.alex]()\n\n"},"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":0}}}}
2025/01/05 16:10:48 hoverService.go:112: Trace | Finished Hover with Content: 
# brand
#### Package in Package [de.alex]()


2025/01/05 16:10:59 util.go:36: Trace | Read Content-Length: 61 from Content-Length: 61
2025/01/05 16:10:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"18","method":"shutdown","params":null}
2025/01/05 16:10:59 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:10:59 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"18"}
2025/01/05 16:10:59 server.go:69: INFO  | Server Closed
2025/01/05 16:10:59 main.go:28: Server Shutdown
2025/01/05 16:11:00 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:11:00 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:11:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:11:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:11:00 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:11:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:11:00 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:11:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:11:00 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:11:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:11:00 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:11:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:11:00 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:11:00 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:11:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:11:00 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:11:00 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:11:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:11:00 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:11:00 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:11:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:11:00 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:11:02 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:11:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":19,"character":18}}}
2025/01/05 16:11:02 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:11:02 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:11:02 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:11:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# Person\n##### Entity in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)\nKommentar Ã¼ber Person\n\n\n"},"range":{"start":{"line":19,"character":18},"end":{"line":19,"character":18}}}}
2025/01/05 16:11:02 hoverService.go:112: Trace | Finished Hover with Content: 
# Person
##### Entity in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)
Kommentar Ã¼ber Person



2025/01/05 16:11:05 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:11:05 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":33,"character":0}}}
2025/01/05 16:11:05 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:11:05 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:11:05 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:11:05 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# brand\n##### Package in Package [de.alex]()\n\n"},"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":0}}}}
2025/01/05 16:11:05 hoverService.go:112: Trace | Finished Hover with Content: 
# brand
##### Package in Package [de.alex]()


2025/01/05 16:11:08 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:11:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":21,"character":18}}}
2025/01/05 16:11:08 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:11:08 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:11:08 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:11:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# Person\n##### Entity in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)\nKommentar Ã¼ber Person\n\n\n"},"range":{"start":{"line":21,"character":18},"end":{"line":21,"character":18}}}}
2025/01/05 16:11:08 hoverService.go:112: Trace | Finished Hover with Content: 
# Person
##### Entity in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)
Kommentar Ã¼ber Person



2025/01/05 16:11:10 util.go:36: Trace | Read Content-Length: 196 from Content-Length: 196
2025/01/05 16:11:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":3,"character":9}}}
2025/01/05 16:11:10 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:11:10 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:11:10 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:11:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n# brand\n##### Package in Package [de.alex]()\n\n"},"range":{"start":{"line":3,"character":9},"end":{"line":3,"character":9}}}}
2025/01/05 16:11:10 hoverService.go:112: Trace | Finished Hover with Content: 
# brand
##### Package in Package [de.alex]()


2025/01/05 16:11:13 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:11:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":21,"character":18}}}
2025/01/05 16:11:13 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:11:13 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:11:13 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:11:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n# Person\n##### Entity in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)\nKommentar Ã¼ber Person\n\n\n"},"range":{"start":{"line":21,"character":18},"end":{"line":21,"character":18}}}}
2025/01/05 16:11:13 hoverService.go:112: Trace | Finished Hover with Content: 
# Person
##### Entity in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)
Kommentar Ã¼ber Person



2025/01/05 16:12:34 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:12:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":23}}}
2025/01/05 16:12:34 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:12:34 hoverService.go:81: Trace | Start Get File Content
2025/01/05 16:12:34 hoverService.go:87: %!S(string=Trace | )tart Find Node
2025/01/05 16:12:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"\n# TwoE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":42,"character":23},"end":{"line":42,"character":23}}}}
2025/01/05 16:12:34 hoverService.go:112: Trace | Finished Hover with Content: 
# TwoE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:39:32 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:39:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"shutdown","params":null}
2025/01/05 16:39:32 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:39:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8"}
2025/01/05 16:39:32 server.go:69: INFO  | Server Closed
2025/01/05 16:39:32 main.go:28: Server Shutdown
2025/01/05 16:39:33 fileService.go:35: Trace | FileChangeListeners: [0xc0000c8048]
2025/01/05 16:39:34 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:39:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:39:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:39:34 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:39:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:39:34 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:39:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:39:34 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:39:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:39:34 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:39:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:39:34 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:39:34 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:39:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:39:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:39:34 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:39:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:39:34 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:39:34 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:39:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:39:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:39:37 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:39:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":16}}}
2025/01/05 16:39:37 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:39:37 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:39:37 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:39:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# One\n##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":16}}}}
2025/01/05 16:39:37 hoverService.go:117: Trace | Finished Hover with Content: 
# One
##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:39:40 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:39:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":15}}}
2025/01/05 16:39:40 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:39:40 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:39:40 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:39:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# One\n##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":34,"character":15},"end":{"line":34,"character":15}}}}
2025/01/05 16:39:40 hoverService.go:117: Trace | Finished Hover with Content: 
# One
##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:39:40 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:39:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":38,"character":14}}}
2025/01/05 16:39:40 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:39:40 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:39:40 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:39:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":38,"character":14},"end":{"line":38,"character":14}}}}
2025/01/05 16:39:40 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:39:41 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:39:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":36,"character":0}}}
2025/01/05 16:39:41 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:39:41 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:39:41 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:39:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n# rekur\n##### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)\n\n"},"range":{"start":{"line":36,"character":0},"end":{"line":36,"character":0}}}}
2025/01/05 16:39:41 hoverService.go:117: Trace | Finished Hover with Content: 
# rekur
##### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)


2025/01/05 16:39:45 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:39:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":17}}}
2025/01/05 16:39:45 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:39:45 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:39:45 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:39:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n# TwoE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":43,"character":17},"end":{"line":43,"character":17}}}}
2025/01/05 16:39:45 hoverService.go:117: Trace | Finished Hover with Content: 
# TwoE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:39:47 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:39:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":23}}}
2025/01/05 16:39:47 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:39:47 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:39:47 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:39:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"\n# TwoE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":42,"character":23},"end":{"line":42,"character":23}}}}
2025/01/05 16:39:47 hoverService.go:117: Trace | Finished Hover with Content: 
# TwoE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:39:48 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:39:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":22}}}
2025/01/05 16:39:48 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:39:48 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:39:48 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:39:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":40,"character":22},"end":{"line":40,"character":22}}}}
2025/01/05 16:39:48 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:39:49 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:39:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":20}}}
2025/01/05 16:39:49 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:39:49 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:39:49 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:39:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":{"contents":{"kind":"markdown","value":"\n# TwoE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":43,"character":20},"end":{"line":43,"character":20}}}}
2025/01/05 16:39:49 hoverService.go:117: Trace | Finished Hover with Content: 
# TwoE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:39:50 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:39:50 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":19}}}
2025/01/05 16:39:50 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:39:50 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:39:50 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:39:50 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10","result":{"contents":{"kind":"markdown","value":"\n# TwoE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":43,"character":19},"end":{"line":43,"character":19}}}}
2025/01/05 16:39:50 hoverService.go:117: Trace | Finished Hover with Content: 
# TwoE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:39:59 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:39:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":20}}}
2025/01/05 16:39:59 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:39:59 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:39:59 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:39:59 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"11","result":{"contents":{"kind":"markdown","value":"\n# TwoE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":43,"character":20},"end":{"line":43,"character":20}}}}
2025/01/05 16:39:59 hoverService.go:117: Trace | Finished Hover with Content: 
# TwoE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:40:13 util.go:36: Trace | Read Content-Length: 61 from Content-Length: 61
2025/01/05 16:40:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"12","method":"shutdown","params":null}
2025/01/05 16:40:13 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:40:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"12"}
2025/01/05 16:40:13 server.go:69: INFO  | Server Closed
2025/01/05 16:40:13 main.go:28: Server Shutdown
2025/01/05 16:40:14 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/05 16:40:14 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:40:14 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:40:14 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:40:14 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:40:14 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:40:14 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:40:14 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:40:14 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:40:14 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:40:14 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:40:14 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:40:14 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:40:14 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:40:14 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:40:14 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:40:14 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:40:14 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:40:14 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:40:14 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:40:14 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:40:14 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:40:16 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:40:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":18}}}
2025/01/05 16:40:16 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:40:16 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:40:16 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:40:17 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:40:17 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:40:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:40:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:40:17 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:40:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:40:17 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:40:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:40:17 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:40:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:40:17 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:40:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:40:17 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:40:17 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:40:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:40:17 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:40:17 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:40:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:40:17 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:40:17 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:40:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:40:17 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:40:19 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:40:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":22}}}
2025/01/05 16:40:19 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:40:19 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:40:19 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:40:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# TwoE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":22}}}}
2025/01/05 16:40:19 hoverService.go:117: Trace | Finished Hover with Content: 
# TwoE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:40:19 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:40:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":39,"character":19}}}
2025/01/05 16:40:19 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:40:19 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:40:19 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:40:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":39,"character":19},"end":{"line":39,"character":19}}}}
2025/01/05 16:40:19 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:40:23 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:40:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":17}}}
2025/01/05 16:40:23 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:40:23 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:40:23 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:40:23 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:40:24 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:40:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:40:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:40:24 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:40:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:40:24 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:40:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:40:24 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:40:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:40:24 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:40:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:40:24 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:40:24 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:40:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:40:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:40:24 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:40:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:40:24 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:40:24 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:40:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:40:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:40:25 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:40:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":19}}}
2025/01/05 16:40:25 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:40:25 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:40:25 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:40:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# TwoE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":42,"character":19},"end":{"line":42,"character":19}}}}
2025/01/05 16:40:25 hoverService.go:117: Trace | Finished Hover with Content: 
# TwoE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:40:27 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:40:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":17}}}
2025/01/05 16:40:27 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:40:27 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:40:27 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:40:32 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:40:32 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:40:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:40:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:40:32 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:40:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:40:32 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:40:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:40:32 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:40:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:40:32 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:40:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:40:32 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:40:32 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:40:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:40:32 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:40:32 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:40:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:40:32 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:40:32 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:40:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:40:32 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:40:33 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:40:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":17}}}
2025/01/05 16:40:33 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:40:33 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:40:33 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:40:43 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:40:43 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:40:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:40:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:40:43 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:40:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:40:43 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:40:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:40:43 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:40:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:40:43 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:40:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:40:43 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:40:43 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:40:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:40:43 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:40:43 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:40:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:40:43 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:40:43 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:40:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:40:43 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:40:44 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:40:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":17}}}
2025/01/05 16:40:44 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:40:44 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:40:44 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:41:09 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/05 16:41:09 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:41:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:41:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:41:09 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:41:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:41:09 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:41:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:41:09 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:41:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:41:09 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:41:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:41:09 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:41:09 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:41:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:41:09 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:41:09 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:41:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:41:09 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:41:09 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:41:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:41:09 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:41:10 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:41:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":17}}}
2025/01/05 16:41:10 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:41:10 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:41:10 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:41:12 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:41:12 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:41:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:41:12 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:41:12 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:41:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:41:12 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:41:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:41:12 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:41:12 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:41:12 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:41:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:41:12 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:41:12 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:41:12 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:41:12 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:41:12 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:41:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:41:12 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:41:12 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:41:12 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:41:12 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:41:13 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:41:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":17}}}
2025/01/05 16:41:13 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:41:13 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:41:13 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:41:13 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/05 16:41:13 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:41:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:41:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:41:13 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:41:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:41:13 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:41:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:41:13 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:41:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:41:13 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:41:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:41:13 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:41:13 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:41:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:41:13 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:41:13 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:41:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:41:13 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:41:13 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:41:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:41:13 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:41:15 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:41:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":17}}}
2025/01/05 16:41:15 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:41:15 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:41:15 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:41:23 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:41:23 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:41:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:41:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:41:23 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:41:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:41:23 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:41:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:41:23 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:41:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:41:23 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:41:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:41:23 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:41:23 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:41:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:41:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:41:23 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:41:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:41:23 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:41:23 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:41:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:41:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:41:24 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:41:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":17}}}
2025/01/05 16:41:24 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:41:24 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:41:24 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:10 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:42:10 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:42:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:42:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:42:10 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:42:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:42:10 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:42:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:42:10 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:42:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:42:10 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:42:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:42:10 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:42:10 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:42:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:42:10 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:42:10 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:42:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:42:10 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:42:10 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:42:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:42:10 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:42:13 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:42:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":14}}}
2025/01/05 16:42:13 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:13 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:13 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [TwoE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)_\n\n\n"},"range":{"start":{"line":43,"character":14},"end":{"line":43,"character":14}}}}
2025/01/05 16:42:13 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [TwoE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)_



2025/01/05 16:42:20 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:42:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":0}}}
2025/01/05 16:42:20 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:20 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:20 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# TwoE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":43,"character":0},"end":{"line":43,"character":0}}}}
2025/01/05 16:42:20 hoverService.go:117: Trace | Finished Hover with Content: 
# TwoE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:42:25 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:42:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":13}}}
2025/01/05 16:42:25 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:25 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:25 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n"},"range":{"start":{"line":40,"character":13},"end":{"line":40,"character":13}}}}
2025/01/05 16:42:25 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_



2025/01/05 16:42:27 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:42:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":0}}}
2025/01/05 16:42:27 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:27 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:27 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":0}}}}
2025/01/05 16:42:27 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:42:29 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:42:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":16}}}
2025/01/05 16:42:29 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:29 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:29 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n"},"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":16}}}}
2025/01/05 16:42:29 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_



2025/01/05 16:42:32 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:42:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":0}}}
2025/01/05 16:42:32 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:32 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:32 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":0}}}}
2025/01/05 16:42:32 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:42:34 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:42:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":16}}}
2025/01/05 16:42:34 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:34 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:34 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n"},"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":16}}}}
2025/01/05 16:42:34 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_



2025/01/05 16:42:37 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:42:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":0}}}
2025/01/05 16:42:37 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:37 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:37 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":40,"character":0},"end":{"line":40,"character":0}}}}
2025/01/05 16:42:37 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:42:40 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:42:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":7}}}
2025/01/05 16:42:40 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:40 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:40 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":40,"character":7},"end":{"line":40,"character":7}}}}
2025/01/05 16:42:40 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:42:41 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:42:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":15}}}
2025/01/05 16:42:41 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:41 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:41 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"11","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n"},"range":{"start":{"line":40,"character":15},"end":{"line":40,"character":15}}}}
2025/01/05 16:42:41 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_



2025/01/05 16:42:42 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:42:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"12","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":26}}}
2025/01/05 16:42:42 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:42 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:42 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"12","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n"},"range":{"start":{"line":40,"character":26},"end":{"line":40,"character":26}}}}
2025/01/05 16:42:42 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_



2025/01/05 16:42:44 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:42:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"13","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":37,"character":0}}}
2025/01/05 16:42:44 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:44 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:44 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"13","result":{"contents":{"kind":"markdown","value":"\n# rekur\n##### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)\n\n"},"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":0}}}}
2025/01/05 16:42:44 hoverService.go:117: Trace | Finished Hover with Content: 
# rekur
##### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)


2025/01/05 16:42:46 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:42:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"14","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":18}}}
2025/01/05 16:42:46 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:46 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:46 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"14","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n"},"range":{"start":{"line":40,"character":18},"end":{"line":40,"character":18}}}}
2025/01/05 16:42:46 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_



2025/01/05 16:42:48 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:42:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"15","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":22}}}
2025/01/05 16:42:48 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:48 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:48 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"15","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n"},"range":{"start":{"line":40,"character":22},"end":{"line":40,"character":22}}}}
2025/01/05 16:42:48 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_



2025/01/05 16:42:52 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:42:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"16","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":18}}}
2025/01/05 16:42:52 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:42:52 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:42:52 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:42:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"16","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n"},"range":{"start":{"line":40,"character":18},"end":{"line":40,"character":18}}}}
2025/01/05 16:42:52 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_



2025/01/05 16:43:33 util.go:36: Trace | Read Content-Length: 61 from Content-Length: 61
2025/01/05 16:43:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"17","method":"shutdown","params":null}
2025/01/05 16:43:33 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:43:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"17"}
2025/01/05 16:43:33 server.go:69: INFO  | Server Closed
2025/01/05 16:43:33 main.go:28: Server Shutdown
2025/01/05 16:43:34 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:43:34 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:43:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:43:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:43:34 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:43:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:43:34 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:43:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:43:34 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:43:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:43:34 util.go:36: Trace | Read Content-Length: 992 from Content-Length: 992
2025/01/05 16:43:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:43:34 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:43:34 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:43:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:43:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:43:34 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:43:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:43:34 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:43:34 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:43:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:43:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:43:35 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:43:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":16}}}
2025/01/05 16:43:35 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:35 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:35 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_\n\n\n"},"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":16}}}}
2025/01/05 16:43:35 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_



2025/01/05 16:43:37 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:43:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":39,"character":0}}}
2025/01/05 16:43:37 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:37 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:37 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":39,"character":0},"end":{"line":39,"character":0}}}}
2025/01/05 16:43:37 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:43:39 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:43:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":21}}}
2025/01/05 16:43:39 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:39 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:39 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_\n\n\n"},"range":{"start":{"line":40,"character":21},"end":{"line":40,"character":21}}}}
2025/01/05 16:43:39 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_



2025/01/05 16:43:41 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:43:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":38,"character":0}}}
2025/01/05 16:43:41 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:41 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:41 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":38,"character":0},"end":{"line":38,"character":0}}}}
2025/01/05 16:43:41 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:43:43 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:43:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":38,"character":19}}}
2025/01/05 16:43:43 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:43 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:43 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":38,"character":19},"end":{"line":38,"character":19}}}}
2025/01/05 16:43:43 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:43:44 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:43:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":38,"character":22}}}
2025/01/05 16:43:44 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:44 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:44 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":38,"character":22},"end":{"line":38,"character":22}}}}
2025/01/05 16:43:44 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:43:45 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:43:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":19}}}
2025/01/05 16:43:45 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:45 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:45 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_\n\n\n"},"range":{"start":{"line":40,"character":19},"end":{"line":40,"character":19}}}}
2025/01/05 16:43:45 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_



2025/01/05 16:43:47 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:43:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":37,"character":21}}}
2025/01/05 16:43:47 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:47 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:47 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":37,"character":21},"end":{"line":37,"character":21}}}}
2025/01/05 16:43:47 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:43:47 util.go:36: Trace | Read Content-Length: 302 from Content-Length: 302
2025/01/05 16:43:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":37,"character":21},"end":{"line":37,"character":21}},"rangeLength":0,"text":"\n        "}]}}
2025/01/05 16:43:47 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:43:47 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:43:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":2,"diagnostics":[]}}
2025/01/05 16:43:47 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:43:47 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/05 16:43:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":3,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":38,"character":8},"end":{"line":38,"character":8}},"rangeLength":0,"text":"/"}]}}
2025/01/05 16:43:47 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:43:47 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:43:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":3,"diagnostics":[]}}
2025/01/05 16:43:47 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:43:47 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/05 16:43:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":4,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":38,"character":9},"end":{"line":38,"character":9}},"rangeLength":0,"text":"/"}]}}
2025/01/05 16:43:47 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:43:47 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:43:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":4,"diagnostics":[]}}
2025/01/05 16:43:47 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:43:48 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:43:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":5,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":38,"character":10},"end":{"line":38,"character":10}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:43:48 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:43:48 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:43:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":5,"diagnostics":[]}}
2025/01/05 16:43:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:43:48 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:43:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":38,"character":11}}}
2025/01/05 16:43:48 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:48 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:48 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":38,"character":11},"end":{"line":38,"character":11}}}}
2025/01/05 16:43:48 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:43:49 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:43:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":6,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":38,"character":11},"end":{"line":38,"character":11}},"rangeLength":0,"text":"K"}]}}
2025/01/05 16:43:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:43:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:43:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":6,"diagnostics":[]}}
2025/01/05 16:43:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:43:49 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:43:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":7,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":38,"character":12},"end":{"line":38,"character":12}},"rangeLength":0,"text":"o"}]}}
2025/01/05 16:43:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:43:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:43:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":7,"diagnostics":[]}}
2025/01/05 16:43:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:43:49 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:43:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":8,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":38,"character":13},"end":{"line":38,"character":13}},"rangeLength":0,"text":"m"}]}}
2025/01/05 16:43:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:43:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:43:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":8,"diagnostics":[]}}
2025/01/05 16:43:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:43:49 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:43:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":9,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":38,"character":14},"end":{"line":38,"character":14}},"rangeLength":0,"text":"m"}]}}
2025/01/05 16:43:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:43:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:43:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":9,"diagnostics":[]}}
2025/01/05 16:43:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:43:49 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:43:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":10,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":38,"character":15},"end":{"line":38,"character":15}},"rangeLength":0,"text":"e"}]}}
2025/01/05 16:43:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:43:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:43:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":10,"diagnostics":[]}}
2025/01/05 16:43:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:43:49 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:43:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":11,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":16}},"rangeLength":0,"text":"n"}]}}
2025/01/05 16:43:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:43:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:43:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":11,"diagnostics":[]}}
2025/01/05 16:43:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:43:50 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:43:50 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":38,"character":17}}}
2025/01/05 16:43:50 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:50 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:50 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:50 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"11","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":38,"character":17},"end":{"line":38,"character":17}}}}
2025/01/05 16:43:50 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:43:51 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:43:51 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"12","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":37,"character":21}}}
2025/01/05 16:43:51 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:51 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:51 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:51 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"12","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":37,"character":21},"end":{"line":37,"character":21}}}}
2025/01/05 16:43:51 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:43:51 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:43:51 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"13","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":8}}}
2025/01/05 16:43:51 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:51 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:51 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:51 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"13","result":{"contents":{"kind":"markdown","value":"\n# One\n##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":34,"character":8},"end":{"line":34,"character":8}}}}
2025/01/05 16:43:51 hoverService.go:117: Trace | Finished Hover with Content: 
# One
##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:43:53 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:43:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"14","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":14}}}
2025/01/05 16:43:53 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:53 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:53 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"14","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n"},"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}}}}
2025/01/05 16:43:53 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_



2025/01/05 16:43:53 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:43:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"15","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":17}}}
2025/01/05 16:43:53 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:53 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:53 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"15","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n"},"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":17}}}}
2025/01/05 16:43:53 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_



2025/01/05 16:43:55 util.go:36: Trace | Read Content-Length: 295 from Content-Length: 295
2025/01/05 16:43:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":12,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":38,"character":8},"end":{"line":38,"character":8}},"rangeLength":0,"text":"    "}]}}
2025/01/05 16:43:55 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:43:55 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:43:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":12,"diagnostics":[]}}
2025/01/05 16:43:55 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:43:56 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:43:56 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"16","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":38,"character":12}}}
2025/01/05 16:43:56 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:56 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:56 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:56 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"16","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":38,"character":12},"end":{"line":38,"character":12}}}}
2025/01/05 16:43:56 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:43:57 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:43:57 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"17","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":39,"character":22}}}
2025/01/05 16:43:57 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:57 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:57 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:57 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"17","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":39,"character":22},"end":{"line":39,"character":22}}}}
2025/01/05 16:43:57 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:43:58 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:43:58 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"18","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":38,"character":16}}}
2025/01/05 16:43:58 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:58 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:58 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:58 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"18","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":38,"character":16},"end":{"line":38,"character":16}}}}
2025/01/05 16:43:58 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:43:58 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:43:58 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"19","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":15}}}
2025/01/05 16:43:58 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:58 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:58 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:58 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"19","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":40,"character":15},"end":{"line":40,"character":15}}}}
2025/01/05 16:43:58 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:43:59 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:43:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"20","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":16}}}
2025/01/05 16:43:59 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:43:59 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:43:59 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:43:59 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"20","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n"},"range":{"start":{"line":41,"character":16},"end":{"line":41,"character":16}}}}
2025/01/05 16:43:59 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_


. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_



2025/01/05 16:44:32 util.go:36: Trace | Read Content-Length: 61 from Content-Length: 61
2025/01/05 16:44:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"21","method":"shutdown","params":null}
2025/01/05 16:44:32 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:44:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"21"}
2025/01/05 16:44:32 server.go:69: INFO  | Server Closed
2025/01/05 16:44:32 main.go:28: Server Shutdown
2025/01/05 16:44:33 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:44:33 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:44:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:44:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:44:33 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:44:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:44:33 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:44:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:44:33 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:44:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:44:33 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:44:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:44:33 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:44:33 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:44:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:44:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:44:33 util.go:36: Trace | Read Content-Length: 1015 from Content-Length: 1015
2025/01/05 16:44:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommen\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:44:33 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:44:33 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:44:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:44:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:44:35 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:44:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":19}}}
2025/01/05 16:44:35 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:44:35 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:44:35 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:44:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_\nKommen\n\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n"},"range":{"start":{"line":41,"character":19},"end":{"line":41,"character":19}}}}
2025/01/05 16:44:35 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_
Kommen



. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_



2025/01/05 16:44:36 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:44:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":37,"character":21}}}
2025/01/05 16:44:36 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:44:36 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:44:36 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:44:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":37,"character":21},"end":{"line":37,"character":21}}}}
2025/01/05 16:44:36 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:44:37 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:44:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":17}}}
2025/01/05 16:44:37 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:44:37 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:44:37 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:44:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_\nKommen\n\n\n\n. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_\n\n\n"},"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":17}}}}
2025/01/05 16:44:37 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int _[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)_
Kommen



. string _[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)_



2025/01/05 16:44:59 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:44:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"shutdown","params":null}
2025/01/05 16:44:59 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:44:59 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5"}
2025/01/05 16:44:59 server.go:69: INFO  | Server Closed
2025/01/05 16:44:59 main.go:28: Server Shutdown
2025/01/05 16:45:00 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:45:00 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:45:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:45:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:45:00 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:45:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:45:00 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:45:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:45:00 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:45:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:45:00 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:45:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:45:00 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:45:00 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:45:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:45:00 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:45:00 util.go:36: Trace | Read Content-Length: 1015 from Content-Length: 1015
2025/01/05 16:45:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommen\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:45:00 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:45:00 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:45:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:45:00 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:45:02 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:45:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":38,"character":21}}}
2025/01/05 16:45:02 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:45:02 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:45:02 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:45:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":38,"character":21},"end":{"line":38,"character":21}}}}
2025/01/05 16:45:02 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:45:03 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:45:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":17}}}
2025/01/05 16:45:03 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:45:03 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:45:03 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:45:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int *[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)*\n\nKommen\n\n\n\n. string *[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)*\n\n\n\n"},"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":17}}}}
2025/01/05 16:45:03 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int *[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)*

Kommen



. string *[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)*




2025/01/05 16:45:12 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:45:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":38,"character":21}}}
2025/01/05 16:45:12 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:45:12 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:45:12 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:45:12 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":38,"character":21},"end":{"line":38,"character":21}}}}
2025/01/05 16:45:12 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:45:14 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:45:14 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":19}}}
2025/01/05 16:45:14 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:45:14 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:45:14 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:45:14 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n. int *[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)*\n\nKommen\n\n\n\n. string *[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)*\n\n\n\n"},"range":{"start":{"line":41,"character":19},"end":{"line":41,"character":19}}}}
2025/01/05 16:45:14 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


. int *[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)*

Kommen



. string *[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)*




2025/01/05 16:45:30 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:45:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"shutdown","params":null}
2025/01/05 16:45:30 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:45:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6"}
2025/01/05 16:45:30 server.go:69: INFO  | Server Closed
2025/01/05 16:45:30 main.go:28: Server Shutdown
2025/01/05 16:45:30 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/05 16:45:30 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:45:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:45:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:45:30 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:45:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:45:30 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:45:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:45:30 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:45:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:45:30 util.go:36: Trace | Read Content-Length: 1015 from Content-Length: 1015
2025/01/05 16:45:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommen\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:45:30 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:45:30 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:45:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:45:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:45:30 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:45:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:45:30 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:45:30 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:45:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:45:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:45:32 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:45:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":14}}}
2025/01/05 16:45:32 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:45:32 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:45:32 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:45:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n##### int *[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)*\n\nKommen\n\n\n\n##### string *[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)*\n\n\n\n"},"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}}}}
2025/01/05 16:45:32 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


##### int *[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)*

Kommen



##### string *[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)*




2025/01/05 16:45:33 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:45:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":15}}}
2025/01/05 16:45:33 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:45:33 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:45:33 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:45:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n##### int *[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)*\n\nKommen\n\n\n\n##### string *[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)*\n\n\n\n"},"range":{"start":{"line":41,"character":15},"end":{"line":41,"character":15}}}}
2025/01/05 16:45:33 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


##### int *[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)*

Kommen



##### string *[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)*




2025/01/05 16:45:38 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:45:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":14}}}
2025/01/05 16:45:38 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:45:38 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:45:38 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:45:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n##### int *[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)*\n\nKommen\n\n\n\n##### string *[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)*\n\n\n\n"},"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}}}}
2025/01/05 16:45:38 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


##### int *[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)*

Kommen



##### string *[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)*




2025/01/05 16:46:16 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:46:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"shutdown","params":null}
2025/01/05 16:46:16 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:46:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5"}
2025/01/05 16:46:16 server.go:69: INFO  | Server Closed
2025/01/05 16:46:16 main.go:28: Server Shutdown
2025/01/05 16:46:17 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/05 16:46:17 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:46:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:46:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:46:17 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:46:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:46:17 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:46:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:46:17 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:46:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:46:17 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:46:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:46:17 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:46:17 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:46:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:46:17 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:46:17 util.go:36: Trace | Read Content-Length: 1015 from Content-Length: 1015
2025/01/05 16:46:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommen\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:46:17 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:46:17 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:46:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:46:17 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:46:19 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:46:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":18}}}
2025/01/05 16:46:19 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:46:19 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:46:19 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:46:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":41,"character":18},"end":{"line":41,"character":18}}}}
2025/01/05 16:46:19 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:47:00 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:47:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"shutdown","params":null}
2025/01/05 16:47:00 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:47:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3"}
2025/01/05 16:47:00 server.go:69: INFO  | Server Closed
2025/01/05 16:47:00 main.go:28: Server Shutdown
2025/01/05 16:47:01 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/05 16:47:01 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:47:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:47:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:47:01 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:47:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:47:01 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:47:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:47:01 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:47:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:47:01 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:47:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:47:01 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:47:01 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:47:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:47:01 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:01 util.go:36: Trace | Read Content-Length: 1015 from Content-Length: 1015
2025/01/05 16:47:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommen\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:47:01 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:47:01 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:47:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:47:01 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:03 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:47:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":17}}}
2025/01/05 16:47:03 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:03 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:03 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":17}}}}
2025/01/05 16:47:03 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:47:03 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:47:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":19}}}
2025/01/05 16:47:03 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:03 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:03 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":40,"character":19},"end":{"line":40,"character":19}}}}
2025/01/05 16:47:03 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:47:04 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:47:04 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":17}}}
2025/01/05 16:47:04 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:04 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:04 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:04 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":17}}}}
2025/01/05 16:47:04 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:47:23 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:47:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":29}}}
2025/01/05 16:47:23 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:23 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:23 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":41,"character":29},"end":{"line":41,"character":29}}}}
2025/01/05 16:47:23 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:47:23 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:47:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":26}}}
2025/01/05 16:47:23 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:23 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:23 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":40,"character":26},"end":{"line":40,"character":26}}}}
2025/01/05 16:47:23 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:47:23 util.go:36: Trace | Read Content-Length: 306 from Content-Length: 306
2025/01/05 16:47:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":40,"character":26},"end":{"line":40,"character":26}},"rangeLength":0,"text":"\n            "}]}}
2025/01/05 16:47:23 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:47:23 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:47:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":2,"diagnostics":[]}}
2025/01/05 16:47:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:24 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:47:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":3,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":12},"end":{"line":41,"character":12}},"rangeLength":0,"text":"/"}]}}
2025/01/05 16:47:24 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:47:24 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:47:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":3,"diagnostics":[]}}
2025/01/05 16:47:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:24 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:47:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":4,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":13},"end":{"line":41,"character":13}},"rangeLength":0,"text":"/"}]}}
2025/01/05 16:47:24 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:47:24 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:47:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":4,"diagnostics":[]}}
2025/01/05 16:47:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:24 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:47:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":5,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}},"rangeLength":0,"text":"K"}]}}
2025/01/05 16:47:24 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:47:24 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:47:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":5,"diagnostics":[]}}
2025/01/05 16:47:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:24 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:47:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":6,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":15},"end":{"line":41,"character":15}},"rangeLength":0,"text":"o"}]}}
2025/01/05 16:47:24 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:47:24 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:47:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":6,"diagnostics":[]}}
2025/01/05 16:47:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:24 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:47:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":7,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":16},"end":{"line":41,"character":16}},"rangeLength":0,"text":"m"}]}}
2025/01/05 16:47:24 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:47:24 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:47:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":7,"diagnostics":[]}}
2025/01/05 16:47:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:24 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:47:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":8,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":17}},"rangeLength":0,"text":"m"}]}}
2025/01/05 16:47:24 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:47:24 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:47:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":8,"diagnostics":[]}}
2025/01/05 16:47:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:25 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:47:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":9,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":18},"end":{"line":41,"character":18}},"rangeLength":0,"text":"e"}]}}
2025/01/05 16:47:25 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:47:25 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:47:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":9,"diagnostics":[]}}
2025/01/05 16:47:25 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:25 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:47:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":10,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":19},"end":{"line":41,"character":19}},"rangeLength":0,"text":"n"}]}}
2025/01/05 16:47:25 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:47:25 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:47:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":10,"diagnostics":[]}}
2025/01/05 16:47:25 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:25 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:47:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":11,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":20},"end":{"line":41,"character":20}},"rangeLength":0,"text":"t"}]}}
2025/01/05 16:47:25 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:47:25 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:47:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":11,"diagnostics":[]}}
2025/01/05 16:47:25 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:25 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:47:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":12,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":21}},"rangeLength":0,"text":"a"}]}}
2025/01/05 16:47:25 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:47:25 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:47:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":12,"diagnostics":[]}}
2025/01/05 16:47:25 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:25 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:47:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":13,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":22}},"rangeLength":0,"text":"r"}]}}
2025/01/05 16:47:25 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:47:25 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:47:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":13,"diagnostics":[]}}
2025/01/05 16:47:25 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:25 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:47:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":23}}}
2025/01/05 16:47:25 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:25 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:25 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":41,"character":23},"end":{"line":41,"character":23}}}}
2025/01/05 16:47:25 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:47:26 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:47:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":29}}}
2025/01/05 16:47:26 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:26 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:26 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":29}}}}
2025/01/05 16:47:26 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:47:27 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:47:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":16}}}
2025/01/05 16:47:27 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:27 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:27 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":42,"character":16},"end":{"line":42,"character":16}}}}
2025/01/05 16:47:27 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:47:29 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:47:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":20}}}
2025/01/05 16:47:29 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:29 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:29 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":41,"character":20},"end":{"line":41,"character":20}}}}
2025/01/05 16:47:29 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:47:30 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:47:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":9}}}
2025/01/05 16:47:30 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:30 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:30 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"11","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":43,"character":9},"end":{"line":43,"character":9}}}}
2025/01/05 16:47:30 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:47:31 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:47:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"12","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":15}}}
2025/01/05 16:47:31 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:31 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:31 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"12","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":42,"character":15},"end":{"line":42,"character":15}}}}
2025/01/05 16:47:31 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:47:34 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:47:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"13","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":22}}}
2025/01/05 16:47:34 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:34 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:34 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"13","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":41,"character":22},"end":{"line":41,"character":22}}}}
2025/01/05 16:47:34 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:47:34 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/05 16:47:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":14,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":0},"end":{"line":42,"character":0}},"rangeLength":24,"text":""}]}}
2025/01/05 16:47:34 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:47:34 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:47:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":14,"diagnostics":[]}}
2025/01/05 16:47:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:47:35 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:47:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"14","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":0}}}
2025/01/05 16:47:35 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:35 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:35 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"14","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":0}}}}
2025/01/05 16:47:35 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:47:37 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:47:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"15","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":29}}}
2025/01/05 16:47:37 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:37 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:37 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"15","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":41,"character":29},"end":{"line":41,"character":29}}}}
2025/01/05 16:47:37 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:47:37 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:47:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"16","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":39,"character":19}}}
2025/01/05 16:47:37 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:37 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:37 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"16","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":39,"character":19},"end":{"line":39,"character":19}}}}
2025/01/05 16:47:37 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:47:38 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:47:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"17","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":39,"character":17}}}
2025/01/05 16:47:38 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:38 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:38 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"17","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":39,"character":17},"end":{"line":39,"character":17}}}}
2025/01/05 16:47:38 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:47:39 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:47:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"18","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":39,"character":22}}}
2025/01/05 16:47:39 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:39 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:39 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"18","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":39,"character":22},"end":{"line":39,"character":22}}}}
2025/01/05 16:47:39 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:47:39 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:47:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"19","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":21}}}
2025/01/05 16:47:39 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:47:39 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:47:39 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:47:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"19","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":21}}}}
2025/01/05 16:47:39 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:48:32 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:48:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"20","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":21}}}
2025/01/05 16:48:32 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:48:32 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:48:32 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:48:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"20","result":{"contents":{"kind":"markdown","value":"\n# One\n##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":34,"character":21},"end":{"line":34,"character":21}}}}
2025/01/05 16:48:32 hoverService.go:117: Trace | Finished Hover with Content: 
# One
##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:48:33 util.go:36: Trace | Read Content-Length: 61 from Content-Length: 61
2025/01/05 16:48:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"21","method":"shutdown","params":null}
2025/01/05 16:48:33 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:48:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"21"}
2025/01/05 16:48:33 server.go:69: INFO  | Server Closed
2025/01/05 16:48:33 main.go:28: Server Shutdown
2025/01/05 16:48:34 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:48:34 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:48:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:48:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:48:34 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:48:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:48:34 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:48:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:48:34 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:48:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:48:34 util.go:36: Trace | Read Content-Length: 1015 from Content-Length: 1015
2025/01/05 16:48:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommen\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:48:34 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:48:34 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:48:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:48:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:48:34 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:48:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:48:34 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:48:34 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:48:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:48:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:48:35 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:48:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":29}}}
2025/01/05 16:48:35 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:48:35 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:48:35 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:48:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* #####int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* #####string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":41,"character":29},"end":{"line":41,"character":29}}}}
2025/01/05 16:48:35 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* #####int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* #####string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:48:35 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:48:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":17}}}
2025/01/05 16:48:35 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:48:35 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:48:35 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:48:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* #####int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* #####string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":17}}}}
2025/01/05 16:48:35 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* #####int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* #####string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:48:37 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:48:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":18}}}
2025/01/05 16:48:37 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:48:37 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:48:37 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:48:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* #####int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* #####string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":41,"character":18},"end":{"line":41,"character":18}}}}
2025/01/05 16:48:37 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* #####int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* #####string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:48:39 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:48:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":17}}}
2025/01/05 16:48:39 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:48:39 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:48:39 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:48:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* #####int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* #####string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":17}}}}
2025/01/05 16:48:39 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* #####int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* #####string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:48:43 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:48:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"shutdown","params":null}
2025/01/05 16:48:43 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:48:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6"}
2025/01/05 16:48:43 server.go:69: INFO  | Server Closed
2025/01/05 16:48:43 main.go:28: Server Shutdown
2025/01/05 16:48:44 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:48:44 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:48:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:48:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:48:44 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:48:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:48:44 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:48:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:48:44 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:48:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:48:44 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:48:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:48:44 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:48:44 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:48:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:48:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:48:44 util.go:36: Trace | Read Content-Length: 1015 from Content-Length: 1015
2025/01/05 16:48:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommen\n            arg int i;\n            arg string me;\n           identifier(i, me);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:48:44 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:48:44 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:48:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:48:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:48:45 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:48:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":38,"character":21}}}
2025/01/05 16:48:45 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:48:45 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:48:45 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:48:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":38,"character":21},"end":{"line":38,"character":21}}}}
2025/01/05 16:48:45 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:48:46 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:48:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":16}}}
2025/01/05 16:48:46 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:48:46 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:48:46 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:48:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":41,"character":16},"end":{"line":41,"character":16}}}}
2025/01/05 16:48:46 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:48:47 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:48:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":14}}}
2025/01/05 16:48:47 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:48:47 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:48:47 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:48:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}}}}
2025/01/05 16:48:47 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:48:59 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:48:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":39,"character":22}}}
2025/01/05 16:48:59 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:48:59 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:48:59 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:48:59 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":39,"character":22},"end":{"line":39,"character":22}}}}
2025/01/05 16:48:59 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:49:00 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:49:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":26}}}
2025/01/05 16:49:00 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:00 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:00 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":40,"character":26},"end":{"line":40,"character":26}}}}
2025/01/05 16:49:00 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:49:01 util.go:36: Trace | Read Content-Length: 306 from Content-Length: 306
2025/01/05 16:49:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":40,"character":26},"end":{"line":40,"character":26}},"rangeLength":0,"text":"\n            "}]}}
2025/01/05 16:49:01 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:01 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":2,"diagnostics":[]}}
2025/01/05 16:49:01 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:49:01 util.go:36: Trace | Read Content-Length: 306 from Content-Length: 306
2025/01/05 16:49:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":3,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":12},"end":{"line":41,"character":12}},"rangeLength":0,"text":"\n            "}]}}
2025/01/05 16:49:01 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:01 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":3,"diagnostics":[]}}
2025/01/05 16:49:01 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:49:01 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:49:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":12}}}
2025/01/05 16:49:01 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:01 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:01 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":42,"character":12},"end":{"line":42,"character":12}}}}
2025/01/05 16:49:01 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:49:02 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/05 16:49:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":4,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":11},"end":{"line":42,"character":12}},"rangeLength":1,"text":""}]}}
2025/01/05 16:49:02 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:02 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":4,"diagnostics":[]}}
2025/01/05 16:49:02 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:49:02 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:49:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":11}}}
2025/01/05 16:49:02 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:02 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:02 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":42,"character":11},"end":{"line":42,"character":11}}}}
2025/01/05 16:49:02 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:49:02 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:49:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":5,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":11},"end":{"line":42,"character":11}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:49:02 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:02 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":5,"diagnostics":[]}}
2025/01/05 16:49:02 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:49:02 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:49:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":12}}}
2025/01/05 16:49:02 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:02 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:02 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":42,"character":12},"end":{"line":42,"character":12}}}}
2025/01/05 16:49:02 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:49:02 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:49:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":6,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":12},"end":{"line":42,"character":12}},"rangeLength":0,"text":"r"}]}}
2025/01/05 16:49:02 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:02 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":6,"diagnostics":[]}}
2025/01/05 16:49:02 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:49:02 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:49:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":7,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":13},"end":{"line":42,"character":13}},"rangeLength":0,"text":"e"}]}}
2025/01/05 16:49:02 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:02 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":7,"diagnostics":[]}}
2025/01/05 16:49:02 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:49:03 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:49:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":8,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":14},"end":{"line":42,"character":14}},"rangeLength":0,"text":"a"}]}}
2025/01/05 16:49:03 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:03 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":8,"diagnostics":[]}}
2025/01/05 16:49:03 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:49:03 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:49:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":15}}}
2025/01/05 16:49:03 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:03 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:03 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":42,"character":15},"end":{"line":42,"character":15}}}}
2025/01/05 16:49:03 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:49:03 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/05 16:49:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":9,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":14},"end":{"line":42,"character":15}},"rangeLength":1,"text":""}]}}
2025/01/05 16:49:03 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:03 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":9,"diagnostics":[]}}
2025/01/05 16:49:03 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:49:03 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:49:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":10,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":14},"end":{"line":42,"character":14}},"rangeLength":0,"text":"f"}]}}
2025/01/05 16:49:03 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:03 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":10,"diagnostics":[]}}
2025/01/05 16:49:03 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:49:03 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:49:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":11,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":15},"end":{"line":42,"character":15}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:49:03 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:03 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":11,"diagnostics":[]}}
2025/01/05 16:49:03 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:49:04 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:49:04 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":12,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":16},"end":{"line":42,"character":16}},"rangeLength":0,"text":"O"}]}}
2025/01/05 16:49:04 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:04 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:04 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":12,"diagnostics":[{"range":{"start":{"line":45,"character":8},"end":{"line":47,"character":9}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:46:8\nentity TwoE extends .OneE {\n           identifier(i, me);\n        }\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nDer Supertyp wurde nicht gefunden!\n","message":"Der Supertyp wurde nicht gefunden!"},{"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":23}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:22\nidentifier(i, me);\n           ^      \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":46,"character":25},"end":{"line":46,"character":27}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:25\nidentifier(i, me);\n              ^^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"}]}}
2025/01/05 16:49:04 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 53 44 34 99 104 97 114 97 99 116 101 114 34 58 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 55 44 34 99 104 97 114 97 99 116 101 114 34 58 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 54 58 56 92 110 101 110 116 105 116 121 32 84 119 111 69 32 101 120 116 101 110 100 115 32 46 79 110 101 69 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 125 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 55 58 50 50 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 32 32 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 55 58 50 53 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 32 32 94 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 93 125] <nil> <nil>}
2025/01/05 16:49:04 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:46:8
entity TwoE extends .OneE {
           identifier(i, me);
        }
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Der Supertyp wurde nicht gefunden!

2025/01/05 16:49:04 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:22
identifier(i, me);
           ^      
Referenzierte Variable nicht gefunden!

2025/01/05 16:49:04 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:25
identifier(i, me);
              ^^  
Referenzierte Variable nicht gefunden!

2025/01/05 16:49:04 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:49:04 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":13,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":17},"end":{"line":42,"character":17}},"rangeLength":0,"text":"n"}]}}
2025/01/05 16:49:04 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:04 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:04 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":13,"diagnostics":[{"range":{"start":{"line":45,"character":8},"end":{"line":47,"character":9}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:46:8\nentity TwoE extends .OneE {\n           identifier(i, me);\n        }\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nDer Supertyp wurde nicht gefunden!\n","message":"Der Supertyp wurde nicht gefunden!"},{"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":23}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:22\nidentifier(i, me);\n           ^      \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":46,"character":25},"end":{"line":46,"character":27}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:25\nidentifier(i, me);\n              ^^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"}]}}
2025/01/05 16:49:04 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 53 44 34 99 104 97 114 97 99 116 101 114 34 58 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 55 44 34 99 104 97 114 97 99 116 101 114 34 58 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 54 58 56 92 110 101 110 116 105 116 121 32 84 119 111 69 32 101 120 116 101 110 100 115 32 46 79 110 101 69 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 125 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 55 58 50 50 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 32 32 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 55 58 50 53 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 32 32 94 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 93 125] <nil> <nil>}
2025/01/05 16:49:04 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:46:8
entity TwoE extends .OneE {
           identifier(i, me);
        }
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Der Supertyp wurde nicht gefunden!

2025/01/05 16:49:04 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:22
identifier(i, me);
           ^      
Referenzierte Variable nicht gefunden!

2025/01/05 16:49:04 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:25
identifier(i, me);
              ^^  
Referenzierte Variable nicht gefunden!

2025/01/05 16:49:04 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:49:04 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":14,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":18},"end":{"line":42,"character":18}},"rangeLength":0,"text":"e"}]}}
2025/01/05 16:49:04 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:04 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:04 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":14,"diagnostics":[{"range":{"start":{"line":45,"character":8},"end":{"line":47,"character":9}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:46:8\nentity TwoE extends .OneE {\n           identifier(i, me);\n        }\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nDer Supertyp wurde nicht gefunden!\n","message":"Der Supertyp wurde nicht gefunden!"},{"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":23}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:22\nidentifier(i, me);\n           ^      \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":46,"character":25},"end":{"line":46,"character":27}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:25\nidentifier(i, me);\n              ^^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"}]}}
2025/01/05 16:49:04 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 53 44 34 99 104 97 114 97 99 116 101 114 34 58 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 55 44 34 99 104 97 114 97 99 116 101 114 34 58 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 54 58 56 92 110 101 110 116 105 116 121 32 84 119 111 69 32 101 120 116 101 110 100 115 32 46 79 110 101 69 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 125 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 55 58 50 50 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 32 32 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 55 58 50 53 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 32 32 94 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 93 125] <nil> <nil>}
2025/01/05 16:49:04 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:46:8
entity TwoE extends .OneE {
           identifier(i, me);
        }
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Der Supertyp wurde nicht gefunden!

2025/01/05 16:49:04 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:22
identifier(i, me);
           ^      
Referenzierte Variable nicht gefunden!

2025/01/05 16:49:04 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:25
identifier(i, me);
              ^^  
Referenzierte Variable nicht gefunden!

2025/01/05 16:49:04 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:49:04 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":19}}}
2025/01/05 16:49:04 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:04 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:04 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:04 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"11","result":{"contents":{"kind":"markdown","value":"\n# rekur\n##### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)\n\n"},"range":{"start":{"line":42,"character":19},"end":{"line":42,"character":19}}}}
2025/01/05 16:49:04 hoverService.go:117: Trace | Finished Hover with Content: 
# rekur
##### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)


2025/01/05 16:49:05 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:49:05 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":15,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":19},"end":{"line":42,"character":19}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:49:05 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:05 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:05 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":15,"diagnostics":[{"range":{"start":{"line":45,"character":8},"end":{"line":47,"character":9}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:46:8\nentity TwoE extends .OneE {\n           identifier(i, me);\n        }\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nDer Supertyp wurde nicht gefunden!\n","message":"Der Supertyp wurde nicht gefunden!"},{"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":23}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:22\nidentifier(i, me);\n           ^      \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":46,"character":25},"end":{"line":46,"character":27}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:25\nidentifier(i, me);\n              ^^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"}]}}
2025/01/05 16:49:05 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 53 44 34 99 104 97 114 97 99 116 101 114 34 58 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 55 44 34 99 104 97 114 97 99 116 101 114 34 58 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 54 58 56 92 110 101 110 116 105 116 121 32 84 119 111 69 32 101 120 116 101 110 100 115 32 46 79 110 101 69 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 125 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 55 58 50 50 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 32 32 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 55 58 50 53 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 32 32 94 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 93 125] <nil> <nil>}
2025/01/05 16:49:05 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:46:8
entity TwoE extends .OneE {
           identifier(i, me);
        }
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Der Supertyp wurde nicht gefunden!

2025/01/05 16:49:05 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:22
identifier(i, me);
           ^      
Referenzierte Variable nicht gefunden!

2025/01/05 16:49:05 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:25
identifier(i, me);
              ^^  
Referenzierte Variable nicht gefunden!

2025/01/05 16:49:05 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:49:05 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"12","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":20}}}
2025/01/05 16:49:05 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:05 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:05 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:05 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"12","result":{"contents":{"kind":"markdown","value":"\n# rekur\n##### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)\n\n"},"range":{"start":{"line":42,"character":20},"end":{"line":42,"character":20}}}}
2025/01/05 16:49:05 hoverService.go:117: Trace | Finished Hover with Content: 
# rekur
##### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)


2025/01/05 16:49:05 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:49:05 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":16,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":20},"end":{"line":42,"character":20}},"rangeLength":0,"text":"o"}]}}
2025/01/05 16:49:05 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:05 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:05 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":16,"diagnostics":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":21}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:43:21\n\n\nSemikolon ist missing\n","message":"Semikolon ist missing"}]}}
2025/01/05 16:49:05 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 50 44 34 99 104 97 114 97 99 116 101 114 34 58 50 49 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 50 44 34 99 104 97 114 97 99 116 101 114 34 58 50 49 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 51 58 50 49 92 110 92 110 92 110 83 101 109 105 107 111 108 111 110 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 83 101 109 105 107 111 108 111 110 32 105 115 116 32 109 105 115 115 105 110 103 34 125 93 125] <nil> <nil>}
2025/01/05 16:49:05 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:43:21


Semikolon ist missing

2025/01/05 16:49:05 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:49:05 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":17,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":21}},"rangeLength":0,"text":";"}]}}
2025/01/05 16:49:05 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:05 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:05 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":17,"diagnostics":[]}}
2025/01/05 16:49:05 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:49:06 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:49:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"13","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":22}}}
2025/01/05 16:49:06 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:06 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:06 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"13","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":22}}}}
2025/01/05 16:49:06 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:49:07 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:49:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"14","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":28}}}
2025/01/05 16:49:07 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:07 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:07 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"14","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":43,"character":28},"end":{"line":43,"character":28}}}}
2025/01/05 16:49:07 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:49:07 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:49:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"15","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":27}}}
2025/01/05 16:49:07 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:07 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:07 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"15","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":43,"character":27},"end":{"line":43,"character":27}}}}
2025/01/05 16:49:07 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:49:07 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:49:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":18,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":43,"character":27},"end":{"line":43,"character":27}},"rangeLength":0,"text":","}]}}
2025/01/05 16:49:07 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:07 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":18,"diagnostics":[{"range":{"start":{"line":43,"character":28},"end":{"line":43,"character":28}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:44:28\nidentifier(i, me,);\n                   \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":43,"character":28},"end":{"line":43,"character":28}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:44:28\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"}]}}
2025/01/05 16:49:07 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 51 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 51 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 52 58 50 56 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 44 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 51 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 51 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 52 58 50 56 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 93 125] <nil> <nil>}
2025/01/05 16:49:07 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:44:28
identifier(i, me,);
                   
Referenzierte Variable nicht gefunden!

2025/01/05 16:49:07 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:44:28


Identifier Node ist missing

2025/01/05 16:49:08 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:49:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"16","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":28}}}
2025/01/05 16:49:08 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:08 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:08 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"16","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n* ##### unknown **[](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n\n\n"},"range":{"start":{"line":43,"character":28},"end":{"line":43,"character":28}}}}
2025/01/05 16:49:08 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**



* ##### unknown **[](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**




2025/01/05 16:49:08 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:49:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":19,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":43,"character":28},"end":{"line":43,"character":28}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:49:08 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:08 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":19,"diagnostics":[{"range":{"start":{"line":43,"character":28},"end":{"line":43,"character":28}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:44:28\nidentifier(i, me, );\n                    \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":43,"character":28},"end":{"line":43,"character":28}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:44:28\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"}]}}
2025/01/05 16:49:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 51 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 51 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 52 58 50 56 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 44 32 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 51 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 51 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 52 58 50 56 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 93 125] <nil> <nil>}
2025/01/05 16:49:08 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:44:28
identifier(i, me, );
                    
Referenzierte Variable nicht gefunden!

2025/01/05 16:49:08 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:44:28


Identifier Node ist missing

2025/01/05 16:49:08 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:49:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":20,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":43,"character":29},"end":{"line":43,"character":29}},"rangeLength":0,"text":"o"}]}}
2025/01/05 16:49:08 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:08 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":20,"diagnostics":[]}}
2025/01/05 16:49:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:49:09 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:49:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"17","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":30}}}
2025/01/05 16:49:09 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:09 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:09 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"17","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35) **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\n\n\n"},"range":{"start":{"line":43,"character":30},"end":{"line":43,"character":30}}}}
2025/01/05 16:49:09 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35) **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**




2025/01/05 16:49:10 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:49:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":21,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":12}},"rangeLength":12,"text":""}]}}
2025/01/05 16:49:10 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:49:10 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:49:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":21,"diagnostics":[]}}
2025/01/05 16:49:10 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:49:10 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:49:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"18","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":38,"character":21}}}
2025/01/05 16:49:10 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:10 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:10 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"18","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":38,"character":21},"end":{"line":38,"character":21}}}}
2025/01/05 16:49:10 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:49:12 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:49:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"19","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":18}}}
2025/01/05 16:49:12 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:12 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:12 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:12 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"19","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35) **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\n\n\n"},"range":{"start":{"line":43,"character":18},"end":{"line":43,"character":18}}}}
2025/01/05 16:49:12 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35) **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**




2025/01/05 16:49:15 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:49:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"20","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":0}}}
2025/01/05 16:49:15 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:49:15 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:49:15 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:49:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"20","result":{"contents":{"kind":"markdown","value":"\n# rekur\n##### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)\n\n"},"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":0}}}}
2025/01/05 16:49:15 hoverService.go:117: Trace | Finished Hover with Content: 
# rekur
##### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)


2025/01/05 16:50:42 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:50:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"21","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":3,"character":0}}}
2025/01/05 16:50:42 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:50:42 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:50:42 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:50:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"21","result":{"contents":{"kind":"markdown","value":"\n# brand\n##### Package in Package [de.alex]()\n\n"},"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":0}}}}
2025/01/05 16:50:42 hoverService.go:117: Trace | Finished Hover with Content: 
# brand
##### Package in Package [de.alex]()


2025/01/05 16:54:58 util.go:36: Trace | Read Content-Length: 61 from Content-Length: 61
2025/01/05 16:54:58 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"22","method":"shutdown","params":null}
2025/01/05 16:54:58 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:54:58 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"22"}
2025/01/05 16:54:58 server.go:69: INFO  | Server Closed
2025/01/05 16:54:58 main.go:28: Server Shutdown
2025/01/05 16:54:59 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:54:59 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:54:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:54:59 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:54:59 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:54:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:54:59 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:54:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:54:59 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:54:59 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:54:59 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:54:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:54:59 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:54:59 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:54:59 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:54:59 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:54:59 util.go:36: Trace | Read Content-Length: 1044 from Content-Length: 1044
2025/01/05 16:54:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommen\n            arg int i;\n            arg string me;\n\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:54:59 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:54:59 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:54:59 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:54:59 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:55:01 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:55:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":13,"character":0}}}
2025/01/05 16:55:01 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:55:01 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:55:01 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:55:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# Ort\n##### Enum in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)\nKommentar von Ort\n\n\n"},"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":0}}}}
2025/01/05 16:55:01 hoverService.go:117: Trace | Finished Hover with Content: 
# Ort
##### Enum in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L5)
Kommentar von Ort



2025/01/05 16:55:02 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:55:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":22,"character":21}}}
2025/01/05 16:55:02 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:55:02 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:55:02 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:55:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [Person](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L19)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L20)**\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L22)**\n\n\n\n"},"range":{"start":{"line":22,"character":21},"end":{"line":22,"character":21}}}}
2025/01/05 16:55:02 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [Person](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L19)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L20)**



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L22)**




2025/01/05 16:55:05 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:55:05 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":19}}}
2025/01/05 16:55:05 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:55:05 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:55:05 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:55:05 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 \"\n# One\n##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\n\n\n"},"range":{"start":{"line":43,"character":19},"end":{"line":43,"character":19}}}}
2025/01/05 16:55:05 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 "
# One
##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)

") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**




2025/01/05 16:55:48 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:55:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"shutdown","params":null}
2025/01/05 16:55:48 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:55:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5"}
2025/01/05 16:55:48 server.go:69: INFO  | Server Closed
2025/01/05 16:55:48 main.go:28: Server Shutdown
2025/01/05 16:55:49 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:55:49 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:55:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:55:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:55:49 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:55:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:55:49 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:55:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:55:49 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:55:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:55:49 util.go:36: Trace | Read Content-Length: 1044 from Content-Length: 1044
2025/01/05 16:55:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommen\n            arg int i;\n            arg string me;\n\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:55:49 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:55:49 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:55:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:55:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:55:49 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:55:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:55:49 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:55:49 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:55:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:55:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:55:51 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/05 16:55:51 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":0}}}
2025/01/05 16:55:51 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:55:51 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:55:51 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:55:51 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":41,"character":0},"end":{"line":41,"character":0}}}}
2025/01/05 16:55:51 hoverService.go:117: Trace | Finished Hover with Content: 
# OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:55:52 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:55:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":18}}}
2025/01/05 16:55:52 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:55:52 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:55:52 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:55:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 \"Struct One in Package de.alex.brand.rekur\n\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\n\n\n"},"range":{"start":{"line":43,"character":18},"end":{"line":43,"character":18}}}}
2025/01/05 16:55:52 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 "Struct One in Package de.alex.brand.rekur
") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**




2025/01/05 16:55:53 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:55:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":17}}}
2025/01/05 16:55:53 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:55:53 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:55:53 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:55:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 \"Struct One in Package de.alex.brand.rekur\n\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\n\n\n"},"range":{"start":{"line":43,"character":17},"end":{"line":43,"character":17}}}}
2025/01/05 16:55:53 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 "Struct One in Package de.alex.brand.rekur
") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**




2025/01/05 16:56:05 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:56:05 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":18}}}
2025/01/05 16:56:05 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:56:05 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:56:05 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:56:05 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 \"Struct One in Package de.alex.brand.rekur\n\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\n\n\n"},"range":{"start":{"line":43,"character":18},"end":{"line":43,"character":18}}}}
2025/01/05 16:56:05 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 "Struct One in Package de.alex.brand.rekur
") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**




2025/01/05 16:56:33 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:56:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"shutdown","params":null}
2025/01/05 16:56:33 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:56:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6"}
2025/01/05 16:56:33 server.go:69: INFO  | Server Closed
2025/01/05 16:56:33 main.go:28: Server Shutdown
2025/01/05 16:56:34 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:56:34 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:56:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:56:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:56:34 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:56:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:56:34 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:56:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:56:34 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:56:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:56:34 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:56:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:56:34 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:56:34 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:56:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:56:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:56:34 util.go:36: Trace | Read Content-Length: 1044 from Content-Length: 1044
2025/01/05 16:56:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommen\n            arg int i;\n            arg string me;\n\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:56:34 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:56:34 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:56:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:56:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:56:36 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:56:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":46,"character":29}}}
2025/01/05 16:56:36 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:56:36 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:56:36 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:56:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [TwoE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n"},"range":{"start":{"line":46,"character":29},"end":{"line":46,"character":29}}}}
2025/01/05 16:56:36 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [TwoE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




2025/01/05 16:56:36 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:56:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":22}}}
2025/01/05 16:56:36 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:56:36 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:56:36 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:56:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 \"Struct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\n\n\n"},"range":{"start":{"line":43,"character":22},"end":{"line":43,"character":22}}}}
2025/01/05 16:56:36 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 "Struct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**




2025/01/05 16:56:37 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:56:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":17}}}
2025/01/05 16:56:37 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:56:37 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:56:37 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:56:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 \"Struct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\n\n\n"},"range":{"start":{"line":43,"character":17},"end":{"line":43,"character":17}}}}
2025/01/05 16:56:37 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 "Struct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**




2025/01/05 16:57:02 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:57:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":12}}}
2025/01/05 16:57:02 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:57:02 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:57:02 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:57:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 \"Struct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\n\n\n"},"range":{"start":{"line":43,"character":12},"end":{"line":43,"character":12}}}}
2025/01/05 16:57:02 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 "Struct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**




2025/01/05 16:57:06 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:57:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":16}}}
2025/01/05 16:57:06 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:57:06 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:57:06 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:57:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n# One\n##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":16}}}}
2025/01/05 16:57:06 hoverService.go:117: Trace | Finished Hover with Content: 
# One
##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/05 16:57:20 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:57:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":14}}}
2025/01/05 16:57:20 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:57:20 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:57:20 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:57:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 \"Struct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\n\n\n"},"range":{"start":{"line":43,"character":14},"end":{"line":43,"character":14}}}}
2025/01/05 16:57:20 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 "Struct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**




2025/01/05 16:57:23 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:57:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":43,"character":17}}}
2025/01/05 16:57:23 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:57:23 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:57:23 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:57:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 \"Struct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\n\n\n"},"range":{"start":{"line":43,"character":17},"end":{"line":43,"character":17}}}}
2025/01/05 16:57:23 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L38)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L35 "Struct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**




2025/01/05 16:57:27 util.go:36: Trace | Read Content-Length: 297 from Content-Length: 297
2025/01/05 16:57:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":33,"character":18},"end":{"line":33,"character":18}},"rangeLength":0,"text":"\n   "}]}}
2025/01/05 16:57:27 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:27 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":2,"diagnostics":[]}}
2025/01/05 16:57:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:27 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/05 16:57:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":3,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":3},"end":{"line":34,"character":3}},"rangeLength":0,"text":"/"}]}}
2025/01/05 16:57:27 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:27 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":3,"diagnostics":[]}}
2025/01/05 16:57:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:27 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/05 16:57:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":4,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":4}},"rangeLength":0,"text":"/"}]}}
2025/01/05 16:57:27 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:27 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":4,"diagnostics":[]}}
2025/01/05 16:57:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:27 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/05 16:57:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":5,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":5},"end":{"line":34,"character":5}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:57:27 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:27 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":5,"diagnostics":[]}}
2025/01/05 16:57:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:27 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/05 16:57:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":6,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":6},"end":{"line":34,"character":6}},"rangeLength":0,"text":"D"}]}}
2025/01/05 16:57:27 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:27 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":6,"diagnostics":[]}}
2025/01/05 16:57:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:27 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/05 16:57:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":7,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":7},"end":{"line":34,"character":7}},"rangeLength":0,"text":"a"}]}}
2025/01/05 16:57:27 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:27 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":7,"diagnostics":[]}}
2025/01/05 16:57:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:28 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/05 16:57:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":8,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":8},"end":{"line":34,"character":8}},"rangeLength":0,"text":"s"}]}}
2025/01/05 16:57:28 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:28 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":8,"diagnostics":[]}}
2025/01/05 16:57:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:28 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/05 16:57:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":9,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":9},"end":{"line":34,"character":9}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:57:28 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:28 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":9,"diagnostics":[]}}
2025/01/05 16:57:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:28 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":10,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":10},"end":{"line":34,"character":10}},"rangeLength":0,"text":"i"}]}}
2025/01/05 16:57:28 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:28 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":10,"diagnostics":[]}}
2025/01/05 16:57:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:28 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":11,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":11},"end":{"line":34,"character":11}},"rangeLength":0,"text":"s"}]}}
2025/01/05 16:57:28 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:28 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":11,"diagnostics":[]}}
2025/01/05 16:57:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:28 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":12,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":12},"end":{"line":34,"character":12}},"rangeLength":0,"text":"t"}]}}
2025/01/05 16:57:28 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:28 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":12,"diagnostics":[]}}
2025/01/05 16:57:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:28 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":13,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":13},"end":{"line":34,"character":13}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:57:28 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:28 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":13,"diagnostics":[]}}
2025/01/05 16:57:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:28 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":14,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":14},"end":{"line":34,"character":14}},"rangeLength":0,"text":"a"}]}}
2025/01/05 16:57:28 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:28 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":14,"diagnostics":[]}}
2025/01/05 16:57:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:28 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":15,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":15},"end":{"line":34,"character":15}},"rangeLength":0,"text":"s"}]}}
2025/01/05 16:57:28 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:28 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":15,"diagnostics":[]}}
2025/01/05 16:57:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:28 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":16,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":16}},"rangeLength":0,"text":"d"}]}}
2025/01/05 16:57:28 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:28 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":16,"diagnostics":[]}}
2025/01/05 16:57:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:29 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":17,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":17},"end":{"line":34,"character":17}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:57:29 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:29 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":17,"diagnostics":[]}}
2025/01/05 16:57:29 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:30 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:57:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":18,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":14},"end":{"line":34,"character":18}},"rangeLength":4,"text":""}]}}
2025/01/05 16:57:30 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:30 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":18,"diagnostics":[]}}
2025/01/05 16:57:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:30 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":19,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":14},"end":{"line":34,"character":14}},"rangeLength":0,"text":"d"}]}}
2025/01/05 16:57:30 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:30 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":19,"diagnostics":[]}}
2025/01/05 16:57:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:30 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":20,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":15},"end":{"line":34,"character":15}},"rangeLength":0,"text":"a"}]}}
2025/01/05 16:57:30 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:30 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":20,"diagnostics":[]}}
2025/01/05 16:57:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:30 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":21,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":16}},"rangeLength":0,"text":"s"}]}}
2025/01/05 16:57:30 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:30 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":21,"diagnostics":[]}}
2025/01/05 16:57:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:30 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":22,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":17},"end":{"line":34,"character":17}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:57:30 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:30 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":22,"diagnostics":[]}}
2025/01/05 16:57:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:30 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":23,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":18},"end":{"line":34,"character":18}},"rangeLength":0,"text":"S"}]}}
2025/01/05 16:57:30 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:30 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":23,"diagnostics":[]}}
2025/01/05 16:57:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:31 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":24,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":19},"end":{"line":34,"character":19}},"rangeLength":0,"text":"t"}]}}
2025/01/05 16:57:31 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:31 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":24,"diagnostics":[]}}
2025/01/05 16:57:31 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:31 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":25,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":20},"end":{"line":34,"character":20}},"rangeLength":0,"text":"r"}]}}
2025/01/05 16:57:31 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:31 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":25,"diagnostics":[]}}
2025/01/05 16:57:31 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:31 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":26,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":21},"end":{"line":34,"character":21}},"rangeLength":0,"text":"i"}]}}
2025/01/05 16:57:31 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:31 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":26,"diagnostics":[]}}
2025/01/05 16:57:31 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:31 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":27,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":22}},"rangeLength":0,"text":"c"}]}}
2025/01/05 16:57:31 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:31 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":27,"diagnostics":[]}}
2025/01/05 16:57:31 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:31 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:57:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":28,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":23}},"rangeLength":1,"text":""}]}}
2025/01/05 16:57:31 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:31 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":28,"diagnostics":[]}}
2025/01/05 16:57:31 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:31 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:57:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":29,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":21},"end":{"line":34,"character":22}},"rangeLength":1,"text":""}]}}
2025/01/05 16:57:31 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:31 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":29,"diagnostics":[]}}
2025/01/05 16:57:31 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:32 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":30,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":21},"end":{"line":34,"character":21}},"rangeLength":0,"text":"u"}]}}
2025/01/05 16:57:32 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:32 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":30,"diagnostics":[]}}
2025/01/05 16:57:32 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:32 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":31,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":22},"end":{"line":34,"character":22}},"rangeLength":0,"text":"c"}]}}
2025/01/05 16:57:32 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:32 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":31,"diagnostics":[]}}
2025/01/05 16:57:32 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:32 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":32,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":23},"end":{"line":34,"character":23}},"rangeLength":0,"text":"t"}]}}
2025/01/05 16:57:32 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:32 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":32,"diagnostics":[]}}
2025/01/05 16:57:32 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:32 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":33,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":24},"end":{"line":34,"character":24}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:57:32 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:32 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":33,"diagnostics":[]}}
2025/01/05 16:57:32 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:32 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":34,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":25},"end":{"line":34,"character":25}},"rangeLength":0,"text":"O"}]}}
2025/01/05 16:57:32 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:32 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":34,"diagnostics":[]}}
2025/01/05 16:57:32 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:33 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":35,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":26},"end":{"line":34,"character":26}},"rangeLength":0,"text":"n"}]}}
2025/01/05 16:57:33 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:33 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":35,"diagnostics":[]}}
2025/01/05 16:57:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:33 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":36,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":27},"end":{"line":34,"character":27}},"rangeLength":0,"text":"e"}]}}
2025/01/05 16:57:33 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:33 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":36,"diagnostics":[]}}
2025/01/05 16:57:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:34 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/05 16:57:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":37,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":3},"end":{"line":34,"character":3}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:57:34 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:34 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":37,"diagnostics":[]}}
2025/01/05 16:57:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:34 util.go:36: Trace | Read Content-Length: 295 from Content-Length: 295
2025/01/05 16:57:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":38,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":4},"end":{"line":34,"character":4}},"rangeLength":0,"text":"    "}]}}
2025/01/05 16:57:34 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:34 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":38,"diagnostics":[]}}
2025/01/05 16:57:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:38 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:57:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":44,"character":14}}}
2025/01/05 16:57:38 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:57:38 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:57:38 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:57:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n\n\n"},"range":{"start":{"line":44,"character":14},"end":{"line":44,"character":14}}}}
2025/01/05 16:57:38 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**




2025/01/05 16:57:42 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:57:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":44,"character":17}}}
2025/01/05 16:57:42 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:57:42 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:57:42 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:57:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n\n\n"},"range":{"start":{"line":44,"character":17},"end":{"line":44,"character":17}}}}
2025/01/05 16:57:42 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**




2025/01/05 16:57:44 util.go:36: Trace | Read Content-Length: 295 from Content-Length: 295
2025/01/05 16:57:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":39,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":0},"end":{"line":42,"character":0}},"rangeLength":0,"text":"    "}]}}
2025/01/05 16:57:44 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:44 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":39,"diagnostics":[]}}
2025/01/05 16:57:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:44 util.go:36: Trace | Read Content-Length: 295 from Content-Length: 295
2025/01/05 16:57:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":40,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":4},"end":{"line":42,"character":4}},"rangeLength":0,"text":"    "}]}}
2025/01/05 16:57:44 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:44 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":40,"diagnostics":[]}}
2025/01/05 16:57:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:44 util.go:36: Trace | Read Content-Length: 295 from Content-Length: 295
2025/01/05 16:57:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":41,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":8},"end":{"line":42,"character":8}},"rangeLength":0,"text":"    "}]}}
2025/01/05 16:57:44 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:44 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":41,"diagnostics":[]}}
2025/01/05 16:57:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:44 util.go:36: Trace | Read Content-Length: 297 from Content-Length: 297
2025/01/05 16:57:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":42,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":12},"end":{"line":42,"character":12}},"rangeLength":0,"text":"    "}]}}
2025/01/05 16:57:44 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:44 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":42,"diagnostics":[]}}
2025/01/05 16:57:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:45 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:57:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":43,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":15},"end":{"line":42,"character":16}},"rangeLength":1,"text":""}]}}
2025/01/05 16:57:45 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:45 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":43,"diagnostics":[]}}
2025/01/05 16:57:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:45 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:57:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":44,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":14},"end":{"line":42,"character":15}},"rangeLength":1,"text":""}]}}
2025/01/05 16:57:45 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:45 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":44,"diagnostics":[]}}
2025/01/05 16:57:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:45 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:57:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":45,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":13},"end":{"line":42,"character":14}},"rangeLength":1,"text":""}]}}
2025/01/05 16:57:45 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:45 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":45,"diagnostics":[]}}
2025/01/05 16:57:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:46 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:57:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":46,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":12},"end":{"line":42,"character":13}},"rangeLength":1,"text":""}]}}
2025/01/05 16:57:46 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:46 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":46,"diagnostics":[]}}
2025/01/05 16:57:46 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:46 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":47,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":12},"end":{"line":42,"character":12}},"rangeLength":0,"text":"/"}]}}
2025/01/05 16:57:46 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:46 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":47,"diagnostics":[{"range":{"start":{"line":44,"character":29},"end":{"line":44,"character":30}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:45:29\nidentifier(i, me, o);\n                  ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"}]}}
2025/01/05 16:57:46 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 52 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 52 44 34 99 104 97 114 97 99 116 101 114 34 58 51 48 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 53 58 50 57 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 44 32 111 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 93 125] <nil> <nil>}
2025/01/05 16:57:46 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:45:29
identifier(i, me, o);
                  ^  
Referenzierte Variable nicht gefunden!

2025/01/05 16:57:47 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":48,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":13},"end":{"line":42,"character":13}},"rangeLength":0,"text":"/"}]}}
2025/01/05 16:57:47 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:47 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":48,"diagnostics":[]}}
2025/01/05 16:57:47 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:47 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":49,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":14},"end":{"line":42,"character":14}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:57:47 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:47 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":49,"diagnostics":[]}}
2025/01/05 16:57:47 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:47 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":50,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":15},"end":{"line":42,"character":15}},"rangeLength":0,"text":"K"}]}}
2025/01/05 16:57:47 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:47 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":50,"diagnostics":[]}}
2025/01/05 16:57:47 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:47 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":51,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":16},"end":{"line":42,"character":16}},"rangeLength":0,"text":"o"}]}}
2025/01/05 16:57:47 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:47 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":51,"diagnostics":[]}}
2025/01/05 16:57:47 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:48 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":52,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":17},"end":{"line":42,"character":17}},"rangeLength":0,"text":"m"}]}}
2025/01/05 16:57:48 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:48 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":52,"diagnostics":[]}}
2025/01/05 16:57:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:48 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":53,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":18},"end":{"line":42,"character":18}},"rangeLength":0,"text":"m"}]}}
2025/01/05 16:57:48 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:48 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":53,"diagnostics":[]}}
2025/01/05 16:57:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:48 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":54,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":19},"end":{"line":42,"character":19}},"rangeLength":0,"text":"e"}]}}
2025/01/05 16:57:48 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:48 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":54,"diagnostics":[]}}
2025/01/05 16:57:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:48 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":55,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":20},"end":{"line":42,"character":20}},"rangeLength":0,"text":"n"}]}}
2025/01/05 16:57:48 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:48 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":55,"diagnostics":[]}}
2025/01/05 16:57:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:48 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":56,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":21},"end":{"line":42,"character":21}},"rangeLength":0,"text":"t"}]}}
2025/01/05 16:57:48 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:48 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":56,"diagnostics":[]}}
2025/01/05 16:57:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:48 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":57,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":22},"end":{"line":42,"character":22}},"rangeLength":0,"text":"a"}]}}
2025/01/05 16:57:48 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:48 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":57,"diagnostics":[]}}
2025/01/05 16:57:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:48 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":58,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":23},"end":{"line":42,"character":23}},"rangeLength":0,"text":"r"}]}}
2025/01/05 16:57:48 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:48 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":58,"diagnostics":[]}}
2025/01/05 16:57:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:48 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":59,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":24},"end":{"line":42,"character":24}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:57:48 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:48 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":59,"diagnostics":[]}}
2025/01/05 16:57:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:49 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":60,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":25},"end":{"line":42,"character":25}},"rangeLength":0,"text":"v"}]}}
2025/01/05 16:57:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":60,"diagnostics":[]}}
2025/01/05 16:57:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:49 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":61,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":26},"end":{"line":42,"character":26}},"rangeLength":0,"text":"o"}]}}
2025/01/05 16:57:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":61,"diagnostics":[]}}
2025/01/05 16:57:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:49 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":62,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":27},"end":{"line":42,"character":27}},"rangeLength":0,"text":"n"}]}}
2025/01/05 16:57:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":62,"diagnostics":[]}}
2025/01/05 16:57:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:49 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":63,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":28},"end":{"line":42,"character":28}},"rangeLength":0,"text":" "}]}}
2025/01/05 16:57:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":63,"diagnostics":[]}}
2025/01/05 16:57:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:49 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":64,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":29},"end":{"line":42,"character":29}},"rangeLength":0,"text":"O"}]}}
2025/01/05 16:57:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":64,"diagnostics":[]}}
2025/01/05 16:57:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:50 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:50 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":65,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":30},"end":{"line":42,"character":30}},"rangeLength":0,"text":"n"}]}}
2025/01/05 16:57:50 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:50 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:50 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":65,"diagnostics":[]}}
2025/01/05 16:57:50 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:50 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/05 16:57:50 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":66,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":42,"character":31},"end":{"line":42,"character":31}},"rangeLength":0,"text":"e"}]}}
2025/01/05 16:57:50 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:57:50 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:57:50 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":66,"diagnostics":[]}}
2025/01/05 16:57:50 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:57:52 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:57:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":44,"character":20}}}
2025/01/05 16:57:52 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:57:52 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:57:52 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:57:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"11","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\nKommentar von One\n\n\n\n"},"range":{"start":{"line":44,"character":20},"end":{"line":44,"character":20}}}}
2025/01/05 16:57:52 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**

Kommentar von One




2025/01/05 16:57:54 util.go:36: Trace | Read Content-Length: 199 from Content-Length: 199
2025/01/05 16:57:54 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"12","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":44,"character":15}}}
2025/01/05 16:57:54 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:57:54 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:57:54 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:57:54 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"12","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\nKommen\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\nKommentar von One\n\n\n\n"},"range":{"start":{"line":44,"character":15},"end":{"line":44,"character":15}}}}
2025/01/05 16:57:54 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**

Kommen



* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**

Kommentar von One




2025/01/05 16:58:19 util.go:36: Trace | Read Content-Length: 61 from Content-Length: 61
2025/01/05 16:58:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"13","method":"shutdown","params":null}
2025/01/05 16:58:19 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:58:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"13"}
2025/01/05 16:58:19 server.go:69: INFO  | Server Closed
2025/01/05 16:58:19 main.go:28: Server Shutdown
2025/01/05 16:58:19 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:58:19 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:58:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:58:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:58:19 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:58:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:58:19 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:58:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:58:19 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:58:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:58:19 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:58:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:58:19 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:58:19 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:58:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:58:19 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:58:19 util.go:36: Trace | Read Content-Length: 1111 from Content-Length: 1111
2025/01/05 16:58:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommen\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:58:19 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:58:19 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:58:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:58:19 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:58:21 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:58:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":44,"character":17}}}
2025/01/05 16:58:21 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:58:21 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:58:21 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:58:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)\n\n\nKommen\n\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**\n\n\nKommentar von One\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n\n"},"range":{"start":{"line":44,"character":17},"end":{"line":44,"character":17}}}}
2025/01/05 16:58:21 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)


Kommen



* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**


Kommentar von One



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**



2025/01/05 16:58:53 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/05 16:58:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"shutdown","params":null}
2025/01/05 16:58:53 server.go:82: INFO  | Received Shutdown Request
2025/01/05 16:58:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3"}
2025/01/05 16:58:53 server.go:69: INFO  | Server Closed
2025/01/05 16:58:53 main.go:28: Server Shutdown
2025/01/05 16:58:53 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/05 16:58:53 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/05 16:58:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":26454,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/05 16:58:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/05 16:58:53 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/05 16:58:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/05 16:58:53 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/05 16:58:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/05 16:58:53 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/05 16:58:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/05 16:58:53 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/05 16:58:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/05 16:58:53 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:58:53 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/05 16:58:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:58:53 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:58:53 util.go:36: Trace | Read Content-Length: 1111 from Content-Length: 1111
2025/01/05 16:58:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommen\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/05 16:58:53 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/05 16:58:53 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:58:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/05 16:58:53 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:58:55 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:58:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":44,"character":18}}}
2025/01/05 16:58:55 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:58:55 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:58:55 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:58:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)\n\n---\n\nKommen\n\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**\n\n\nKommentar von One\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n\n"},"range":{"start":{"line":44,"character":18},"end":{"line":44,"character":18}}}}
2025/01/05 16:58:55 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)

---

Kommen



* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**


Kommentar von One



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**



2025/01/05 16:59:00 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:59:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":39,"character":21},"end":{"line":39,"character":21}},"rangeLength":0,"text":"t"}]}}
2025/01/05 16:59:00 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:59:00 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:59:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":2,"diagnostics":[]}}
2025/01/05 16:59:00 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:59:00 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:59:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":3,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":39,"character":22},"end":{"line":39,"character":22}},"rangeLength":0,"text":"a"}]}}
2025/01/05 16:59:00 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:59:00 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:59:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":3,"diagnostics":[]}}
2025/01/05 16:59:00 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:59:00 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:59:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":4,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":39,"character":23},"end":{"line":39,"character":23}},"rangeLength":0,"text":"r"}]}}
2025/01/05 16:59:00 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:59:00 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:59:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":4,"diagnostics":[]}}
2025/01/05 16:59:00 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:59:02 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:59:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":44,"character":19}}}
2025/01/05 16:59:02 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:59:02 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:59:02 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:59:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)\n\n---\n\nKommentar\n\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**\n\n\nKommentar von One\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n\n"},"range":{"start":{"line":44,"character":19},"end":{"line":44,"character":19}}}}
2025/01/05 16:59:02 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)

---

Kommentar



* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**


Kommentar von One



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**



2025/01/05 16:59:22 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:59:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":5,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":39,"character":24},"end":{"line":39,"character":24}},"rangeLength":0,"text":"S"}]}}
2025/01/05 16:59:22 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:59:22 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:59:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":5,"diagnostics":[]}}
2025/01/05 16:59:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:59:22 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/05 16:59:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":6,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":39,"character":25},"end":{"line":39,"character":25}},"rangeLength":0,"text":"D"}]}}
2025/01/05 16:59:22 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:59:22 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:59:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":6,"diagnostics":[]}}
2025/01/05 16:59:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:59:23 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/05 16:59:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":7,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":39,"character":25},"end":{"line":39,"character":26}},"rangeLength":1,"text":""}]}}
2025/01/05 16:59:23 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:59:23 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:59:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":7,"diagnostics":[]}}
2025/01/05 16:59:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:59:23 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/05 16:59:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":8,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":39,"character":24},"end":{"line":39,"character":25}},"rangeLength":1,"text":""}]}}
2025/01/05 16:59:23 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/05 16:59:23 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/05 16:59:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":8,"diagnostics":[]}}
2025/01/05 16:59:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/05 16:59:58 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 16:59:58 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":44,"character":17}}}
2025/01/05 16:59:58 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 16:59:58 hoverService.go:83: Trace | Start Get File Content
2025/01/05 16:59:58 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 16:59:58 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)\n\n---\n\nKommentar\n\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**\n\n\nKommentar von One\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n\n"},"range":{"start":{"line":44,"character":17},"end":{"line":44,"character":17}}}}
2025/01/05 16:59:58 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)

---

Kommentar



* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**


Kommentar von One



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**



2025/01/05 17:00:32 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 17:00:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":44,"character":19}}}
2025/01/05 17:00:32 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 17:00:32 hoverService.go:83: Trace | Start Get File Content
2025/01/05 17:00:32 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 17:00:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)\n\n---\n\nKommentar\n\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**\n\n\nKommentar von One\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n\n"},"range":{"start":{"line":44,"character":19},"end":{"line":44,"character":19}}}}
2025/01/05 17:00:32 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)

---

Kommentar



* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**


Kommentar von One



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**



2025/01/05 17:00:53 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/05 17:00:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":44,"character":20}}}
2025/01/05 17:00:53 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/05 17:00:53 hoverService.go:83: Trace | Start Get File Content
2025/01/05 17:00:53 hoverService.go:89: %!S(string=Trace | )tart Find Node
2025/01/05 17:00:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)\n\n---\n\nKommentar\n\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**\n\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**\n\n\nKommentar von One\n\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n\n"},"range":{"start":{"line":44,"character":20},"end":{"line":44,"character":20}}}}
2025/01/05 17:00:53 hoverService.go:117: Trace | Finished Hover with Content: 
# Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L39)

---

Kommentar



* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L41)**




* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L42)**


Kommentar von One



* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**



2025/01/06 13:28:22 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 13:28:22 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:28:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:28:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:28:22 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:28:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:28:22 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:28:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:28:22 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:28:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:28:24 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:28:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:28:24 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:28:24 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:28:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:28:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:28:24 util.go:36: Trace | Read Content-Length: 1114 from Content-Length: 1114
2025/01/06 13:28:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommentar\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:28:24 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:28:24 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:28:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:28:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:28:24 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 13:28:24 util.go:36: Trace | Read Content-Length: 3465 from Content-Length: 3465
2025/01/06 13:28:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/demoANTLR","rootUri":"file:///home/alex/demoANTLR","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/demoANTLR","name":"demoANTLR"}]}}
2025/01/06 13:28:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:28:24 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:28:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:28:24 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:28:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:28:24 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:28:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:28:24 util.go:36: Trace | Read Content-Length: 2297 from Content-Length: 2297
2025/01/06 13:28:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/demoANTLR/src/main/bnf/test.dmf","languageId":"text","version":1,"text":"dmf 1.0\nmodel \"modelname\" version 1.0\nimport de.alex.brand from \"de.github.com/Winnetoe24/beispielModel/master\" (model \"modelname2\" version 1.0)\n\nexpand package de.alex.brand {\n        expand package beispiel {\n            struct Ort {\n                arg double laengengrad;\n                arg double breitengrad;\n            }\n            expand struct Adresse extends de.alex.brand.Ort implements ..Ortable, de.alex.brand.interfaces.TestInterface {\n                // Worauf beziehen sich die Koordinaten des Orts\n                ref AdressPosition position;\n            }\n            enum AdressPosition {\n                MITTE(1);\n                TUER(2);\n                NORD_WEST(10);\n            }\n            expand interface Ortable implements de.alex.brand.TestInterface {\n\n                func void method();\n            }\n        }\n}\n\npackage de.beispiel {\n    package personen {\n        // Eine Person die in der Datenbank hinterlegt wird\n        entity Person {\n            arg int id;\n            arg string name;\n            arg date geburtsdatum;\n            ref Adresse adresse;\n\n            identifier(id);\n        }\n\n        entity Kunde {\n            // Die Person, welche als Kunde einkauft\n            ref Person person;\n\n            // Die EinkÃ¤ufe welche der Kunde vorgenommen hat\n            ref Set\u003c..einkauf.Einkauf\u003e einkaeufe;\n\n            identifier(person);\n        }\n    }\n\n    package einkauf {\n        // Ein Einkauf\n        struct Einkauf {\n            ref Set\u003cBezahlLog\u003e log;\n        }\n\n        entity BezahlLog {\n            arg string uuid;\n            ref BezahlStatus status;\n            arg datetime timestamp;\n\n            identifier(uuid);\n        }\n\n        enum BezahlStatus {\n            // Gibt an, ob der BezahlVorgang nicht reibungslos ablÃ¤uft\n            arg boolean isFehler;\n\n            RECHNUNG_ERSTELLT(1, false);\n            RECHNUNG_VERSAND_FEHLER(2, true);\n            ZAHLUNG_EINGEGANGEN(3, false);\n            MAHNUNG_VERSENDET(4, true);\n        }\n\n    }\n}"}}}
2025/01/06 13:28:24 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:28:24 fileService.go:88: Trace | Create FileHandle for file:///home/alex/demoANTLR/src/main/bnf/test.dmf
2025/01/06 13:28:24 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 13:28:25 util.go:36: Trace | Read Content-Length: 3465 from Content-Length: 3465
2025/01/06 13:28:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/demoANTLR","rootUri":"file:///home/alex/demoANTLR","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/demoANTLR","name":"demoANTLR"}]}}
2025/01/06 13:28:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:28:25 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:28:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:28:25 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:28:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:28:25 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:28:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:28:25 util.go:36: Trace | Read Content-Length: 2297 from Content-Length: 2297
2025/01/06 13:28:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/demoANTLR/src/main/bnf/test.dmf","languageId":"text","version":1,"text":"dmf 1.0\nmodel \"modelname\" version 1.0\nimport de.alex.brand from \"de.github.com/Winnetoe24/beispielModel/master\" (model \"modelname2\" version 1.0)\n\nexpand package de.alex.brand {\n        expand package beispiel {\n            struct Ort {\n                arg double laengengrad;\n                arg double breitengrad;\n            }\n            expand struct Adresse extends de.alex.brand.Ort implements ..Ortable, de.alex.brand.interfaces.TestInterface {\n                // Worauf beziehen sich die Koordinaten des Orts\n                ref AdressPosition position;\n            }\n            enum AdressPosition {\n                MITTE(1);\n                TUER(2);\n                NORD_WEST(10);\n            }\n            expand interface Ortable implements de.alex.brand.TestInterface {\n\n                func void method();\n            }\n        }\n}\n\npackage de.beispiel {\n    package personen {\n        // Eine Person die in der Datenbank hinterlegt wird\n        entity Person {\n            arg int id;\n            arg string name;\n            arg date geburtsdatum;\n            ref Adresse adresse;\n\n            identifier(id);\n        }\n\n        entity Kunde {\n            // Die Person, welche als Kunde einkauft\n            ref Person person;\n\n            // Die EinkÃ¤ufe welche der Kunde vorgenommen hat\n            ref Set\u003c..einkauf.Einkauf\u003e einkaeufe;\n\n            identifier(person);\n        }\n    }\n\n    package einkauf {\n        // Ein Einkauf\n        struct Einkauf {\n            ref Set\u003cBezahlLog\u003e log;\n        }\n\n        entity BezahlLog {\n            arg string uuid;\n            ref BezahlStatus status;\n            arg datetime timestamp;\n\n            identifier(uuid);\n        }\n\n        enum BezahlStatus {\n            // Gibt an, ob der BezahlVorgang nicht reibungslos ablÃ¤uft\n            arg boolean isFehler;\n\n            RECHNUNG_ERSTELLT(1, false);\n            RECHNUNG_VERSAND_FEHLER(2, true);\n            ZAHLUNG_EINGEGANGEN(3, false);\n            MAHNUNG_VERSENDET(4, true);\n        }\n\n    }\n}"}}}
2025/01/06 13:28:25 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:28:25 fileService.go:88: Trace | Create FileHandle for file:///home/alex/demoANTLR/src/main/bnf/test.dmf
2025/01/06 13:28:32 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:28:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":39,"character":20}}}
2025/01/06 13:28:32 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:28:32 hoverService.go:90: Trace | Start Get File Content
2025/01/06 13:28:32 hoverService.go:96: %!S(string=Trace | )tart Find Node
2025/01/06 13:28:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n### OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":39,"character":20},"end":{"line":39,"character":20}}}}
2025/01/06 13:28:32 hoverService.go:120: Trace | Finished Hover with Content: 
### OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/06 13:28:35 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:28:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":17}}}
2025/01/06 13:28:35 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:28:35 hoverService.go:90: Trace | Start Get File Content
2025/01/06 13:28:35 hoverService.go:96: %!S(string=Trace | )tart Find Node
2025/01/06 13:28:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n### int \nKommentar\n\n\n"},"range":{"start":{"line":40,"character":17},"end":{"line":40,"character":17}}}}
2025/01/06 13:28:35 hoverService.go:120: Trace | Finished Hover with Content: 
### int 
Kommentar



2025/01/06 13:28:39 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:28:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":21}}}
2025/01/06 13:28:39 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:28:39 hoverService.go:90: Trace | Start Get File Content
2025/01/06 13:28:39 hoverService.go:96: %!S(string=Trace | )tart Find Node
2025/01/06 13:28:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n### int \nKommentar\n\n\n"},"range":{"start":{"line":40,"character":21},"end":{"line":40,"character":21}}}}
2025/01/06 13:28:39 hoverService.go:120: Trace | Finished Hover with Content: 
### int 
Kommentar



2025/01/06 13:29:08 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:29:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"shutdown","params":null}
2025/01/06 13:29:08 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:29:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5"}
2025/01/06 13:29:08 server.go:69: INFO  | Server Closed
2025/01/06 13:29:08 main.go:28: Server Shutdown
2025/01/06 13:29:10 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 13:29:10 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:29:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:29:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:29:10 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:29:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:29:10 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:29:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:29:10 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:29:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:29:10 util.go:36: Trace | Read Content-Length: 1114 from Content-Length: 1114
2025/01/06 13:29:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommentar\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:29:10 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:29:10 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:29:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:29:10 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:29:10 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:29:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:29:10 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:29:10 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:29:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:29:10 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:29:11 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:29:11 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":18}}}
2025/01/06 13:29:11 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:29:11 hoverService.go:90: Trace | Start Get File Content
2025/01/06 13:29:11 hoverService.go:96: %!S(string=Trace | )tart Find Node
2025/01/06 13:29:11 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n### int i\nKommentar\n\n\n"},"range":{"start":{"line":40,"character":18},"end":{"line":40,"character":18}}}}
2025/01/06 13:29:11 hoverService.go:120: Trace | Finished Hover with Content: 
### int i
Kommentar



2025/01/06 13:29:17 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:29:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":19}}}
2025/01/06 13:29:17 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:29:17 hoverService.go:90: Trace | Start Get File Content
2025/01/06 13:29:17 hoverService.go:96: %!S(string=Trace | )tart Find Node
2025/01/06 13:29:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n### string me\n\n"},"range":{"start":{"line":41,"character":19},"end":{"line":41,"character":19}}}}
2025/01/06 13:29:17 hoverService.go:120: Trace | Finished Hover with Content: 
### string me


2025/01/06 13:29:19 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:29:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":39,"character":18}}}
2025/01/06 13:29:19 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:29:19 hoverService.go:90: Trace | Start Get File Content
2025/01/06 13:29:19 hoverService.go:96: %!S(string=Trace | )tart Find Node
2025/01/06 13:29:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n### OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":39,"character":18},"end":{"line":39,"character":18}}}}
2025/01/06 13:29:19 hoverService.go:120: Trace | Finished Hover with Content: 
### OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/06 13:30:55 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:30:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":39,"character":24}}}
2025/01/06 13:30:55 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:30:55 hoverService.go:90: Trace | Start Get File Content
2025/01/06 13:30:55 hoverService.go:96: %!S(string=Trace | )tart Find Node
2025/01/06 13:30:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n### OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":39,"character":24},"end":{"line":39,"character":24}}}}
2025/01/06 13:30:55 hoverService.go:120: Trace | Finished Hover with Content: 
### OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/06 13:31:16 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:31:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":16}}}
2025/01/06 13:31:16 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:31:16 hoverService.go:90: Trace | Start Get File Content
2025/01/06 13:31:16 hoverService.go:96: %!S(string=Trace | )tart Find Node
2025/01/06 13:31:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n### int i\nKommentar\n\n\n"},"range":{"start":{"line":40,"character":16},"end":{"line":40,"character":16}}}}
2025/01/06 13:31:16 hoverService.go:120: Trace | Finished Hover with Content: 
### int i
Kommentar



2025/01/06 13:39:28 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:39:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"shutdown","params":null}
2025/01/06 13:39:28 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:39:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7"}
2025/01/06 13:39:28 server.go:69: INFO  | Server Closed
2025/01/06 13:39:28 main.go:28: Server Shutdown
2025/01/06 13:39:29 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 13:39:29 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:39:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:39:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:39:29 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:39:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:39:29 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:39:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:39:29 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:39:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:39:29 util.go:36: Trace | Read Content-Length: 1114 from Content-Length: 1114
2025/01/06 13:39:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommentar\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:39:29 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:39:29 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:39:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:39:29 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:39:29 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:39:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:39:29 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:39:29 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:39:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:39:29 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:39:30 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:39:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":39,"character":21}}}
2025/01/06 13:39:30 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:39:30 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:39:30 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:39:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n### OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":39,"character":21},"end":{"line":39,"character":21}}}}
2025/01/06 13:39:30 hoverService.go:124: Trace | Finished Hover with Content: 
### OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/06 13:39:34 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:39:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":15}}}
2025/01/06 13:39:34 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:39:34 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:39:34 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:39:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n### int i\nKommentar\n\n\n"},"range":{"start":{"line":40,"character":15},"end":{"line":40,"character":15}}}}
2025/01/06 13:39:34 hoverService.go:124: Trace | Finished Hover with Content: 
### int i
Kommentar



2025/01/06 13:39:36 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:39:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":39,"character":21}}}
2025/01/06 13:39:36 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:39:36 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:39:36 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:39:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n### OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":39,"character":21},"end":{"line":39,"character":21}}}}
2025/01/06 13:39:36 hoverService.go:124: Trace | Finished Hover with Content: 
### OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/06 13:40:06 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:40:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"shutdown","params":null}
2025/01/06 13:40:06 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:40:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5"}
2025/01/06 13:40:06 server.go:69: INFO  | Server Closed
2025/01/06 13:40:06 main.go:28: Server Shutdown
2025/01/06 13:40:07 fileService.go:35: Trace | FileChangeListeners: [0xc0000c8048]
2025/01/06 13:40:07 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:40:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:40:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:40:07 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:40:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:40:07 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:40:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:40:07 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:40:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:40:07 util.go:36: Trace | Read Content-Length: 1114 from Content-Length: 1114
2025/01/06 13:40:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n        entity OneE {\n            // Kommentar\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:40:07 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:40:07 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:40:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:40:07 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:40:07 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:40:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:40:07 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:40:07 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:40:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:40:07 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:40:08 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:40:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":39,"character":20}}}
2025/01/06 13:40:08 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:40:08 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:40:08 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:40:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n### OneE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":39,"character":20},"end":{"line":39,"character":20}}}}
2025/01/06 13:40:08 hoverService.go:124: Trace | Finished Hover with Content: 
### OneE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/06 13:40:13 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:40:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":37,"character":0},"end":{"line":37,"character":0}},"rangeLength":0,"text":"\n"}]}}
2025/01/06 13:40:13 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:40:13 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:40:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":2,"diagnostics":[]}}
2025/01/06 13:40:13 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:40:15 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:40:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":19}}}
2025/01/06 13:40:15 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:40:15 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:40:15 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:40:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n### rekur\n##### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)\n\n"},"range":{"start":{"line":34,"character":19},"end":{"line":34,"character":19}}}}
2025/01/06 13:40:15 hoverService.go:124: Trace | Finished Hover with Content: 
### rekur
##### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)


2025/01/06 13:40:34 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:40:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"shutdown","params":null}
2025/01/06 13:40:34 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:40:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4"}
2025/01/06 13:40:34 server.go:69: INFO  | Server Closed
2025/01/06 13:40:34 main.go:28: Server Shutdown
2025/01/06 13:40:35 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 13:40:35 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:40:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:40:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:40:35 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:40:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:40:35 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:40:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:40:35 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:40:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:40:35 util.go:36: Trace | Read Content-Length: 1116 from Content-Length: 1116
2025/01/06 13:40:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:40:35 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:40:35 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:40:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:40:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:40:35 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:40:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:40:35 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:40:35 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:40:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:40:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:40:36 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:40:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":17}}}
2025/01/06 13:40:36 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:40:36 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:40:36 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:40:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"Das ist das Struct One\n\n"},"range":{"start":{"line":34,"character":17},"end":{"line":34,"character":17}}}}
2025/01/06 13:40:36 hoverService.go:124: Trace | Finished Hover with Content: Das ist das Struct One


2025/01/06 13:40:38 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:40:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":18}}}
2025/01/06 13:40:38 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:40:38 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:40:38 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:40:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"Kommentar\n\n"},"range":{"start":{"line":40,"character":18},"end":{"line":40,"character":18}}}}
2025/01/06 13:40:38 hoverService.go:124: Trace | Finished Hover with Content: Kommentar


2025/01/06 13:40:41 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:40:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":16}}}
2025/01/06 13:40:41 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:40:41 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:40:41 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:40:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n### int i\nKommentar\n\n\n"},"range":{"start":{"line":41,"character":16},"end":{"line":41,"character":16}}}}
2025/01/06 13:40:41 hoverService.go:124: Trace | Finished Hover with Content: 
### int i
Kommentar



2025/01/06 13:40:44 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:40:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":18}}}
2025/01/06 13:40:44 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:40:44 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:40:44 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:40:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"Kommentar\n\n"},"range":{"start":{"line":40,"character":18},"end":{"line":40,"character":18}}}}
2025/01/06 13:40:44 hoverService.go:124: Trace | Finished Hover with Content: Kommentar


2025/01/06 13:40:47 util.go:36: Trace | Read Content-Length: 306 from Content-Length: 306
2025/01/06 13:40:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":40,"character":24},"end":{"line":40,"character":24}},"rangeLength":0,"text":"\n            "}]}}
2025/01/06 13:40:47 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:40:47 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:40:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":2,"diagnostics":[]}}
2025/01/06 13:40:47 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:40:47 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/06 13:40:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":3,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":12},"end":{"line":41,"character":12}},"rangeLength":0,"text":"/"}]}}
2025/01/06 13:40:47 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:40:47 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:40:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":3,"diagnostics":[{"range":{"start":{"line":46,"character":22},"end":{"line":46,"character":23}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:22\nidentifier(i, me, o);\n           ^         \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":49,"character":22},"end":{"line":49,"character":23}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:50:22\nidentifier(i, me);\n           ^      \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"}]}}
2025/01/06 13:40:47 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 52 55 58 50 50 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 44 32 111 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 32 32 32 32 32 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 57 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 52 57 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 53 48 58 50 50 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 32 32 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 93 125] <nil> <nil>}
2025/01/06 13:40:47 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:47:22
identifier(i, me, o);
           ^         
Referenzierte Variable nicht gefunden!

2025/01/06 13:40:47 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position /home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf:50:22
identifier(i, me);
           ^      
Referenzierte Variable nicht gefunden!

2025/01/06 13:40:47 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/06 13:40:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":4,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":13},"end":{"line":41,"character":13}},"rangeLength":0,"text":"/"}]}}
2025/01/06 13:40:47 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:40:47 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:40:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":4,"diagnostics":[]}}
2025/01/06 13:40:47 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:40:48 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/06 13:40:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":5,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":14},"end":{"line":41,"character":14}},"rangeLength":0,"text":" "}]}}
2025/01/06 13:40:48 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:40:48 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:40:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":5,"diagnostics":[]}}
2025/01/06 13:40:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:40:49 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/06 13:40:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":6,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":15},"end":{"line":41,"character":15}},"rangeLength":0,"text":"H"}]}}
2025/01/06 13:40:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:40:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:40:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":6,"diagnostics":[]}}
2025/01/06 13:40:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:40:49 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/06 13:40:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":7,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":16},"end":{"line":41,"character":16}},"rangeLength":0,"text":"a"}]}}
2025/01/06 13:40:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:40:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:40:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":7,"diagnostics":[]}}
2025/01/06 13:40:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:40:49 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/06 13:40:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":8,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":17},"end":{"line":41,"character":17}},"rangeLength":0,"text":"l"}]}}
2025/01/06 13:40:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:40:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:40:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":8,"diagnostics":[]}}
2025/01/06 13:40:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:40:49 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/06 13:40:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":9,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":18},"end":{"line":41,"character":18}},"rangeLength":0,"text":"l"}]}}
2025/01/06 13:40:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:40:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:40:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":9,"diagnostics":[]}}
2025/01/06 13:40:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:40:49 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/06 13:40:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":10,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":41,"character":19},"end":{"line":41,"character":19}},"rangeLength":0,"text":"o"}]}}
2025/01/06 13:40:49 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:40:49 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:40:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":10,"diagnostics":[]}}
2025/01/06 13:40:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:40:52 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:40:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":16}}}
2025/01/06 13:40:52 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:40:52 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:40:52 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:40:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"Kommentar\n\nHallo\n\n"},"range":{"start":{"line":41,"character":16},"end":{"line":41,"character":16}}}}
2025/01/06 13:40:52 hoverService.go:124: Trace | Finished Hover with Content: Kommentar

Hallo


2025/01/06 13:43:24 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:43:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"shutdown","params":null}
2025/01/06 13:43:24 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:43:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7"}
2025/01/06 13:43:24 server.go:69: INFO  | Server Closed
2025/01/06 13:43:24 main.go:28: Server Shutdown
2025/01/06 13:43:24 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 13:43:25 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:43:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:43:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:43:25 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:43:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:43:25 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:43:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:43:25 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:43:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:43:25 util.go:36: Trace | Read Content-Length: 1138 from Content-Length: 1138
2025/01/06 13:43:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:43:25 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:43:25 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:43:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:43:25 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:43:25 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:43:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:43:25 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:43:25 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:43:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:43:25 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:43:26 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:43:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":15}}}
2025/01/06 13:43:26 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:43:26 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:43:26 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:43:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"Das ist das Struct One\n"},"range":{"start":{"line":34,"character":15},"end":{"line":34,"character":15}}}}
2025/01/06 13:43:26 hoverService.go:124: Trace | Finished Hover with Content: Das ist das Struct One

2025/01/06 13:43:28 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:43:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":40,"character":17}}}
2025/01/06 13:43:28 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:43:28 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:43:28 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:43:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"Kommentar\nHallo\n"},"range":{"start":{"line":40,"character":17},"end":{"line":40,"character":17}}}}
2025/01/06 13:43:28 hoverService.go:124: Trace | Finished Hover with Content: Kommentar
Hallo

2025/01/06 13:44:44 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:44:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"shutdown","params":null}
2025/01/06 13:44:44 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:44:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4"}
2025/01/06 13:44:44 server.go:69: INFO  | Server Closed
2025/01/06 13:44:44 main.go:28: Server Shutdown
2025/01/06 13:44:44 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 13:44:45 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:44:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:44:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:44:45 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:44:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:44:45 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:44:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:44:45 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:44:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:44:45 util.go:36: Trace | Read Content-Length: 1138 from Content-Length: 1138
2025/01/06 13:44:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:44:45 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:44:45 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:44:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:44:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:44:45 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:44:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:44:45 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:44:45 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:44:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:44:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:44:46 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:44:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":16}}}
2025/01/06 13:44:46 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:44:46 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:44:46 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:44:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"Das ist das Struct One\n\u003cbr\u003e"},"range":{"start":{"line":34,"character":16},"end":{"line":34,"character":16}}}}
2025/01/06 13:44:46 hoverService.go:124: Trace | Finished Hover with Content: Das ist das Struct One
<br>
2025/01/06 13:44:48 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:44:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":18}}}
2025/01/06 13:44:48 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:44:48 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:44:48 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:44:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"Das ist das Struct One\n\u003cbr\u003e"},"range":{"start":{"line":34,"character":18},"end":{"line":34,"character":18}}}}
2025/01/06 13:44:48 hoverService.go:124: Trace | Finished Hover with Content: Das ist das Struct One
<br>
2025/01/06 13:45:15 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:45:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"shutdown","params":null}
2025/01/06 13:45:15 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:45:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4"}
2025/01/06 13:45:15 server.go:69: INFO  | Server Closed
2025/01/06 13:45:15 main.go:28: Server Shutdown
2025/01/06 13:45:15 fileService.go:35: Trace | FileChangeListeners: [0xc0000c8048]
2025/01/06 13:45:16 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:45:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:45:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:45:16 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:45:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:45:16 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:45:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:45:16 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:45:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:45:16 util.go:36: Trace | Read Content-Length: 1138 from Content-Length: 1138
2025/01/06 13:45:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:45:16 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:45:16 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:45:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:45:16 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:45:16 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:45:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:45:16 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:45:16 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:45:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:45:16 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:45:17 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:45:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":19}}}
2025/01/06 13:45:17 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:45:17 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:45:17 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:45:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"Das ist das Struct One\n"},"range":{"start":{"line":34,"character":19},"end":{"line":34,"character":19}}}}
2025/01/06 13:45:17 hoverService.go:124: Trace | Finished Hover with Content: Das ist das Struct One

2025/01/06 13:45:19 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:45:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":41,"character":16}}}
2025/01/06 13:45:19 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:45:19 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:45:19 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:45:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"Kommentar\n\u003cbr\u003eHallo\n"},"range":{"start":{"line":41,"character":16},"end":{"line":41,"character":16}}}}
2025/01/06 13:45:19 hoverService.go:124: Trace | Finished Hover with Content: Kommentar
<br>Hallo

2025/01/06 13:45:23 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:45:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":48,"character":18}}}
2025/01/06 13:45:23 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:45:23 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:45:23 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:45:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n### TwoE\n##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":48,"character":18},"end":{"line":48,"character":18}}}}
2025/01/06 13:45:23 hoverService.go:124: Trace | Finished Hover with Content: 
### TwoE
##### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/06 13:46:34 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:46:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"shutdown","params":null}
2025/01/06 13:46:34 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:46:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5"}
2025/01/06 13:46:34 server.go:69: INFO  | Server Closed
2025/01/06 13:46:34 main.go:28: Server Shutdown
2025/01/06 13:46:34 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/06 13:46:34 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:46:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:46:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:46:34 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:46:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:46:34 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:46:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:46:34 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:46:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:46:34 util.go:36: Trace | Read Content-Length: 1138 from Content-Length: 1138
2025/01/06 13:46:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:46:34 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:46:34 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:46:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:46:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:46:34 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:46:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:46:34 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:46:34 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:46:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:46:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:46:36 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:46:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":17}}}
2025/01/06 13:46:36 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:46:36 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:46:36 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:46:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n### int i\nKommentar\n\u003cbr\u003eHallo\n\n"},"range":{"start":{"line":42,"character":17},"end":{"line":42,"character":17}}}}
2025/01/06 13:46:36 hoverService.go:124: Trace | Finished Hover with Content: 
### int i
Kommentar
<br>Hallo


2025/01/06 13:46:39 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:46:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":46,"character":20}}}
2025/01/06 13:46:39 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:46:39 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:46:39 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:46:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)\n\n---\n\nKommentar\n\u003cbr\u003eHallo\n\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\n\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n\nKommentar von One\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**\n\n\n"},"range":{"start":{"line":46,"character":20},"end":{"line":46,"character":20}}}}
2025/01/06 13:46:39 hoverService.go:124: Trace | Finished Hover with Content: 
### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)

---

Kommentar
<br>Hallo


* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**




* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**


Kommentar von One


* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**



2025/01/06 13:47:36 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:47:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"shutdown","params":null}
2025/01/06 13:47:36 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:47:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4"}
2025/01/06 13:47:36 server.go:69: INFO  | Server Closed
2025/01/06 13:47:36 main.go:28: Server Shutdown
2025/01/06 13:47:37 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 13:47:37 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:47:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:47:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:47:37 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:47:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:47:37 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:47:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:47:37 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:47:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:47:37 util.go:36: Trace | Read Content-Length: 1138 from Content-Length: 1138
2025/01/06 13:47:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:47:37 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:47:37 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:47:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:47:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:47:37 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:47:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:47:37 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:47:37 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:47:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:47:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:47:39 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:47:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":49,"character":17}}}
2025/01/06 13:47:39 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:47:39 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:47:39 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:47:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n### Identifier von [TwoE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L49)\n\n---\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\u003cbr\u003eKommentar\n\u003cbr\u003eHallo\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\u003cbr\u003e\n\n"},"range":{"start":{"line":49,"character":17},"end":{"line":49,"character":17}}}}
2025/01/06 13:47:39 hoverService.go:124: Trace | Finished Hover with Content: 
### Identifier von [TwoE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L49)

---

* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**
<br>Kommentar
<br>Hallo


* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**
<br>


2025/01/06 13:47:53 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:47:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":46,"character":15}}}
2025/01/06 13:47:53 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:47:53 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:47:53 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:47:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)\n\n---\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\u003cbr\u003eKommentar\n\u003cbr\u003eHallo\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\u003cbr\u003e\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**\n\u003cbr\u003eKommentar von One\n\n\n"},"range":{"start":{"line":46,"character":15},"end":{"line":46,"character":15}}}}
2025/01/06 13:47:53 hoverService.go:124: Trace | Finished Hover with Content: 
### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)

---

* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**
<br>Kommentar
<br>Hallo


* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**
<br>

* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**
<br>Kommentar von One



2025/01/06 13:48:01 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:48:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"shutdown","params":null}
2025/01/06 13:48:01 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:48:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4"}
2025/01/06 13:48:01 server.go:69: INFO  | Server Closed
2025/01/06 13:48:01 main.go:28: Server Shutdown
2025/01/06 13:48:02 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/06 13:48:02 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:48:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:48:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:48:02 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:48:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:48:02 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:48:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:48:02 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:48:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:48:02 util.go:36: Trace | Read Content-Length: 1138 from Content-Length: 1138
2025/01/06 13:48:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:48:02 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:48:02 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:48:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:48:02 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:48:02 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:48:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:48:02 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:48:02 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:48:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:48:02 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:48:03 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:48:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":46,"character":18}}}
2025/01/06 13:48:03 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:48:03 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:48:03 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:48:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)\n\n---\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\nKommentar\n\u003cbr\u003eHallo\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**\nKommentar von One\n\n\n"},"range":{"start":{"line":46,"character":18},"end":{"line":46,"character":18}}}}
2025/01/06 13:48:03 hoverService.go:124: Trace | Finished Hover with Content: 
### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)

---

* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**
Kommentar
<br>Hallo


* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**


* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**
Kommentar von One



2025/01/06 13:48:33 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:48:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":46,"character":14}}}
2025/01/06 13:48:33 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:48:33 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:48:33 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:48:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)\n\n---\n\n* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\nKommentar\n\u003cbr\u003eHallo\n\n\n* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n\n* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**\nKommentar von One\n\n\n"},"range":{"start":{"line":46,"character":14},"end":{"line":46,"character":14}}}}
2025/01/06 13:48:33 hoverService.go:124: Trace | Finished Hover with Content: 
### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)

---

* ##### int **[i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**
Kommentar
<br>Hallo


* ##### string **[me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**


* ##### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") **[o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**
Kommentar von One



2025/01/06 13:48:55 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:48:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"shutdown","params":null}
2025/01/06 13:48:55 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:48:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4"}
2025/01/06 13:48:55 server.go:69: INFO  | Server Closed
2025/01/06 13:48:55 main.go:28: Server Shutdown
2025/01/06 13:48:55 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 13:48:55 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:48:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:48:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:48:55 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:48:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:48:55 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:48:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:48:55 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:48:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:48:55 util.go:36: Trace | Read Content-Length: 1138 from Content-Length: 1138
2025/01/06 13:48:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:48:55 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:48:55 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:48:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:48:55 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:48:55 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:48:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:48:55 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:48:55 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:48:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:48:55 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:48:57 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:48:57 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":46,"character":15}}}
2025/01/06 13:48:57 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:48:57 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:48:57 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:48:57 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)\n\n---\n\n* **int [i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\nKommentar\n\u003cbr\u003eHallo\n\n\n* **string [me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n\n* **[One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") [o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**\nKommentar von One\n\n\n"},"range":{"start":{"line":46,"character":15},"end":{"line":46,"character":15}}}}
2025/01/06 13:48:57 hoverService.go:124: Trace | Finished Hover with Content: 
### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)

---

* **int [i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**
Kommentar
<br>Hallo


* **string [me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**


* **[One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") [o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**
Kommentar von One



2025/01/06 13:49:26 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:49:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"shutdown","params":null}
2025/01/06 13:49:26 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:49:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3"}
2025/01/06 13:49:26 server.go:69: INFO  | Server Closed
2025/01/06 13:49:26 main.go:28: Server Shutdown
2025/01/06 13:49:27 fileService.go:35: Trace | FileChangeListeners: [0xc0000c8048]
2025/01/06 13:49:27 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:49:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:49:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:49:27 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:49:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:49:27 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:49:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:49:27 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:49:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:49:27 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:49:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:49:27 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:49:27 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:49:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:49:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:49:27 util.go:36: Trace | Read Content-Length: 1138 from Content-Length: 1138
2025/01/06 13:49:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:49:27 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:49:27 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:49:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:49:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:49:29 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:49:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":46,"character":19}}}
2025/01/06 13:49:29 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:49:29 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:49:29 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:49:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)\n\n---\n\n* **int [i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\u003cbr\u003eKommentar\n\u003cbr\u003eHallo\n\n\n* **string [me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\u003cbr\u003e\n\n* **[One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") [o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**\n\u003cbr\u003eKommentar von One\n\n\n"},"range":{"start":{"line":46,"character":19},"end":{"line":46,"character":19}}}}
2025/01/06 13:49:29 hoverService.go:124: Trace | Finished Hover with Content: 
### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)

---

* **int [i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**
<br>Kommentar
<br>Hallo


* **string [me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**
<br>

* **[One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") [o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**
<br>Kommentar von One



2025/01/06 13:50:41 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:50:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"shutdown","params":null}
2025/01/06 13:50:41 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:50:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3"}
2025/01/06 13:50:41 server.go:69: INFO  | Server Closed
2025/01/06 13:50:41 main.go:28: Server Shutdown
2025/01/06 13:50:41 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 13:50:42 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:50:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:50:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:50:42 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:50:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:50:42 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:50:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:50:42 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:50:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:50:42 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:50:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:50:42 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:50:42 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:50:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:50:42 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:50:42 util.go:36: Trace | Read Content-Length: 1138 from Content-Length: 1138
2025/01/06 13:50:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:50:42 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:50:42 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:50:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:50:42 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:50:43 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:50:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":46,"character":17}}}
2025/01/06 13:50:43 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:50:43 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:50:43 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:50:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)\n\n---\n* **int [i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\u003cbr\u003eKommentar\n\u003cbr\u003eHallo\n\n* **string [me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n* **[One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") [o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**\n\u003cbr\u003eKommentar von One\n\n\n"},"range":{"start":{"line":46,"character":17},"end":{"line":46,"character":17}}}}
2025/01/06 13:50:43 hoverService.go:124: Trace | Finished Hover with Content: 
### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)

---
* **int [i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**
<br>Kommentar
<br>Hallo

* **string [me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**

* **[One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") [o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**
<br>Kommentar von One



2025/01/06 13:50:58 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:50:58 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"shutdown","params":null}
2025/01/06 13:50:58 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:50:58 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3"}
2025/01/06 13:50:58 server.go:69: INFO  | Server Closed
2025/01/06 13:50:58 main.go:28: Server Shutdown
2025/01/06 13:51:00 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/06 13:51:01 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:51:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:51:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:51:01 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:51:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:51:01 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:51:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:51:01 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:51:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:51:01 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:51:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:51:01 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:51:01 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:51:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:51:01 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:51:01 util.go:36: Trace | Read Content-Length: 1138 from Content-Length: 1138
2025/01/06 13:51:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:51:01 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:51:01 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:51:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:51:01 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:51:02 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:51:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":46,"character":18}}}
2025/01/06 13:51:02 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:51:02 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:51:02 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:51:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n#### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)\n\n---\n* **int [i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\u003cbr\u003eKommentar\n\u003cbr\u003eHallo\n\n* **string [me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n* **[One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") [o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**\n\u003cbr\u003eKommentar von One\n\n\n"},"range":{"start":{"line":46,"character":18},"end":{"line":46,"character":18}}}}
2025/01/06 13:51:02 hoverService.go:124: Trace | Finished Hover with Content: 
#### Identifier von [OneE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L40)

---
* **int [i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**
<br>Kommentar
<br>Hallo

* **string [me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**

* **[One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") [o](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L46)**
<br>Kommentar von One



2025/01/06 13:51:12 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:51:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":35,"character":16}}}
2025/01/06 13:51:12 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:51:12 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:51:12 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:51:12 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n### One\n##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\nDas ist das Struct One\n\n"},"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":16}}}}
2025/01/06 13:51:12 hoverService.go:124: Trace | Finished Hover with Content: 
### One
##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)
Das ist das Struct One


2025/01/06 13:51:19 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:51:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":49,"character":15}}}
2025/01/06 13:51:19 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:51:19 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:51:19 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:51:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### Identifier von [TwoE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L49)\n\n---\n* **int [i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**\n\u003cbr\u003eKommentar\n\u003cbr\u003eHallo\n\n* **string [me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**\n\n\n"},"range":{"start":{"line":49,"character":15},"end":{"line":49,"character":15}}}}
2025/01/06 13:51:19 hoverService.go:124: Trace | Finished Hover with Content: 
#### Identifier von [TwoE](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L49)

---
* **int [i](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L43)**
<br>Kommentar
<br>Hallo

* **string [me](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L44)**



2025/01/06 13:51:22 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:51:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":35,"character":15}}}
2025/01/06 13:51:22 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:51:22 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:51:22 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:51:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n### One\n##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\nDas ist das Struct One\n\n"},"range":{"start":{"line":35,"character":15},"end":{"line":35,"character":15}}}}
2025/01/06 13:51:22 hoverService.go:124: Trace | Finished Hover with Content: 
### One
##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)
Das ist das Struct One


2025/01/06 13:51:55 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:51:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":35,"character":17}}}
2025/01/06 13:51:55 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:51:55 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:51:55 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:51:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n### One\n##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\nDas ist das Struct One\n\n"},"range":{"start":{"line":35,"character":17},"end":{"line":35,"character":17}}}}
2025/01/06 13:51:55 hoverService.go:124: Trace | Finished Hover with Content: 
### One
##### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)
Das ist das Struct One


2025/01/06 13:52:06 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 13:52:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"shutdown","params":null}
2025/01/06 13:52:06 server.go:82: INFO  | Received Shutdown Request
2025/01/06 13:52:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7"}
2025/01/06 13:52:06 server.go:69: INFO  | Server Closed
2025/01/06 13:52:06 main.go:28: Server Shutdown
2025/01/06 13:52:07 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/06 13:52:07 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 13:52:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 13:52:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 13:52:07 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 13:52:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 13:52:07 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 13:52:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 13:52:07 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 13:52:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 13:52:07 util.go:36: Trace | Read Content-Length: 1138 from Content-Length: 1138
2025/01/06 13:52:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 13:52:07 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:52:07 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:52:07 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:07 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 13:52:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 13:52:07 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 13:52:07 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 13:52:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 13:52:07 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:09 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:52:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":35,"character":16}}}
2025/01/06 13:52:09 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:52:09 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:52:09 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:52:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n#### One\n###### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\nDas ist das Struct One\n\n"},"range":{"start":{"line":35,"character":16},"end":{"line":35,"character":16}}}}
2025/01/06 13:52:09 hoverService.go:124: Trace | Finished Hover with Content: 
#### One
###### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)
Das ist das Struct One


2025/01/06 13:52:15 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:52:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":35,"character":15}}}
2025/01/06 13:52:15 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:52:15 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:52:15 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:52:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### One\n###### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\nDas ist das Struct One\n\n"},"range":{"start":{"line":35,"character":15},"end":{"line":35,"character":15}}}}
2025/01/06 13:52:15 hoverService.go:124: Trace | Finished Hover with Content: 
#### One
###### Struct in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)
Das ist das Struct One


2025/01/06 13:52:20 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:52:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":39,"character":18}}}
2025/01/06 13:52:20 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:52:20 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:52:20 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:52:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### OneE\n###### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)\n\n"},"range":{"start":{"line":39,"character":18},"end":{"line":39,"character":18}}}}
2025/01/06 13:52:20 hoverService.go:124: Trace | Finished Hover with Content: 
#### OneE
###### Entity in Package [de.alex.brand.rekur](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L34)


2025/01/06 13:52:24 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:52:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":17}}}
2025/01/06 13:52:24 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:52:24 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:52:24 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:52:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n#### int i\nKommentar\n\u003cbr\u003eHallo\n\n"},"range":{"start":{"line":42,"character":17},"end":{"line":42,"character":17}}}}
2025/01/06 13:52:24 hoverService.go:124: Trace | Finished Hover with Content: 
#### int i
Kommentar
<br>Hallo


2025/01/06 13:52:29 util.go:36: Trace | Read Content-Length: 198 from Content-Length: 198
2025/01/06 13:52:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":45,"character":17}}}
2025/01/06 13:52:29 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:52:29 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:52:29 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:52:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n#### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 \"Das ist das Struct OneStruct One in Package de.alex.brand.rekur\") o\nKommentar von One\n\n"},"range":{"start":{"line":45,"character":17},"end":{"line":45,"character":17}}}}
2025/01/06 13:52:29 hoverService.go:124: Trace | Finished Hover with Content: 
#### [One](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L36 "Das ist das Struct OneStruct One in Package de.alex.brand.rekur") o
Kommentar von One


2025/01/06 13:52:38 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/06 13:52:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":4,"character":10}}}
2025/01/06 13:52:38 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:52:38 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:52:38 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:52:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"\n#### other\n###### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)\n\n"},"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}}}}
2025/01/06 13:52:38 hoverService.go:124: Trace | Finished Hover with Content: 
#### other
###### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)


2025/01/06 13:52:40 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":23},"end":{"line":3,"character":23}},"rangeLength":0,"text":"\n"}]}}
2025/01/06 13:52:40 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:40 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":2,"diagnostics":[]}}
2025/01/06 13:52:40 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:41 util.go:36: Trace | Read Content-Length: 289 from Content-Length: 289
2025/01/06 13:52:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":3,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":0}},"rangeLength":0,"text":"/"}]}}
2025/01/06 13:52:41 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:41 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":3,"diagnostics":[]}}
2025/01/06 13:52:41 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:41 util.go:36: Trace | Read Content-Length: 289 from Content-Length: 289
2025/01/06 13:52:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":4,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":1},"end":{"line":4,"character":1}},"rangeLength":0,"text":"/"}]}}
2025/01/06 13:52:41 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:41 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":4,"diagnostics":[]}}
2025/01/06 13:52:41 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:41 util.go:36: Trace | Read Content-Length: 289 from Content-Length: 289
2025/01/06 13:52:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":5,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":2},"end":{"line":4,"character":2}},"rangeLength":0,"text":" "}]}}
2025/01/06 13:52:41 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:41 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":5,"diagnostics":[]}}
2025/01/06 13:52:41 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:42 util.go:36: Trace | Read Content-Length: 289 from Content-Length: 289
2025/01/06 13:52:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":6,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":3},"end":{"line":4,"character":3}},"rangeLength":0,"text":"C"}]}}
2025/01/06 13:52:42 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:42 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":6,"diagnostics":[]}}
2025/01/06 13:52:42 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:42 util.go:36: Trace | Read Content-Length: 289 from Content-Length: 289
2025/01/06 13:52:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":7,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":4}},"rangeLength":0,"text":"o"}]}}
2025/01/06 13:52:42 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:42 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":7,"diagnostics":[]}}
2025/01/06 13:52:42 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:42 util.go:36: Trace | Read Content-Length: 289 from Content-Length: 289
2025/01/06 13:52:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":8,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":5},"end":{"line":4,"character":5}},"rangeLength":0,"text":"m"}]}}
2025/01/06 13:52:42 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:42 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":8,"diagnostics":[]}}
2025/01/06 13:52:42 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:42 util.go:36: Trace | Read Content-Length: 289 from Content-Length: 289
2025/01/06 13:52:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":9,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":6},"end":{"line":4,"character":6}},"rangeLength":0,"text":"m"}]}}
2025/01/06 13:52:42 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:42 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":9,"diagnostics":[]}}
2025/01/06 13:52:42 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:42 util.go:36: Trace | Read Content-Length: 290 from Content-Length: 290
2025/01/06 13:52:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":10,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":7},"end":{"line":4,"character":7}},"rangeLength":0,"text":"e"}]}}
2025/01/06 13:52:42 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:42 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":10,"diagnostics":[]}}
2025/01/06 13:52:42 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:42 util.go:36: Trace | Read Content-Length: 290 from Content-Length: 290
2025/01/06 13:52:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":11,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":8},"end":{"line":4,"character":8}},"rangeLength":0,"text":"n"}]}}
2025/01/06 13:52:42 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:42 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":11,"diagnostics":[]}}
2025/01/06 13:52:42 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:42 util.go:36: Trace | Read Content-Length: 290 from Content-Length: 290
2025/01/06 13:52:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":12,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":9}},"rangeLength":0,"text":"t"}]}}
2025/01/06 13:52:42 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:42 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":12,"diagnostics":[]}}
2025/01/06 13:52:42 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:42 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":13,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"rangeLength":0,"text":" "}]}}
2025/01/06 13:52:42 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:42 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":13,"diagnostics":[]}}
2025/01/06 13:52:42 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:43 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":14,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":11},"end":{"line":4,"character":11}},"rangeLength":0,"text":"o"}]}}
2025/01/06 13:52:43 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:43 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":14,"diagnostics":[]}}
2025/01/06 13:52:43 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:43 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":15,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":12},"end":{"line":4,"character":12}},"rangeLength":0,"text":"f"}]}}
2025/01/06 13:52:43 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:43 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":15,"diagnostics":[]}}
2025/01/06 13:52:43 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:44 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/06 13:52:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":16,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":12},"end":{"line":4,"character":13}},"rangeLength":1,"text":""}]}}
2025/01/06 13:52:44 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:44 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":16,"diagnostics":[]}}
2025/01/06 13:52:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:44 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":17,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":12},"end":{"line":4,"character":12}},"rangeLength":0,"text":"v"}]}}
2025/01/06 13:52:44 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:44 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":17,"diagnostics":[]}}
2025/01/06 13:52:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:44 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":18,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":13},"end":{"line":4,"character":13}},"rangeLength":0,"text":"e"}]}}
2025/01/06 13:52:44 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:44 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":18,"diagnostics":[]}}
2025/01/06 13:52:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:44 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":19,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":14},"end":{"line":4,"character":14}},"rangeLength":0,"text":"r"}]}}
2025/01/06 13:52:44 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:44 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":19,"diagnostics":[]}}
2025/01/06 13:52:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:44 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":20,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},"rangeLength":0,"text":" "}]}}
2025/01/06 13:52:44 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:44 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":20,"diagnostics":[]}}
2025/01/06 13:52:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:45 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":21,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":16},"end":{"line":4,"character":16}},"rangeLength":0,"text":"t"}]}}
2025/01/06 13:52:45 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:45 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":21,"diagnostics":[]}}
2025/01/06 13:52:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:45 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":22,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":17},"end":{"line":4,"character":17}},"rangeLength":0,"text":"o"}]}}
2025/01/06 13:52:45 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:45 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":22,"diagnostics":[]}}
2025/01/06 13:52:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:45 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/06 13:52:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":23,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":17},"end":{"line":4,"character":18}},"rangeLength":1,"text":""}]}}
2025/01/06 13:52:45 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:45 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":23,"diagnostics":[]}}
2025/01/06 13:52:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:45 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/06 13:52:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":24,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":16},"end":{"line":4,"character":17}},"rangeLength":1,"text":""}]}}
2025/01/06 13:52:45 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:45 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":24,"diagnostics":[]}}
2025/01/06 13:52:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:46 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":25,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":16},"end":{"line":4,"character":16}},"rangeLength":0,"text":"o"}]}}
2025/01/06 13:52:46 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:46 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":25,"diagnostics":[]}}
2025/01/06 13:52:46 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:46 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":26,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":17},"end":{"line":4,"character":17}},"rangeLength":0,"text":"t"}]}}
2025/01/06 13:52:46 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:46 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":26,"diagnostics":[]}}
2025/01/06 13:52:46 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:46 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":27,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":18},"end":{"line":4,"character":18}},"rangeLength":0,"text":"h"}]}}
2025/01/06 13:52:46 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:46 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":27,"diagnostics":[]}}
2025/01/06 13:52:46 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:46 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":28,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":19},"end":{"line":4,"character":19}},"rangeLength":0,"text":"e"}]}}
2025/01/06 13:52:46 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:46 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":28,"diagnostics":[]}}
2025/01/06 13:52:46 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:46 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/06 13:52:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":29,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":20},"end":{"line":4,"character":20}},"rangeLength":0,"text":"r"}]}}
2025/01/06 13:52:46 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:46 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":29,"diagnostics":[]}}
2025/01/06 13:52:46 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:52:49 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/06 13:52:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":5,"character":11}}}
2025/01/06 13:52:49 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:52:49 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:52:49 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:52:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"contents":{"kind":"markdown","value":"\n#### other\n###### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)\nComment over other\n\n"},"range":{"start":{"line":5,"character":11},"end":{"line":5,"character":11}}}}
2025/01/06 13:52:49 hoverService.go:124: Trace | Finished Hover with Content: 
#### other
###### Package in Package [de.alex.brand](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L4)
Comment over other


2025/01/06 13:52:54 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/06 13:52:54 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":30,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":0}},"rangeLength":0,"text":"    "}]}}
2025/01/06 13:52:54 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 13:52:54 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 13:52:54 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":30,"diagnostics":[]}}
2025/01/06 13:52:54 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 13:53:44 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/06 13:53:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":7,"character":17}}}
2025/01/06 13:53:44 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:53:44 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:53:44 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:53:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":{"contents":{"kind":"markdown","value":"\n#### Test\n###### Struct in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L6)\n\n"},"range":{"start":{"line":7,"character":17},"end":{"line":7,"character":17}}}}
2025/01/06 13:53:44 hoverService.go:124: Trace | Finished Hover with Content: 
#### Test
###### Struct in Package [de.alex.brand.other](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf#L6)


2025/01/06 13:53:49 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/06 13:53:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":1,"character":9}}}
2025/01/06 13:53:49 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:53:49 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:53:49 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:53:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10","result":{"contents":{"kind":"markdown","value":"NotFound"},"range":{"start":{"line":1,"character":9},"end":{"line":1,"character":9}}}}
2025/01/06 13:53:49 hoverService.go:124: Trace | Finished Hover with Content: NotFound
2025/01/06 13:53:52 util.go:36: Trace | Read Content-Length: 197 from Content-Length: 197
2025/01/06 13:53:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"},"position":{"line":1,"character":3}}}
2025/01/06 13:53:52 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 13:53:52 hoverService.go:94: Trace | Start Get File Content
2025/01/06 13:53:52 hoverService.go:100: %!S(string=Trace | )tart Find Node
2025/01/06 13:53:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"11","result":{"contents":{"kind":"markdown","value":"NotFound"},"range":{"start":{"line":1,"character":3},"end":{"line":1,"character":3}}}}
2025/01/06 13:53:52 hoverService.go:124: Trace | Finished Hover with Content: NotFound
2025/01/06 16:31:47 util.go:36: Trace | Read Content-Length: 61 from Content-Length: 61
2025/01/06 16:31:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"12","method":"shutdown","params":null}
2025/01/06 16:31:47 server.go:82: INFO  | Received Shutdown Request
2025/01/06 16:31:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"12"}
2025/01/06 16:31:47 server.go:69: INFO  | Server Closed
2025/01/06 16:31:47 main.go:28: Server Shutdown
2025/01/06 16:31:48 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 16:31:48 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 16:31:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 16:31:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 16:31:48 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 16:31:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 16:31:48 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 16:31:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 16:31:48 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 16:31:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 16:31:48 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 16:31:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 16:31:48 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 16:31:48 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 16:31:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 16:31:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 16:31:48 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 16:31:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 16:31:48 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 16:31:48 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 16:31:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 16:31:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 16:31:51 util.go:36: Trace | Read Content-Length: 202 from Content-Length: 202
2025/01/06 16:31:51 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":0,"character":8}}}
2025/01/06 16:31:51 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:31:51 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:31:51 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:31:51 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"DMF Modell mit der Version 1.0.0"},"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":8}}}}
2025/01/06 16:31:51 hoverService.go:134: Trace | Finished Hover with Content: DMF Modell mit der Version 1.0.0
2025/01/06 16:31:54 util.go:36: Trace | Read Content-Length: 203 from Content-Length: 203
2025/01/06 16:31:54 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":1,"character":19}}}
2025/01/06 16:31:54 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:31:54 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:31:54 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:31:54 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### Model dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n\n###### Version 1.0.0\n"},"range":{"start":{"line":1,"character":19},"end":{"line":1,"character":19}}}}
2025/01/06 16:31:54 hoverService.go:134: Trace | Finished Hover with Content: 
#### Model dmf 1.0.0
model "edit" version 1.0.0

package de.library.management {

    // Basispaket fÃ¼r Medienverwaltung
    // Das ist ein neuer Kommentar
    package media {

        // Basisstruktur fÃ¼r alle Medientypen
        struct MediaItem {
            arg string title;
            arg string isbn;
            arg date publishedDate;
            arg double price;
            arg int copyNumber;
            arg double rating;
            func boolean isAvailable(int copyId);
        }

        // Verschiedene Medientypen
        enum MediaType {
            BOOK(_);
            EBOOK(_);
            AUDIO_BOOK(_);
            DVD(_);
            MAGAZINE(_);
            NEWSPAPER(_);
        }

        // Kategorisierung der Medien
        enum Category {
            arg string name;
            FICTION(1, "Belletristik");
            NON_FICTION(2, "Sachbuch");
            CHILDREN(3, "Kinderbuch");
            SCIENCE(4, "Wissenschaft");
            HISTORY(5, "Geschichte");
        }

        // Detaillierte Buchinformationen
        entity Book extends MediaItem {
            arg string author;
            ref .Category category;
            ref .MediaType type;
            arg int pageCount;
            arg string publisher;
            arg string language;

            identifier(isbn, copyNumber);
        }

        // Verwaltung von Zeitschriften
        entity Magazine extends MediaItem {
            arg int issueNumber;
            arg string publisher;
            arg boolean isSubscription;
            arg date validUntil;

            identifier(isbn, issueNumber);
        }
    }

    // Benutzerverwaltung
    package users {

        // Adressinformationen
        struct Address {
            arg string street;
            arg string houseNumber;
            arg string postalCode;
            arg string city;
            arg string country;
        }

        // Verschiedene Mitgliedsarten
        enum MembershipType {
            arg int preis;
            arg date startdatum;
            STANDARD(1, 10, D2024-01-01);
            PLUS(4, 15, D2024-01-01);
            PREMIUM(2, 20, D2024-01-01);
            STUDENT(3, 15, D2024-01-01);
        }

        // Benutzerstatus
        enum UserStatus {
            ACTIVE(_);
            SUSPENDED(_);
            EXPIRED(_);
            UNVERIFED(_);
        }

        // BenutzerentitÃ¤t
        entity User {
            arg string firstName;
            arg string lastName;
            arg date dateOfBirth;
            arg string email;
            ref .Address address;
            ref .MembershipType membershipType;
            ref .UserStatus status;
            arg date memberSince;
            arg date membershipExpiry;

            identifier(email, firstName);
        }
    }
}

###### Version 1.0.0

2025/01/06 16:32:11 util.go:36: Trace | Read Content-Length: 203 from Content-Length: 203
2025/01/06 16:32:11 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":1,"character":11}}}
2025/01/06 16:32:11 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:32:11 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:32:11 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:32:11 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### Model dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n\n###### Version 1.0.0\n"},"range":{"start":{"line":1,"character":11},"end":{"line":1,"character":11}}}}
2025/01/06 16:32:11 hoverService.go:134: Trace | Finished Hover with Content: 
#### Model dmf 1.0.0
model "edit" version 1.0.0

package de.library.management {

    // Basispaket fÃ¼r Medienverwaltung
    // Das ist ein neuer Kommentar
    package media {

        // Basisstruktur fÃ¼r alle Medientypen
        struct MediaItem {
            arg string title;
            arg string isbn;
            arg date publishedDate;
            arg double price;
            arg int copyNumber;
            arg double rating;
            func boolean isAvailable(int copyId);
        }

        // Verschiedene Medientypen
        enum MediaType {
            BOOK(_);
            EBOOK(_);
            AUDIO_BOOK(_);
            DVD(_);
            MAGAZINE(_);
            NEWSPAPER(_);
        }

        // Kategorisierung der Medien
        enum Category {
            arg string name;
            FICTION(1, "Belletristik");
            NON_FICTION(2, "Sachbuch");
            CHILDREN(3, "Kinderbuch");
            SCIENCE(4, "Wissenschaft");
            HISTORY(5, "Geschichte");
        }

        // Detaillierte Buchinformationen
        entity Book extends MediaItem {
            arg string author;
            ref .Category category;
            ref .MediaType type;
            arg int pageCount;
            arg string publisher;
            arg string language;

            identifier(isbn, copyNumber);
        }

        // Verwaltung von Zeitschriften
        entity Magazine extends MediaItem {
            arg int issueNumber;
            arg string publisher;
            arg boolean isSubscription;
            arg date validUntil;

            identifier(isbn, issueNumber);
        }
    }

    // Benutzerverwaltung
    package users {

        // Adressinformationen
        struct Address {
            arg string street;
            arg string houseNumber;
            arg string postalCode;
            arg string city;
            arg string country;
        }

        // Verschiedene Mitgliedsarten
        enum MembershipType {
            arg int preis;
            arg date startdatum;
            STANDARD(1, 10, D2024-01-01);
            PLUS(4, 15, D2024-01-01);
            PREMIUM(2, 20, D2024-01-01);
            STUDENT(3, 15, D2024-01-01);
        }

        // Benutzerstatus
        enum UserStatus {
            ACTIVE(_);
            SUSPENDED(_);
            EXPIRED(_);
            UNVERIFED(_);
        }

        // BenutzerentitÃ¤t
        entity User {
            arg string firstName;
            arg string lastName;
            arg date dateOfBirth;
            arg string email;
            ref .Address address;
            ref .MembershipType membershipType;
            ref .UserStatus status;
            arg date memberSince;
            arg date membershipExpiry;

            identifier(email, firstName);
        }
    }
}

###### Version 1.0.0

2025/01/06 16:32:35 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 16:32:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"shutdown","params":null}
2025/01/06 16:32:35 server.go:82: INFO  | Received Shutdown Request
2025/01/06 16:32:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5"}
2025/01/06 16:32:35 server.go:69: INFO  | Server Closed
2025/01/06 16:32:35 main.go:28: Server Shutdown
2025/01/06 16:32:36 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 16:32:36 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 16:32:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 16:32:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 16:32:36 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 16:32:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 16:32:36 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 16:32:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 16:32:36 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 16:32:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 16:32:36 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 16:32:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 16:32:36 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 16:32:36 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 16:32:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 16:32:36 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 16:32:36 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 16:32:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 16:32:36 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 16:32:36 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 16:32:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 16:32:36 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 16:32:37 util.go:36: Trace | Read Content-Length: 202 from Content-Length: 202
2025/01/06 16:32:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":1,"character":8}}}
2025/01/06 16:32:37 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:32:37 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:32:37 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:32:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n#### Model edit\n###### Version 1.0.0\n"},"range":{"start":{"line":1,"character":8},"end":{"line":1,"character":8}}}}
2025/01/06 16:32:37 hoverService.go:134: Trace | Finished Hover with Content: 
#### Model edit
###### Version 1.0.0

2025/01/06 16:32:43 util.go:36: Trace | Read Content-Length: 203 from Content-Length: 203
2025/01/06 16:32:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":3,"character":18}}}
2025/01/06 16:32:43 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:32:43 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:32:43 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:32:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### management\n###### Package in Package [de.library]()\n\n"},"range":{"start":{"line":3,"character":18},"end":{"line":3,"character":18}}}}
2025/01/06 16:32:43 hoverService.go:134: Trace | Finished Hover with Content: 
#### management
###### Package in Package [de.library]()


2025/01/06 16:32:47 util.go:36: Trace | Read Content-Length: 203 from Content-Length: 203
2025/01/06 16:32:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":6,"character":15}}}
2025/01/06 16:32:47 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:32:47 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:32:47 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:32:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"Basispaket fÃ¼r Medienverwaltung\n\u003cbr\u003eDas ist ein neuer Kommentar\n"},"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}}}}
2025/01/06 16:32:47 hoverService.go:134: Trace | Finished Hover with Content: Basispaket fÃ¼r Medienverwaltung
<br>Das ist ein neuer Kommentar

2025/01/06 16:32:49 util.go:36: Trace | Read Content-Length: 202 from Content-Length: 202
2025/01/06 16:32:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":7,"character":8}}}
2025/01/06 16:32:49 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:32:49 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:32:49 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:32:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n#### media\n###### Package in Package [de.library.management](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L4)\nBasispaket fÃ¼r Medienverwaltung\n\u003cbr\u003eDas ist ein neuer Kommentar\n\n"},"range":{"start":{"line":7,"character":8},"end":{"line":7,"character":8}}}}
2025/01/06 16:32:49 hoverService.go:134: Trace | Finished Hover with Content: 
#### media
###### Package in Package [de.library.management](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L4)
Basispaket fÃ¼r Medienverwaltung
<br>Das ist ein neuer Kommentar


2025/01/06 16:32:54 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 16:32:54 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":11,"character":29}}}
2025/01/06 16:32:54 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:32:54 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:32:54 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:32:54 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n#### MediaItem\n###### Struct in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L8)\nBasisstruktur fÃ¼r alle Medientypen\n\n"},"range":{"start":{"line":11,"character":29},"end":{"line":11,"character":29}}}}
2025/01/06 16:32:54 hoverService.go:134: Trace | Finished Hover with Content: 
#### MediaItem
###### Struct in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L8)
Basisstruktur fÃ¼r alle Medientypen


2025/01/06 16:32:55 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 16:32:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":34,"character":18}}}
2025/01/06 16:32:55 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:32:55 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:32:55 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:32:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"\n#### Category\n###### Enum in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L8)\nKategorisierung der Medien\n\n"},"range":{"start":{"line":34,"character":18},"end":{"line":34,"character":18}}}}
2025/01/06 16:32:55 hoverService.go:134: Trace | Finished Hover with Content: 
#### Category
###### Enum in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L8)
Kategorisierung der Medien


2025/01/06 16:32:59 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 16:32:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":32,"character":19}}}
2025/01/06 16:32:59 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:32:59 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:32:59 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:32:59 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"contents":{"kind":"markdown","value":"\n#### string name\n\n"},"range":{"start":{"line":32,"character":19},"end":{"line":32,"character":19}}}}
2025/01/06 16:32:59 hoverService.go:134: Trace | Finished Hover with Content: 
#### string name


2025/01/06 16:44:07 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 16:44:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"shutdown","params":null}
2025/01/06 16:44:07 server.go:82: INFO  | Received Shutdown Request
2025/01/06 16:44:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9"}
2025/01/06 16:44:07 server.go:69: INFO  | Server Closed
2025/01/06 16:44:07 main.go:28: Server Shutdown
2025/01/06 16:44:08 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 16:44:08 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 16:44:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 16:44:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 16:44:08 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 16:44:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 16:44:08 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 16:44:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 16:44:08 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 16:44:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 16:44:08 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 16:44:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 16:44:08 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 16:44:08 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 16:44:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 16:44:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 16:44:08 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 16:44:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 16:44:08 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 16:44:08 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 16:44:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 16:44:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 16:44:13 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 16:44:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":33,"character":14}}}
2025/01/06 16:44:13 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:44:13 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:44:13 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:44:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n#### Category\n###### Enum in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L8)\nKategorisierung der Medien\n\n"},"range":{"start":{"line":33,"character":14},"end":{"line":33,"character":14}}}}
2025/01/06 16:44:13 hoverService.go:134: Trace | Finished Hover with Content: 
#### Category
###### Enum in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L8)
Kategorisierung der Medien


2025/01/06 16:44:16 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 16:44:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":35,"character":18}}}
2025/01/06 16:44:16 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:44:16 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:44:16 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:44:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### Category\n###### Enum in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L8)\nKategorisierung der Medien\n\n"},"range":{"start":{"line":35,"character":18},"end":{"line":35,"character":18}}}}
2025/01/06 16:44:16 hoverService.go:134: Trace | Finished Hover with Content: 
#### Category
###### Enum in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L8)
Kategorisierung der Medien


2025/01/06 16:44:22 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 16:44:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":54,"character":25}}}
2025/01/06 16:44:22 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:44:22 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:44:22 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:44:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"didnt find PackageElement:\n\nde.library.management.media =\u003e package_block\nde.library.management.media.MediaItem =\u003e struct_block\nde.library.management.users.Address =\u003e struct_block\nde.library.management.users.UserStatus =\u003e enum_block\nde.library.management.users.User =\u003e entity_block\nde.library.management =\u003e package_block\nde.library.management.media.MediaItem =\u003e struct_block\nde.library.management.media.MediaType =\u003e enum_block\nde.library.management.media.Category =\u003e enum_block\nde.library.management.media.MediaItem =\u003e struct_block\nde.library.management.users =\u003e package_block\nde.library.management.users.MembershipType =\u003e enum_block\n"},"range":{"start":{"line":54,"character":25},"end":{"line":54,"character":25}}}}
2025/01/06 16:44:22 hoverService.go:134: Trace | Finished Hover with Content: didnt find PackageElement:

de.library.management.media => package_block
de.library.management.media.MediaItem => struct_block
de.library.management.users.Address => struct_block
de.library.management.users.UserStatus => enum_block
de.library.management.users.User => entity_block
de.library.management => package_block
de.library.management.media.MediaItem => struct_block
de.library.management.media.MediaType => enum_block
de.library.management.media.Category => enum_block
de.library.management.media.MediaItem => struct_block
de.library.management.users => package_block
de.library.management.users.MembershipType => enum_block

2025/01/06 16:44:26 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 16:44:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":55,"character":26}}}
2025/01/06 16:44:26 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:44:26 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:44:26 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:44:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"didnt find PackageElement:\n\nde.library.management.media =\u003e package_block\nde.library.management.media.MediaItem =\u003e struct_block\nde.library.management.users.Address =\u003e struct_block\nde.library.management.users.UserStatus =\u003e enum_block\nde.library.management.users.User =\u003e entity_block\nde.library.management =\u003e package_block\nde.library.management.media.MediaItem =\u003e struct_block\nde.library.management.media.MediaType =\u003e enum_block\nde.library.management.media.Category =\u003e enum_block\nde.library.management.media.MediaItem =\u003e struct_block\nde.library.management.users =\u003e package_block\nde.library.management.users.MembershipType =\u003e enum_block\n"},"range":{"start":{"line":55,"character":26},"end":{"line":55,"character":26}}}}
2025/01/06 16:44:26 hoverService.go:134: Trace | Finished Hover with Content: didnt find PackageElement:

de.library.management.media => package_block
de.library.management.media.MediaItem => struct_block
de.library.management.users.Address => struct_block
de.library.management.users.UserStatus => enum_block
de.library.management.users.User => entity_block
de.library.management => package_block
de.library.management.media.MediaItem => struct_block
de.library.management.media.MediaType => enum_block
de.library.management.media.Category => enum_block
de.library.management.media.MediaItem => struct_block
de.library.management.users => package_block
de.library.management.users.MembershipType => enum_block

2025/01/06 16:44:28 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 16:44:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":59,"character":22}}}
2025/01/06 16:44:28 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:44:28 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:44:28 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:44:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"Ein Identifier einer Entity welcher die IdentitÃ¤t bestimmt."},"range":{"start":{"line":59,"character":22},"end":{"line":59,"character":22}}}}
2025/01/06 16:44:28 hoverService.go:134: Trace | Finished Hover with Content: Ein Identifier einer Entity welcher die IdentitÃ¤t bestimmt.
2025/01/06 16:45:02 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 16:45:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":85,"character":17}}}
2025/01/06 16:45:02 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:45:02 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:45:02 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:45:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"Benutzerstatus\n"},"range":{"start":{"line":85,"character":17},"end":{"line":85,"character":17}}}}
2025/01/06 16:45:02 hoverService.go:134: Trace | Finished Hover with Content: Benutzerstatus

2025/01/06 16:45:04 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 16:45:04 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":86,"character":15}}}
2025/01/06 16:45:04 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:45:04 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:45:04 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:45:04 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"contents":{"kind":"markdown","value":"\n#### UserStatus\n###### Enum in Package [de.library.management.users](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L65)\nBenutzerstatus\n\n"},"range":{"start":{"line":86,"character":15},"end":{"line":86,"character":15}}}}
2025/01/06 16:45:04 hoverService.go:134: Trace | Finished Hover with Content: 
#### UserStatus
###### Enum in Package [de.library.management.users](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L65)
Benutzerstatus


2025/01/06 16:45:09 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 16:45:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":94,"character":18}}}
2025/01/06 16:45:09 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:45:09 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:45:09 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:45:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":{"contents":{"kind":"markdown","value":"\n#### User\n###### Entity in Package [de.library.management.users](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L65)\nBenutzerentitÃ¤t\n\n"},"range":{"start":{"line":94,"character":18},"end":{"line":94,"character":18}}}}
2025/01/06 16:45:09 hoverService.go:134: Trace | Finished Hover with Content: 
#### User
###### Entity in Package [de.library.management.users](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L65)
BenutzerentitÃ¤t


2025/01/06 16:45:12 util.go:36: Trace | Read Content-Length: 206 from Content-Length: 206
2025/01/06 16:45:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":105,"character":14}}}
2025/01/06 16:45:12 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:45:12 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:45:12 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:45:12 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10","result":{"contents":{"kind":"markdown","value":"\n#### Identifier von [User](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L95)\n\n---\n* **string [email](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L99)**\n\n* **string [firstName](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L96)**\n\n\n"},"range":{"start":{"line":105,"character":14},"end":{"line":105,"character":14}}}}
2025/01/06 16:45:12 hoverService.go:134: Trace | Finished Hover with Content: 
#### Identifier von [User](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L95)

---
* **string [email](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L99)**

* **string [firstName](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L96)**



2025/01/06 16:45:16 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/06 16:45:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":98,"character":23}}}
2025/01/06 16:45:16 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:45:16 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:45:16 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:45:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"11","result":{"contents":{"kind":"markdown","value":"\n#### string email\n\n\n[```identifier(email, firstName);```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L106)\u003cbr\u003e\n\n"},"range":{"start":{"line":98,"character":23},"end":{"line":98,"character":23}}}}
2025/01/06 16:45:16 hoverService.go:134: Trace | Finished Hover with Content: 
#### string email


[```identifier(email, firstName);```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L106)<br>


2025/01/06 16:45:20 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/06 16:45:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"12","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":98,"character":19}}}
2025/01/06 16:45:20 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:45:20 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:45:20 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:45:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"12","result":{"contents":{"kind":"markdown","value":"\n#### string email\n\n\n[```identifier(email, firstName);```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L106)\u003cbr\u003e\n\n"},"range":{"start":{"line":98,"character":19},"end":{"line":98,"character":19}}}}
2025/01/06 16:45:20 hoverService.go:134: Trace | Finished Hover with Content: 
#### string email


[```identifier(email, firstName);```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L106)<br>


2025/01/06 16:45:27 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/06 16:45:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"13","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":97,"character":18}}}
2025/01/06 16:45:27 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:45:27 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:45:27 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:45:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"13","result":{"contents":{"kind":"markdown","value":"\n#### date dateOfBirth\n\n\n"},"range":{"start":{"line":97,"character":18},"end":{"line":97,"character":18}}}}
2025/01/06 16:45:27 hoverService.go:134: Trace | Finished Hover with Content: 
#### date dateOfBirth



2025/01/06 16:45:38 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/06 16:45:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"14","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":95,"character":20}}}
2025/01/06 16:45:38 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:45:38 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:45:38 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:45:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"14","result":{"contents":{"kind":"markdown","value":"\n#### string firstName\n\n\n[```identifier(email, firstName);```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L106)\u003cbr\u003e\n\n"},"range":{"start":{"line":95,"character":20},"end":{"line":95,"character":20}}}}
2025/01/06 16:45:38 hoverService.go:134: Trace | Finished Hover with Content: 
#### string firstName


[```identifier(email, firstName);```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L106)<br>


2025/01/06 16:45:44 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/06 16:45:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"15","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":78,"character":18}}}
2025/01/06 16:45:44 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:45:44 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:45:44 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:45:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"15","result":{"contents":{"kind":"markdown","value":"\n#### date startdatum\n\n\n[```STANDARD(1, 10, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L80)\u003cbr\u003e[```PLUS(4, 15, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L81)\u003cbr\u003e[```PREMIUM(2, 20, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L82)\u003cbr\u003e[```STUDENT(3, 15, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L83)\u003cbr\u003e\n\n"},"range":{"start":{"line":78,"character":18},"end":{"line":78,"character":18}}}}
2025/01/06 16:45:44 hoverService.go:134: Trace | Finished Hover with Content: 
#### date startdatum


[```STANDARD(1, 10, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L80)<br>[```PLUS(4, 15, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L81)<br>[```PREMIUM(2, 20, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L82)<br>[```STUDENT(3, 15, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L83)<br>


2025/01/06 16:45:49 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/06 16:45:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"16","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":78,"character":21}}}
2025/01/06 16:45:49 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:45:49 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:45:49 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:45:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"16","result":{"contents":{"kind":"markdown","value":"\n#### date startdatum\n\n\n[```STANDARD(1, 10, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L80)\u003cbr\u003e[```PLUS(4, 15, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L81)\u003cbr\u003e[```PREMIUM(2, 20, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L82)\u003cbr\u003e[```STUDENT(3, 15, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L83)\u003cbr\u003e\n\n"},"range":{"start":{"line":78,"character":21},"end":{"line":78,"character":21}}}}
2025/01/06 16:45:49 hoverService.go:134: Trace | Finished Hover with Content: 
#### date startdatum


[```STANDARD(1, 10, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L80)<br>[```PLUS(4, 15, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L81)<br>[```PREMIUM(2, 20, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L82)<br>[```STUDENT(3, 15, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L83)<br>


2025/01/06 16:45:53 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/06 16:45:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"17","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":78,"character":17}}}
2025/01/06 16:45:53 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:45:53 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:45:53 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:45:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"17","result":{"contents":{"kind":"markdown","value":"\n#### date startdatum\n\n\n[```STANDARD(1, 10, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L80)\u003cbr\u003e[```PLUS(4, 15, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L81)\u003cbr\u003e[```PREMIUM(2, 20, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L82)\u003cbr\u003e[```STUDENT(3, 15, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L83)\u003cbr\u003e\n\n"},"range":{"start":{"line":78,"character":17},"end":{"line":78,"character":17}}}}
2025/01/06 16:45:53 hoverService.go:134: Trace | Finished Hover with Content: 
#### date startdatum


[```STANDARD(1, 10, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L80)<br>[```PLUS(4, 15, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L81)<br>[```PREMIUM(2, 20, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L82)<br>[```STUDENT(3, 15, D2024-01-01)```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L83)<br>


2025/01/06 16:46:10 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/06 16:46:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"18","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":68,"character":21}}}
2025/01/06 16:46:10 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:46:10 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:46:10 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:46:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"18","result":{"contents":{"kind":"markdown","value":"\n#### string street\n\n\n"},"range":{"start":{"line":68,"character":21},"end":{"line":68,"character":21}}}}
2025/01/06 16:46:10 hoverService.go:134: Trace | Finished Hover with Content: 
#### string street



2025/01/06 16:46:12 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/06 16:46:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"19","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":67,"character":17}}}
2025/01/06 16:46:12 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:46:12 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:46:12 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:46:12 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"19","result":{"contents":{"kind":"markdown","value":"\n#### Address\n###### Struct in Package [de.library.management.users](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L65)\nAdressinformationen\n\n"},"range":{"start":{"line":67,"character":17},"end":{"line":67,"character":17}}}}
2025/01/06 16:46:12 hoverService.go:134: Trace | Finished Hover with Content: 
#### Address
###### Struct in Package [de.library.management.users](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L65)
Adressinformationen


2025/01/06 16:46:18 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/06 16:46:18 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"20","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":81,"character":16}}}
2025/01/06 16:46:18 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:46:18 hoverService.go:104: Trace | Start Get File Content
2025/01/06 16:46:18 hoverService.go:110: %!S(string=Trace | )tart Find Node
2025/01/06 16:46:18 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"20","result":{"contents":{"kind":"markdown","value":"\n#### MembershipType\n###### Enum in Package [de.library.management.users](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L65)\nVerschiedene Mitgliedsarten\n\n"},"range":{"start":{"line":81,"character":16},"end":{"line":81,"character":16}}}}
2025/01/06 16:46:18 hoverService.go:134: Trace | Finished Hover with Content: 
#### MembershipType
###### Enum in Package [de.library.management.users](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L65)
Verschiedene Mitgliedsarten


2025/01/06 16:59:43 util.go:36: Trace | Read Content-Length: 61 from Content-Length: 61
2025/01/06 16:59:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"21","method":"shutdown","params":null}
2025/01/06 16:59:43 server.go:82: INFO  | Received Shutdown Request
2025/01/06 16:59:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"21"}
2025/01/06 16:59:43 server.go:69: INFO  | Server Closed
2025/01/06 16:59:43 main.go:28: Server Shutdown
2025/01/06 16:59:44 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 16:59:44 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 16:59:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 16:59:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 16:59:44 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 16:59:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 16:59:44 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 16:59:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 16:59:44 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 16:59:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 16:59:44 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 16:59:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 16:59:44 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 16:59:44 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 16:59:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 16:59:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 16:59:44 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 16:59:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 16:59:44 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 16:59:44 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 16:59:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 16:59:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 16:59:46 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 16:59:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":79,"character":14}}}
2025/01/06 16:59:46 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 16:59:46 hoverService.go:106: Trace | Start Get File Content
2025/01/06 16:59:46 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:00:00 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 17:00:00 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 17:00:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 17:00:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 17:00:00 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 17:00:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 17:00:00 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 17:00:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 17:00:00 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 17:00:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 17:00:00 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 17:00:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 17:00:00 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:00:00 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:00:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:00:00 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:00:00 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 17:00:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 17:00:00 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:00:00 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 17:00:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:00:00 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:00:01 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:00:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":79,"character":14}}}
2025/01/06 17:00:01 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:00:01 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:00:01 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:00:15 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/06 17:00:15 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 17:00:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 17:00:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 17:00:15 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 17:00:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 17:00:15 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 17:00:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 17:00:15 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 17:00:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 17:00:15 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 17:00:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 17:00:15 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:00:15 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 17:00:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:00:15 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:00:15 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 17:00:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 17:00:15 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:00:15 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:00:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:00:15 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:00:28 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 17:00:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"shutdown","params":null}
2025/01/06 17:00:28 server.go:82: INFO  | Received Shutdown Request
2025/01/06 17:00:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2"}
2025/01/06 17:00:28 server.go:69: INFO  | Server Closed
2025/01/06 17:00:28 main.go:28: Server Shutdown
2025/01/06 17:00:33 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/06 17:00:34 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 17:00:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 17:00:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 17:00:34 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 17:00:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 17:00:34 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 17:00:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 17:00:34 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 17:00:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 17:00:34 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 17:00:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 17:00:34 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:00:34 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 17:00:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:00:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:00:34 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 17:00:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 17:00:34 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:00:34 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:00:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:00:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:01:40 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 17:01:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"shutdown","params":null}
2025/01/06 17:01:40 server.go:82: INFO  | Received Shutdown Request
2025/01/06 17:01:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2"}
2025/01/06 17:01:40 server.go:69: INFO  | Server Closed
2025/01/06 17:01:40 main.go:28: Server Shutdown
2025/01/06 17:01:52 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 17:01:53 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 17:01:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":13716,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 17:01:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 17:01:53 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 17:01:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 17:01:53 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 17:01:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 17:01:53 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 17:01:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 17:01:53 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 17:01:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 17:01:53 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:01:53 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 17:01:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:01:53 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:01:53 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 17:01:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 17:01:53 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:01:53 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:01:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:01:53 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:02:09 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:02:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":79,"character":14}}}
2025/01/06 17:02:09 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:02:09 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:02:09 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:02:13 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 17:02:14 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 17:02:14 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":45749,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 17:02:14 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 17:02:14 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 17:02:14 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 17:02:14 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 17:02:14 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 17:02:14 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 17:02:14 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 17:02:14 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 17:02:14 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 17:02:14 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:02:14 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:02:14 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:02:14 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:02:14 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 17:02:14 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 17:02:14 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:02:14 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 17:02:14 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:02:14 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:02:20 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:02:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":93,"character":19}}}
2025/01/06 17:02:20 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:02:20 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:02:20 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:02:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"BenutzerentitÃ¤t\n"},"range":{"start":{"line":93,"character":19},"end":{"line":93,"character":19}}}}
2025/01/06 17:02:20 hoverService.go:136: Trace | Finished Hover with Content: BenutzerentitÃ¤t

2025/01/06 17:02:24 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:02:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":90,"character":15}}}
2025/01/06 17:02:24 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:02:24 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:02:24 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:02:25 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 17:02:25 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 17:02:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":45749,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 17:02:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 17:02:25 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 17:02:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 17:02:25 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 17:02:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 17:02:25 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 17:02:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 17:02:25 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 17:02:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 17:02:25 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:02:25 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 17:02:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:02:25 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:02:25 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 17:02:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 17:02:25 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:02:25 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:02:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:02:25 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:03:16 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 17:03:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"shutdown","params":null}
2025/01/06 17:03:16 server.go:82: INFO  | Received Shutdown Request
2025/01/06 17:03:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2"}
2025/01/06 17:03:16 server.go:69: INFO  | Server Closed
2025/01/06 17:03:16 main.go:28: Server Shutdown
2025/01/06 17:03:17 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 17:03:17 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 17:03:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":45749,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 17:03:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 17:03:17 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 17:03:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 17:03:17 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 17:03:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 17:03:17 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 17:03:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 17:03:17 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 17:03:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 17:03:17 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:03:17 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:03:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:03:17 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:03:17 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 17:03:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 17:03:17 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:03:17 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 17:03:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:03:17 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:03:36 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:03:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":90,"character":15}}}
2025/01/06 17:03:36 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:03:36 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:03:36 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:03:36 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/06 17:03:36 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/06 17:03:36 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 17:03:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":45749,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 17:03:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 17:03:36 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 17:03:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 17:03:36 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 17:03:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 17:03:36 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 17:03:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 17:03:36 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 17:03:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 17:03:36 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:03:36 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 17:03:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:03:36 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:03:36 util.go:36: Trace | Read Content-Length: 3115 from Content-Length: 3115
2025/01/06 17:03:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity Us {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 17:03:36 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:03:36 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:03:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:03:36 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:03:36 util.go:36: Trace | Read Content-Length: 298 from Content-Length: 298
2025/01/06 17:03:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"contentChanges":[{"range":{"start":{"line":94,"character":18},"end":{"line":94,"character":19}},"rangeLength":1,"text":""}]}}
2025/01/06 17:03:36 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 17:03:36 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:03:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":2,"diagnostics":[]}}
2025/01/06 17:03:36 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:03:37 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:03:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":90,"character":15}}}
2025/01/06 17:03:37 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:03:37 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:03:37 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:03:37 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/06 17:03:39 fileService.go:35: Trace | FileChangeListeners: [0xc0000c4048]
2025/01/06 17:03:39 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 17:03:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":45749,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 17:03:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 17:03:39 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 17:03:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 17:03:39 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 17:03:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 17:03:39 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 17:03:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 17:03:39 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 17:03:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 17:03:39 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:03:39 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:03:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:03:39 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:03:39 util.go:36: Trace | Read Content-Length: 299 from Content-Length: 299
2025/01/06 17:03:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"contentChanges":[{"range":{"start":{"line":94,"character":17},"end":{"line":94,"character":17}},"rangeLength":0,"text":"e"}]}}
2025/01/06 17:03:39 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/06 17:03:39 fileService.go:104: Trace | Edit File for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:03:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":2,"diagnostics":[]}}
2025/01/06 17:03:39 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:03:39 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 17:03:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 17:03:39 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:03:39 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 17:03:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:03:39 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:03:40 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:03:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":90,"character":15}}}
2025/01/06 17:03:40 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:03:40 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:03:40 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:03:40 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/06 17:04:13 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 17:04:13 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 17:04:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":45749,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 17:04:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 17:04:13 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 17:04:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 17:04:13 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 17:04:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 17:04:13 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 17:04:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 17:04:13 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 17:04:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 17:04:13 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:04:13 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 17:04:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:04:13 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:04:13 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 17:04:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 17:04:13 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:04:13 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:04:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:04:13 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:06:11 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:06:11 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":90,"character":15}}}
2025/01/06 17:06:11 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:06:11 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:06:11 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:06:11 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/06 17:06:21 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 17:06:21 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 17:06:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":45749,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 17:06:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 17:06:21 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 17:06:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 17:06:21 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 17:06:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 17:06:21 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 17:06:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 17:06:21 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 17:06:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 17:06:21 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:06:21 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 17:06:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:06:21 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:06:21 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 17:06:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 17:06:21 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:06:21 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:06:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:06:21 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:06:55 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:06:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":90,"character":19}}}
2025/01/06 17:06:55 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:06:55 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:06:55 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:06:55 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/06 17:06:55 hoverService.go:369: %!s(int=0)Index 0 Argumente: %!v(MISSING)
2025/01/06 17:06:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n#### UNVERIFED\n###### In [UserStatus](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L87)\n\n\n\n**[Index]()**: 0\u003cbr\u003e\n"},"range":{"start":{"line":90,"character":19},"end":{"line":90,"character":19}}}}
2025/01/06 17:06:55 hoverService.go:136: Trace | Finished Hover with Content: 
#### UNVERIFED
###### In [UserStatus](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L87)



**[Index]()**: 0<br>

2025/01/06 17:07:44 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:07:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":89,"character":17}}}
2025/01/06 17:07:44 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:07:44 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:07:44 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:07:44 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/06 17:07:44 hoverService.go:369: %!s(int=0)Index 0 Argumente: %!v(MISSING)
2025/01/06 17:07:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### EXPIRED\n###### In [UserStatus](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L87)\n\n\n\n**[Index]()**: 0\u003cbr\u003e\n"},"range":{"start":{"line":89,"character":17},"end":{"line":89,"character":17}}}}
2025/01/06 17:07:44 hoverService.go:136: Trace | Finished Hover with Content: 
#### EXPIRED
###### In [UserStatus](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L87)



**[Index]()**: 0<br>

2025/01/06 17:07:51 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:07:51 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":85,"character":17}}}
2025/01/06 17:07:51 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:07:51 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:07:51 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:07:51 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"Benutzerstatus\n"},"range":{"start":{"line":85,"character":17},"end":{"line":85,"character":17}}}}
2025/01/06 17:07:51 hoverService.go:136: Trace | Finished Hover with Content: Benutzerstatus

2025/01/06 17:07:53 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:07:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":86,"character":16}}}
2025/01/06 17:07:53 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:07:53 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:07:53 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:07:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n#### UserStatus\n###### Enum in Package [de.library.management.users](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L65)\nBenutzerstatus\n\n"},"range":{"start":{"line":86,"character":16},"end":{"line":86,"character":16}}}}
2025/01/06 17:07:53 hoverService.go:136: Trace | Finished Hover with Content: 
#### UserStatus
###### Enum in Package [de.library.management.users](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L65)
Benutzerstatus


2025/01/06 17:07:55 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:07:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":89,"character":16}}}
2025/01/06 17:07:55 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:07:55 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:07:55 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:07:55 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/06 17:07:55 hoverService.go:369: %!s(int=0)Index 0 Argumente: %!v(MISSING)
2025/01/06 17:07:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n#### EXPIRED\n###### In [UserStatus](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L87)\n\n\n\n**[Index]()**: 0\u003cbr\u003e\n"},"range":{"start":{"line":89,"character":16},"end":{"line":89,"character":16}}}}
2025/01/06 17:07:55 hoverService.go:136: Trace | Finished Hover with Content: 
#### EXPIRED
###### In [UserStatus](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L87)



**[Index]()**: 0<br>

2025/01/06 17:07:57 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:07:57 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":82,"character":14}}}
2025/01/06 17:07:57 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:07:57 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:07:57 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:07:57 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/06 17:07:57 hoverService.go:369: %!s(int=0)Index 2 Argumente: %!v(MISSING)
2025/01/06 17:07:57 hoverService.go:369: %!s(int=1)Index 2 Argumente: %!v(MISSING)
2025/01/06 17:07:57 hoverService.go:369: %!s(int=2)Index 2 Argumente: %!v(MISSING)
2025/01/06 17:07:57 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"\n#### STUDENT\n###### In [MembershipType](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L77)\n\n\n\n**[Index]()**: 0\u003cbr\u003e**[preis](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L78)**: 15\u003cbr\u003e**[startdatum](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L79)**: 2024-01-01 00:00:00 +0000 UTC\u003cbr\u003e\n"},"range":{"start":{"line":82,"character":14},"end":{"line":82,"character":14}}}}
2025/01/06 17:07:57 hoverService.go:136: Trace | Finished Hover with Content: 
#### STUDENT
###### In [MembershipType](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L77)



**[Index]()**: 0<br>**[preis](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L78)**: 15<br>**[startdatum](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L79)**: 2024-01-01 00:00:00 +0000 UTC<br>

2025/01/06 17:08:10 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:08:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":82,"character":15}}}
2025/01/06 17:08:10 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:08:10 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:08:10 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:08:10 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/06 17:08:10 hoverService.go:369: %!s(int=0)Index 2 Argumente: %!v(MISSING)
2025/01/06 17:08:10 hoverService.go:369: %!s(int=1)Index 2 Argumente: %!v(MISSING)
2025/01/06 17:08:10 hoverService.go:369: %!s(int=2)Index 2 Argumente: %!v(MISSING)
2025/01/06 17:08:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"contents":{"kind":"markdown","value":"\n#### STUDENT\n###### In [MembershipType](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L77)\n\n\n\n**[Index]()**: 0\u003cbr\u003e**[preis](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L78)**: 15\u003cbr\u003e**[startdatum](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L79)**: 2024-01-01 00:00:00 +0000 UTC\u003cbr\u003e\n"},"range":{"start":{"line":82,"character":15},"end":{"line":82,"character":15}}}}
2025/01/06 17:08:10 hoverService.go:136: Trace | Finished Hover with Content: 
#### STUDENT
###### In [MembershipType](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L77)



**[Index]()**: 0<br>**[preis](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L78)**: 15<br>**[startdatum](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L79)**: 2024-01-01 00:00:00 +0000 UTC<br>

2025/01/06 17:08:25 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:08:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":80,"character":14}}}
2025/01/06 17:08:25 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:08:25 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:08:25 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:08:25 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/06 17:08:25 hoverService.go:369: %!s(int=0)Index 2 Argumente: %!v(MISSING)
2025/01/06 17:08:25 hoverService.go:369: %!s(int=1)Index 2 Argumente: %!v(MISSING)
2025/01/06 17:08:25 hoverService.go:369: %!s(int=2)Index 2 Argumente: %!v(MISSING)
2025/01/06 17:08:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":{"contents":{"kind":"markdown","value":"\n#### PLUS\n###### In [MembershipType](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L77)\n\n\n\n**[Index]()**: 0\u003cbr\u003e**[preis](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L78)**: 15\u003cbr\u003e**[startdatum](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L79)**: 2024-01-01 00:00:00 +0000 UTC\u003cbr\u003e\n"},"range":{"start":{"line":80,"character":14},"end":{"line":80,"character":14}}}}
2025/01/06 17:08:25 hoverService.go:136: Trace | Finished Hover with Content: 
#### PLUS
###### In [MembershipType](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L77)



**[Index]()**: 0<br>**[preis](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L78)**: 15<br>**[startdatum](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L79)**: 2024-01-01 00:00:00 +0000 UTC<br>

2025/01/06 17:09:43 util.go:36: Trace | Read Content-Length: 61 from Content-Length: 61
2025/01/06 17:09:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"shutdown","params":null}
2025/01/06 17:09:43 server.go:82: INFO  | Received Shutdown Request
2025/01/06 17:09:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10"}
2025/01/06 17:09:43 server.go:69: INFO  | Server Closed
2025/01/06 17:09:43 main.go:28: Server Shutdown
2025/01/06 17:09:54 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/06 17:09:55 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 17:09:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":45749,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 17:09:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 17:09:55 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 17:09:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 17:09:55 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 17:09:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 17:09:55 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 17:09:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 17:09:55 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 17:09:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 17:09:55 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:09:55 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 17:09:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:09:55 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:09:55 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 17:09:55 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 17:09:55 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:09:55 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:09:55 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:09:55 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:10:24 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/06 17:10:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"shutdown","params":null}
2025/01/06 17:10:24 server.go:82: INFO  | Received Shutdown Request
2025/01/06 17:10:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2"}
2025/01/06 17:10:24 server.go:69: INFO  | Server Closed
2025/01/06 17:10:24 main.go:28: Server Shutdown
2025/01/06 17:10:25 fileService.go:35: Trace | FileChangeListeners: [0xc0000c8048]
2025/01/06 17:10:26 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/06 17:10:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":45749,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/06 17:10:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/06 17:10:26 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/06 17:10:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/06 17:10:26 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/06 17:10:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/06 17:10:26 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/06 17:10:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/06 17:10:26 util.go:36: Trace | Read Content-Length: 1165 from Content-Length: 1165
2025/01/06 17:10:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/06 17:10:26 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:10:26 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/06 17:10:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:10:26 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:10:26 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/06 17:10:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/06 17:10:26 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/06 17:10:26 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/06 17:10:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/06 17:10:26 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/06 17:10:34 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:10:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":86,"character":16}}}
2025/01/06 17:10:34 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:10:34 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:10:34 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:10:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\n#### UserStatus\n###### Enum in Package [de.library.management.users](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L65)\nBenutzerstatus\n\n"},"range":{"start":{"line":86,"character":16},"end":{"line":86,"character":16}}}}
2025/01/06 17:10:34 hoverService.go:136: Trace | Finished Hover with Content: 
#### UserStatus
###### Enum in Package [de.library.management.users](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L65)
Benutzerstatus


2025/01/06 17:10:41 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/06 17:10:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":80,"character":14}}}
2025/01/06 17:10:41 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/06 17:10:41 hoverService.go:106: Trace | Start Get File Content
2025/01/06 17:10:41 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/06 17:10:41 hoverService.go:155: Trace | Start Render Hover Text Konstante Markdown
2025/01/06 17:10:41 hoverService.go:369: Trace | Index 0 Argumente: 2
2025/01/06 17:10:41 hoverService.go:370: Trace | Value: {ModelElement:{Kommentar:<nil> Node:0xc000167b20} Ignored:true Value:0}
2025/01/06 17:10:41 hoverService.go:369: Trace | Index 1 Argumente: 2
2025/01/06 17:10:41 hoverService.go:370: Trace | Value: {ModelElement:{Kommentar:<nil> Node:0xc000167be0} Ignored:false Value:15}
2025/01/06 17:10:41 hoverService.go:369: Trace | Index 2 Argumente: 2
2025/01/06 17:10:41 hoverService.go:370: Trace | Value: {ModelElement:{Kommentar:<nil> Node:0xc000167cc0} Value:2024-01-01 00:00:00 +0000 UTC}
2025/01/06 17:10:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### PLUS\n###### In [MembershipType](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L77)\n\n\n**[Index]()**: 0\u003cbr\u003e\n**[preis](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L78)**: 15\u003cbr\u003e\n**[startdatum](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L79)**: 2024-01-01 00:00:00 +0000 UTC\u003cbr\u003e\n\n"},"range":{"start":{"line":80,"character":14},"end":{"line":80,"character":14}}}}
2025/01/06 17:10:41 hoverService.go:136: Trace | Finished Hover with Content: 
#### PLUS
###### In [MembershipType](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L77)


**[Index]()**: 0<br>
**[preis](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L78)**: 15<br>
**[startdatum](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L79)**: 2024-01-01 00:00:00 +0000 UTC<br>


2025/01/08 13:49:03 fileService.go:35: Trace | FileChangeListeners: [0xc000008048]
2025/01/08 13:49:03 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/08 13:49:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":28236,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.218)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/08 13:49:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"completionProvider":{}},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/08 13:49:03 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/08 13:49:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/08 13:49:03 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/08 13:49:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/08 13:49:03 server.go:92: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/08 13:49:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/08 13:49:03 util.go:36: Trace | Read Content-Length: 1138 from Content-Length: 1138
2025/01/08 13:49:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","languageId":"dmf","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/08 13:49:03 server.go:95: INFO  | Handle Method: textDocument/didOpen 
2025/01/08 13:49:03 fileService.go:88: Trace | Create FileHandle for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:49:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/08 13:49:03 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:49:21 util.go:36: Trace | Read Content-Length: 266 from Content-Length: 266
2025/01/08 13:49:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":20,"character":21},"end":{"line":20,"character":22}},"rangeLength":1,"text":""}]}}
2025/01/08 13:49:21 server.go:95: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:49:21 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:49:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":2,"diagnostics":[]}}
2025/01/08 13:49:21 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:49:26 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:49:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":3,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":20,"character":21},"end":{"line":20,"character":21}},"rangeLength":0,"text":";"}]}}
2025/01/08 13:49:26 server.go:95: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:49:26 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:49:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":3,"diagnostics":[]}}
2025/01/08 13:49:26 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:50:20 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/08 13:50:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"shutdown","params":null}
2025/01/08 13:50:20 server.go:79: INFO  | Received Shutdown Request
2025/01/08 13:50:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2"}
2025/01/08 13:50:20 server.go:66: INFO  | Server Closed
2025/01/08 13:50:20 main.go:23: Server Shutdown
2025/01/08 13:50:21 fileService.go:35: Trace | FileChangeListeners: [0xc000008078]
2025/01/08 13:50:22 util.go:36: Trace | Read Content-Length: 3626 from Content-Length: 3626
2025/01/08 13:50:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":28236,"rootPath":"C:/Code/DMF/intellijTest","rootUri":"file:///C:/Code/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.218)"},"trace":"off","workspaceFolders":[{"uri":"file:///C:/Code/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/08 13:50:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/08 13:50:22 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/08 13:50:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/08 13:50:22 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/08 13:50:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/08 13:50:22 server.go:95: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/08 13:50:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/08 13:50:22 util.go:36: Trace | Read Content-Length: 1138 from Content-Length: 1138
2025/01/08 13:50:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","languageId":"dmf","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund  {\n\n         }\n    }\n}"}}}
2025/01/08 13:50:22 server.go:98: INFO  | Handle Method: textDocument/didOpen 
2025/01/08 13:50:22 fileService.go:88: Trace | Create FileHandle for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:50:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/08 13:50:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:50:24 util.go:36: Trace | Read Content-Length: 266 from Content-Length: 266
2025/01/08 13:50:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":20,"character":21},"end":{"line":20,"character":22}},"rangeLength":1,"text":""}]}}
2025/01/08 13:50:24 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:50:24 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:50:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":2,"diagnostics":[{"range":{"start":{"line":23,"character":23},"end":{"line":23,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:24:23\nidentifier(i, me);\n           ^      \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"}]}}
2025/01/08 13:50:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 50 51 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 50 51 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 50 52 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 32 32 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 93 125] <nil> <nil>}
2025/01/08 13:50:24 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:\Code\DMF\intellijTest\test.dmf:24:23
identifier(i, me);
           ^      
Referenzierte Variable nicht gefunden!

2025/01/08 13:50:27 util.go:36: Trace | Read Content-Length: 172 from Content-Length: 172
2025/01/08 13:50:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"position":{"line":23,"character":23}}}
2025/01/08 13:50:27 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/08 13:50:27 hoverService.go:106: Trace | Start Get File Content
2025/01/08 13:50:27 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/08 13:50:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"contents":{"kind":"markdown","value":"\r\n#### Identifier von [Person](file:///C:/Code/DMF/intellijTest/test.dmf#L20)\r\n\r\n---\r\n* **unknown [i](file:///C:/Code/DMF/intellijTest/test.dmf#L24)**\r\n\r\n* **string [me](file:///C:/Code/DMF/intellijTest/test.dmf#L23)**\r\n\r\n\r\n"},"range":{"start":{"line":23,"character":23},"end":{"line":23,"character":23}}}}
2025/01/08 13:50:27 hoverService.go:136: Trace | Finished Hover with Content: 
#### Identifier von [Person](file:///C:/Code/DMF/intellijTest/test.dmf#L20)

---
* **unknown [i](file:///C:/Code/DMF/intellijTest/test.dmf#L24)**

* **string [me](file:///C:/Code/DMF/intellijTest/test.dmf#L23)**



2025/01/08 13:50:31 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:50:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":3,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":20,"character":21},"end":{"line":20,"character":21}},"rangeLength":0,"text":";"}]}}
2025/01/08 13:50:31 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:50:31 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:50:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":3,"diagnostics":[]}}
2025/01/08 13:50:31 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:50:33 util.go:36: Trace | Read Content-Length: 266 from Content-Length: 266
2025/01/08 13:50:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":4,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":23,"character":29},"end":{"line":23,"character":30}},"rangeLength":1,"text":""}]}}
2025/01/08 13:50:33 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:50:33 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:50:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":4,"diagnostics":[]}}
2025/01/08 13:50:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:50:36 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:50:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":5,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":23,"character":29},"end":{"line":23,"character":29}},"rangeLength":0,"text":";"}]}}
2025/01/08 13:50:36 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:50:36 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:50:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":5,"diagnostics":[]}}
2025/01/08 13:50:36 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:50:37 util.go:36: Trace | Read Content-Length: 266 from Content-Length: 266
2025/01/08 13:50:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":6,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":23,"character":29},"end":{"line":23,"character":30}},"rangeLength":1,"text":""}]}}
2025/01/08 13:50:37 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:50:37 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:50:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":6,"diagnostics":[]}}
2025/01/08 13:50:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:50:37 util.go:36: Trace | Read Content-Length: 266 from Content-Length: 266
2025/01/08 13:50:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":7,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":23,"character":28},"end":{"line":23,"character":29}},"rangeLength":1,"text":""}]}}
2025/01/08 13:50:37 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:50:37 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:50:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":7,"diagnostics":[]}}
2025/01/08 13:50:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:50:38 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:50:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":8,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":23,"character":28},"end":{"line":23,"character":28}},"rangeLength":0,"text":")"}]}}
2025/01/08 13:50:38 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:50:38 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:50:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":8,"diagnostics":[]}}
2025/01/08 13:50:38 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:50:39 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:50:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":9,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":23,"character":29},"end":{"line":23,"character":29}},"rangeLength":0,"text":";"}]}}
2025/01/08 13:50:39 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:50:39 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:50:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":9,"diagnostics":[]}}
2025/01/08 13:50:39 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:50:42 util.go:36: Trace | Read Content-Length: 172 from Content-Length: 172
2025/01/08 13:50:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"position":{"line":19,"character":19}}}
2025/01/08 13:50:42 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/08 13:50:42 hoverService.go:106: Trace | Start Get File Content
2025/01/08 13:50:42 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/08 13:50:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\r\n#### Person\r\n###### Entity in Package [de.alex.brand.other](file:///C:/Code/DMF/intellijTest/test.dmf#L6)\r\nKommentar Ã¼ber Person\n\r\n"},"range":{"start":{"line":19,"character":19},"end":{"line":19,"character":19}}}}
2025/01/08 13:50:42 hoverService.go:136: Trace | Finished Hover with Content: 
#### Person
###### Entity in Package [de.alex.brand.other](file:///C:/Code/DMF/intellijTest/test.dmf#L6)
Kommentar Ã¼ber Person


2025/01/08 13:50:49 util.go:36: Trace | Read Content-Length: 172 from Content-Length: 172
2025/01/08 13:50:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"position":{"line":23,"character":16}}}
2025/01/08 13:50:49 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/08 13:50:49 hoverService.go:106: Trace | Start Get File Content
2025/01/08 13:50:49 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/08 13:50:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\r\n#### Identifier von [Person](file:///C:/Code/DMF/intellijTest/test.dmf#L20)\r\n\r\n---\r\n* **int [i](file:///C:/Code/DMF/intellijTest/test.dmf#L21)**\r\n\r\n* **string [me](file:///C:/Code/DMF/intellijTest/test.dmf#L23)**\r\n\r\n\r\n"},"range":{"start":{"line":23,"character":16},"end":{"line":23,"character":16}}}}
2025/01/08 13:50:49 hoverService.go:136: Trace | Finished Hover with Content: 
#### Identifier von [Person](file:///C:/Code/DMF/intellijTest/test.dmf#L20)

---
* **int [i](file:///C:/Code/DMF/intellijTest/test.dmf#L21)**

* **string [me](file:///C:/Code/DMF/intellijTest/test.dmf#L23)**



2025/01/08 13:50:56 util.go:36: Trace | Read Content-Length: 172 from Content-Length: 172
2025/01/08 13:50:56 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"position":{"line":23,"character":20}}}
2025/01/08 13:50:56 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/08 13:50:56 hoverService.go:106: Trace | Start Get File Content
2025/01/08 13:50:56 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/08 13:50:56 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\r\n#### Identifier von [Person](file:///C:/Code/DMF/intellijTest/test.dmf#L20)\r\n\r\n---\r\n* **int [i](file:///C:/Code/DMF/intellijTest/test.dmf#L21)**\r\n\r\n* **string [me](file:///C:/Code/DMF/intellijTest/test.dmf#L23)**\r\n\r\n\r\n"},"range":{"start":{"line":23,"character":20},"end":{"line":23,"character":20}}}}
2025/01/08 13:50:56 hoverService.go:136: Trace | Finished Hover with Content: 
#### Identifier von [Person](file:///C:/Code/DMF/intellijTest/test.dmf#L20)

---
* **int [i](file:///C:/Code/DMF/intellijTest/test.dmf#L21)**

* **string [me](file:///C:/Code/DMF/intellijTest/test.dmf#L23)**



2025/01/08 13:51:06 util.go:36: Trace | Read Content-Length: 172 from Content-Length: 172
2025/01/08 13:51:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"position":{"line":49,"character":32}}}
2025/01/08 13:51:06 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/08 13:51:06 hoverService.go:106: Trace | Start Get File Content
2025/01/08 13:51:06 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/08 13:51:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\r\n#### TwoE\r\n###### Entity in Package [de.alex.brand.rekur](file:///C:/Code/DMF/intellijTest/test.dmf#L35)\r\n\r\n"},"range":{"start":{"line":49,"character":32},"end":{"line":49,"character":32}}}}
2025/01/08 13:51:06 hoverService.go:136: Trace | Finished Hover with Content: 
#### TwoE
###### Entity in Package [de.alex.brand.rekur](file:///C:/Code/DMF/intellijTest/test.dmf#L35)


2025/01/08 13:51:08 util.go:36: Trace | Read Content-Length: 172 from Content-Length: 172
2025/01/08 13:51:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"position":{"line":50,"character":16}}}
2025/01/08 13:51:08 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/08 13:51:08 hoverService.go:106: Trace | Start Get File Content
2025/01/08 13:51:08 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/08 13:51:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"\r\n#### Identifier von [TwoE](file:///C:/Code/DMF/intellijTest/test.dmf#L50)\r\n\r\n---\r\n* **int [i](file:///C:/Code/DMF/intellijTest/test.dmf#L44)**\r\n\u003cbr\u003eKommentar\n\u003cbr\u003eHallo\n\r\n* **string [me](file:///C:/Code/DMF/intellijTest/test.dmf#L45)**\r\n\r\n\r\n"},"range":{"start":{"line":50,"character":16},"end":{"line":50,"character":16}}}}
2025/01/08 13:51:08 hoverService.go:136: Trace | Finished Hover with Content: 
#### Identifier von [TwoE](file:///C:/Code/DMF/intellijTest/test.dmf#L50)

---
* **int [i](file:///C:/Code/DMF/intellijTest/test.dmf#L44)**
<br>Kommentar
<br>Hallo

* **string [me](file:///C:/Code/DMF/intellijTest/test.dmf#L45)**



2025/01/08 13:51:14 util.go:36: Trace | Read Content-Length: 172 from Content-Length: 172
2025/01/08 13:51:14 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"position":{"line":49,"character":16}}}
2025/01/08 13:51:14 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/08 13:51:14 hoverService.go:106: Trace | Start Get File Content
2025/01/08 13:51:14 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/08 13:51:14 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"contents":{"kind":"markdown","value":"\r\n#### TwoE\r\n###### Entity in Package [de.alex.brand.rekur](file:///C:/Code/DMF/intellijTest/test.dmf#L35)\r\n\r\n"},"range":{"start":{"line":49,"character":16},"end":{"line":49,"character":16}}}}
2025/01/08 13:51:14 hoverService.go:136: Trace | Finished Hover with Content: 
#### TwoE
###### Entity in Package [de.alex.brand.rekur](file:///C:/Code/DMF/intellijTest/test.dmf#L35)


2025/01/08 13:51:19 util.go:36: Trace | Read Content-Length: 172 from Content-Length: 172
2025/01/08 13:51:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"position":{"line":54,"character":20}}}
2025/01/08 13:51:19 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/08 13:51:19 hoverService.go:106: Trace | Start Get File Content
2025/01/08 13:51:19 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/08 13:51:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":{"contents":{"kind":"markdown","value":"\r\n#### IGrund\r\n###### Interface in Package [de.alex.brand.grund](file:///C:/Code/DMF/intellijTest/test.dmf#L54)\r\n\r\n"},"range":{"start":{"line":54,"character":20},"end":{"line":54,"character":20}}}}
2025/01/08 13:51:19 hoverService.go:136: Trace | Finished Hover with Content: 
#### IGrund
###### Interface in Package [de.alex.brand.grund](file:///C:/Code/DMF/intellijTest/test.dmf#L54)


2025/01/08 13:51:24 util.go:36: Trace | Read Content-Length: 172 from Content-Length: 172
2025/01/08 13:51:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"position":{"line":3,"character":15}}}
2025/01/08 13:51:24 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/08 13:51:24 hoverService.go:106: Trace | Start Get File Content
2025/01/08 13:51:24 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/08 13:51:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10","result":{"contents":{"kind":"markdown","value":"\r\n#### brand\r\n###### Package in Package [de.alex]()\r\n\r\n"},"range":{"start":{"line":3,"character":15},"end":{"line":3,"character":15}}}}
2025/01/08 13:51:24 hoverService.go:136: Trace | Finished Hover with Content: 
#### brand
###### Package in Package [de.alex]()


2025/01/08 13:51:26 util.go:36: Trace | Read Content-Length: 171 from Content-Length: 171
2025/01/08 13:51:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"position":{"line":5,"character":9}}}
2025/01/08 13:51:26 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/08 13:51:26 hoverService.go:106: Trace | Start Get File Content
2025/01/08 13:51:26 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/08 13:51:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"11","result":{"contents":{"kind":"markdown","value":"\r\n#### other\r\n###### Package in Package [de.alex.brand](file:///C:/Code/DMF/intellijTest/test.dmf#L4)\r\nComment over other\n\r\n"},"range":{"start":{"line":5,"character":9},"end":{"line":5,"character":9}}}}
2025/01/08 13:51:26 hoverService.go:136: Trace | Finished Hover with Content: 
#### other
###### Package in Package [de.alex.brand](file:///C:/Code/DMF/intellijTest/test.dmf#L4)
Comment over other


2025/01/08 13:51:34 util.go:36: Trace | Read Content-Length: 266 from Content-Length: 266
2025/01/08 13:51:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":10,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":56,"character":9},"end":{"line":56,"character":10}},"rangeLength":1,"text":""}]}}
2025/01/08 13:51:34 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:51:34 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:51:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":10,"diagnostics":[]}}
2025/01/08 13:51:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:51:39 util.go:36: Trace | Read Content-Length: 266 from Content-Length: 266
2025/01/08 13:51:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":11,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":56,"character":9},"end":{"line":56,"character":9}},"rangeLength":0,"text":"}"}]}}
2025/01/08 13:51:39 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:51:39 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:51:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":11,"diagnostics":[]}}
2025/01/08 13:51:39 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:51:43 util.go:36: Trace | Read Content-Length: 173 from Content-Length: 173
2025/01/08 13:51:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"12","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"position":{"line":53,"character":15}}}
2025/01/08 13:51:43 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/08 13:51:43 hoverService.go:106: Trace | Start Get File Content
2025/01/08 13:51:43 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/08 13:51:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"12","result":{"contents":{"kind":"markdown","value":"\r\n#### grund\r\n###### Package in Package [de.alex.brand](file:///C:/Code/DMF/intellijTest/test.dmf#L4)\r\n\r\n"},"range":{"start":{"line":53,"character":15},"end":{"line":53,"character":15}}}}
2025/01/08 13:51:43 hoverService.go:136: Trace | Finished Hover with Content: 
#### grund
###### Package in Package [de.alex.brand](file:///C:/Code/DMF/intellijTest/test.dmf#L4)


2025/01/08 13:51:56 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:51:56 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":12,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":49,"character":31},"end":{"line":49,"character":32}},"rangeLength":1,"text":""}]}}
2025/01/08 13:51:56 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:51:56 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:51:56 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":12,"diagnostics":[{"range":{"start":{"line":49,"character":8},"end":{"line":51,"character":9}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:50:8\nentity TwoE extends .OnE {\n           identifier(i, me);\n        }\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nDer Supertyp wurde nicht gefunden!\n","message":"Der Supertyp wurde nicht gefunden!"},{"range":{"start":{"line":50,"character":22},"end":{"line":50,"character":23}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:51:22\nidentifier(i, me);\n           ^      \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":50,"character":25},"end":{"line":50,"character":27}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:51:25\nidentifier(i, me);\n              ^^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"}]}}
2025/01/08 13:51:56 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 57 44 34 99 104 97 114 97 99 116 101 114 34 58 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 49 44 34 99 104 97 114 97 99 116 101 114 34 58 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 53 48 58 56 92 110 101 110 116 105 116 121 32 84 119 111 69 32 101 120 116 101 110 100 115 32 46 79 110 69 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 125 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 53 49 58 50 50 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 32 32 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 53 49 58 50 53 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 32 32 94 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 93 125] <nil> <nil>}
2025/01/08 13:51:56 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:\Code\DMF\intellijTest\test.dmf:50:8
entity TwoE extends .OnE {
           identifier(i, me);
        }
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Der Supertyp wurde nicht gefunden!

2025/01/08 13:51:56 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:\Code\DMF\intellijTest\test.dmf:51:22
identifier(i, me);
           ^      
Referenzierte Variable nicht gefunden!

2025/01/08 13:51:56 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:\Code\DMF\intellijTest\test.dmf:51:25
identifier(i, me);
              ^^  
Referenzierte Variable nicht gefunden!

2025/01/08 13:52:05 util.go:36: Trace | Read Content-Length: 268 from Content-Length: 268
2025/01/08 13:52:05 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":13,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":49,"character":31},"end":{"line":49,"character":31}},"rangeLength":0,"text":"e"}]}}
2025/01/08 13:52:05 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:05 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:05 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":13,"diagnostics":[]}}
2025/01/08 13:52:05 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:06 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:52:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":14,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":49,"character":31},"end":{"line":49,"character":32}},"rangeLength":1,"text":""}]}}
2025/01/08 13:52:06 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:06 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":14,"diagnostics":[{"range":{"start":{"line":49,"character":8},"end":{"line":51,"character":9}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:50:8\nentity TwoE extends .OnE {\n           identifier(i, me);\n        }\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nDer Supertyp wurde nicht gefunden!\n","message":"Der Supertyp wurde nicht gefunden!"},{"range":{"start":{"line":50,"character":22},"end":{"line":50,"character":23}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:51:22\nidentifier(i, me);\n           ^      \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":50,"character":25},"end":{"line":50,"character":27}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:51:25\nidentifier(i, me);\n              ^^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"}]}}
2025/01/08 13:52:06 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 57 44 34 99 104 97 114 97 99 116 101 114 34 58 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 49 44 34 99 104 97 114 97 99 116 101 114 34 58 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 53 48 58 56 92 110 101 110 116 105 116 121 32 84 119 111 69 32 101 120 116 101 110 100 115 32 46 79 110 69 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 125 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 53 49 58 50 50 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 32 32 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 53 49 58 50 53 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 32 32 94 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 93 125] <nil> <nil>}
2025/01/08 13:52:06 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:\Code\DMF\intellijTest\test.dmf:50:8
entity TwoE extends .OnE {
           identifier(i, me);
        }
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Der Supertyp wurde nicht gefunden!

2025/01/08 13:52:06 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:\Code\DMF\intellijTest\test.dmf:51:22
identifier(i, me);
           ^      
Referenzierte Variable nicht gefunden!

2025/01/08 13:52:06 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:\Code\DMF\intellijTest\test.dmf:51:25
identifier(i, me);
              ^^  
Referenzierte Variable nicht gefunden!

2025/01/08 13:52:07 util.go:36: Trace | Read Content-Length: 173 from Content-Length: 173
2025/01/08 13:52:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"13","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"position":{"line":49,"character":28}}}
2025/01/08 13:52:07 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/08 13:52:07 hoverService.go:106: Trace | Start Get File Content
2025/01/08 13:52:07 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/08 13:52:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"13","result":{"contents":{"kind":"markdown","value":"\r\n#### TwoE\r\n###### Entity in Package [de.alex.brand.rekur](file:///C:/Code/DMF/intellijTest/test.dmf#L35)\r\n\r\n"},"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":28}}}}
2025/01/08 13:52:07 hoverService.go:136: Trace | Finished Hover with Content: 
#### TwoE
###### Entity in Package [de.alex.brand.rekur](file:///C:/Code/DMF/intellijTest/test.dmf#L35)


2025/01/08 13:52:12 util.go:36: Trace | Read Content-Length: 268 from Content-Length: 268
2025/01/08 13:52:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":15,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":28}},"rangeLength":0,"text":"e"}]}}
2025/01/08 13:52:12 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:12 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:12 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":15,"diagnostics":[{"range":{"start":{"line":49,"character":8},"end":{"line":51,"character":9}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:50:8\nentity TwoE extends e.OnE {\n           identifier(i, me);\n        }\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nDer Supertyp wurde nicht gefunden!\n","message":"Der Supertyp wurde nicht gefunden!"},{"range":{"start":{"line":50,"character":22},"end":{"line":50,"character":23}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:51:22\nidentifier(i, me);\n           ^      \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":50,"character":25},"end":{"line":50,"character":27}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:51:25\nidentifier(i, me);\n              ^^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"}]}}
2025/01/08 13:52:12 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 57 44 34 99 104 97 114 97 99 116 101 114 34 58 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 49 44 34 99 104 97 114 97 99 116 101 114 34 58 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 53 48 58 56 92 110 101 110 116 105 116 121 32 84 119 111 69 32 101 120 116 101 110 100 115 32 101 46 79 110 69 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 125 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 53 49 58 50 50 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 32 32 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 53 49 58 50 53 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 32 32 94 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 93 125] <nil> <nil>}
2025/01/08 13:52:12 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:\Code\DMF\intellijTest\test.dmf:50:8
entity TwoE extends e.OnE {
           identifier(i, me);
        }
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Der Supertyp wurde nicht gefunden!

2025/01/08 13:52:12 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:\Code\DMF\intellijTest\test.dmf:51:22
identifier(i, me);
           ^      
Referenzierte Variable nicht gefunden!

2025/01/08 13:52:12 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:\Code\DMF\intellijTest\test.dmf:51:25
identifier(i, me);
              ^^  
Referenzierte Variable nicht gefunden!

2025/01/08 13:52:13 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:52:13 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":16,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":49,"character":28},"end":{"line":49,"character":29}},"rangeLength":1,"text":""}]}}
2025/01/08 13:52:13 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:13 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:13 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":16,"diagnostics":[{"range":{"start":{"line":49,"character":8},"end":{"line":51,"character":9}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:50:8\nentity TwoE extends .OnE {\n           identifier(i, me);\n        }\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nDer Supertyp wurde nicht gefunden!\n","message":"Der Supertyp wurde nicht gefunden!"},{"range":{"start":{"line":50,"character":22},"end":{"line":50,"character":23}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:51:22\nidentifier(i, me);\n           ^      \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":50,"character":25},"end":{"line":50,"character":27}},"severity":1,"source":"FehlerStelle in Position file:///C:/Code/DMF/intellijTest/test.dmf:51:25\nidentifier(i, me);\n              ^^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"}]}}
2025/01/08 13:52:13 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 52 57 44 34 99 104 97 114 97 99 116 101 114 34 58 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 49 44 34 99 104 97 114 97 99 116 101 114 34 58 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 53 48 58 56 92 110 101 110 116 105 116 121 32 84 119 111 69 32 101 120 116 101 110 100 115 32 46 79 110 69 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 125 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 68 101 114 32 83 117 112 101 114 116 121 112 32 119 117 114 100 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 53 49 58 50 50 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 32 32 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 58 53 49 58 50 53 92 110 105 100 101 110 116 105 102 105 101 114 40 105 44 32 109 101 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 32 32 94 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 93 125] <nil> <nil>}
2025/01/08 13:52:13 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:\Code\DMF\intellijTest\test.dmf:50:8
entity TwoE extends .OnE {
           identifier(i, me);
        }
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Der Supertyp wurde nicht gefunden!

2025/01/08 13:52:13 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:\Code\DMF\intellijTest\test.dmf:51:22
identifier(i, me);
           ^      
Referenzierte Variable nicht gefunden!

2025/01/08 13:52:13 fileHandle.go:107: Debug | Error in TextFile:
FehlerStelle in Position C:\Code\DMF\intellijTest\test.dmf:51:25
identifier(i, me);
              ^^  
Referenzierte Variable nicht gefunden!

2025/01/08 13:52:14 util.go:36: Trace | Read Content-Length: 268 from Content-Length: 268
2025/01/08 13:52:14 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":17,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":49,"character":31},"end":{"line":49,"character":31}},"rangeLength":0,"text":"e"}]}}
2025/01/08 13:52:14 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:14 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:14 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":17,"diagnostics":[]}}
2025/01/08 13:52:14 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:19 util.go:36: Trace | Read Content-Length: 268 from Content-Length: 268
2025/01/08 13:52:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":18,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":54,"character":26},"end":{"line":56,"character":10}},"rangeLength":14,"text":""}]}}
2025/01/08 13:52:19 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:19 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":18,"diagnostics":[]}}
2025/01/08 13:52:19 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:20 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:52:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":19,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":54,"character":25},"end":{"line":54,"character":26}},"rangeLength":1,"text":""}]}}
2025/01/08 13:52:20 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:20 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":19,"diagnostics":[]}}
2025/01/08 13:52:20 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:20 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:52:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":20,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":54,"character":24},"end":{"line":54,"character":25}},"rangeLength":1,"text":""}]}}
2025/01/08 13:52:20 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:20 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":20,"diagnostics":[]}}
2025/01/08 13:52:20 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:21 util.go:36: Trace | Read Content-Length: 268 from Content-Length: 268
2025/01/08 13:52:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":21,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":54,"character":24},"end":{"line":54,"character":24}},"rangeLength":0,"text":"d"}]}}
2025/01/08 13:52:21 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:21 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":21,"diagnostics":[]}}
2025/01/08 13:52:21 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:21 util.go:36: Trace | Read Content-Length: 268 from Content-Length: 268
2025/01/08 13:52:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":22,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":54,"character":25},"end":{"line":54,"character":25}},"rangeLength":0,"text":" "}]}}
2025/01/08 13:52:21 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:21 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":22,"diagnostics":[]}}
2025/01/08 13:52:21 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:22 util.go:36: Trace | Read Content-Length: 268 from Content-Length: 268
2025/01/08 13:52:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":23,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":54,"character":26},"end":{"line":54,"character":26}},"rangeLength":0,"text":"{"}]}}
2025/01/08 13:52:22 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:22 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":23,"diagnostics":[]}}
2025/01/08 13:52:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:22 util.go:36: Trace | Read Content-Length: 378 from Content-Length: 378
2025/01/08 13:52:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":24,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":54,"character":27},"end":{"line":54,"character":27}},"rangeLength":0,"text":"\n}"},{"range":{"start":{"line":54,"character":27},"end":{"line":54,"character":27}},"rangeLength":0,"text":"\n"}]}}
2025/01/08 13:52:22 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:22 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":24,"diagnostics":[]}}
2025/01/08 13:52:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:22 util.go:36: Trace | Read Content-Length: 496 from Content-Length: 496
2025/01/08 13:52:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":25,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":54,"character":27},"end":{"line":55,"character":0}},"rangeLength":1,"text":""},{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":0}},"rangeLength":0,"text":"         "},{"range":{"start":{"line":54,"character":27},"end":{"line":54,"character":27}},"rangeLength":0,"text":"\n         "}]}}
2025/01/08 13:52:22 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:22 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":25,"diagnostics":[]}}
2025/01/08 13:52:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:25 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:52:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":26,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":54,"character":17},"end":{"line":54,"character":18}},"rangeLength":1,"text":""}]}}
2025/01/08 13:52:25 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:25 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":26,"diagnostics":[]}}
2025/01/08 13:52:25 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:27 util.go:36: Trace | Read Content-Length: 268 from Content-Length: 268
2025/01/08 13:52:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":27,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":54,"character":17},"end":{"line":54,"character":17}},"rangeLength":0,"text":"e"}]}}
2025/01/08 13:52:27 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:27 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":27,"diagnostics":[]}}
2025/01/08 13:52:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:29 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:52:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":28,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":54,"character":17},"end":{"line":54,"character":18}},"rangeLength":1,"text":""}]}}
2025/01/08 13:52:29 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:29 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":28,"diagnostics":[]}}
2025/01/08 13:52:29 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:29 util.go:36: Trace | Read Content-Length: 268 from Content-Length: 268
2025/01/08 13:52:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":29,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":54,"character":17},"end":{"line":54,"character":17}},"rangeLength":0,"text":"e"}]}}
2025/01/08 13:52:29 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:29 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":29,"diagnostics":[]}}
2025/01/08 13:52:29 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:36 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:52:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":30,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":49,"character":13},"end":{"line":49,"character":14}},"rangeLength":1,"text":""}]}}
2025/01/08 13:52:36 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:36 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":30,"diagnostics":[]}}
2025/01/08 13:52:36 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:36 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:52:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":31,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":49,"character":12},"end":{"line":49,"character":13}},"rangeLength":1,"text":""}]}}
2025/01/08 13:52:36 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:36 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":31,"diagnostics":[]}}
2025/01/08 13:52:36 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:36 util.go:36: Trace | Read Content-Length: 267 from Content-Length: 267
2025/01/08 13:52:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":32,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":49,"character":11},"end":{"line":49,"character":12}},"rangeLength":1,"text":""}]}}
2025/01/08 13:52:36 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:36 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":32,"diagnostics":[]}}
2025/01/08 13:52:36 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:41 util.go:36: Trace | Read Content-Length: 270 from Content-Length: 270
2025/01/08 13:52:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":33,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":49,"character":11},"end":{"line":49,"character":11}},"rangeLength":0,"text":"ity"}]}}
2025/01/08 13:52:41 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:41 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":33,"diagnostics":[]}}
2025/01/08 13:52:41 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:52:58 util.go:36: Trace | Read Content-Length: 265 from Content-Length: 265
2025/01/08 13:52:58 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":34,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":55,"character":0},"end":{"line":55,"character":9}},"rangeLength":9,"text":""}]}}
2025/01/08 13:52:58 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:52:58 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:52:58 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":34,"diagnostics":[]}}
2025/01/08 13:52:58 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:53:17 util.go:36: Trace | Read Content-Length: 173 from Content-Length: 173
2025/01/08 13:53:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"14","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"position":{"line":34,"character":13}}}
2025/01/08 13:53:17 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/08 13:53:17 hoverService.go:106: Trace | Start Get File Content
2025/01/08 13:53:17 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/08 13:53:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"14","result":{"contents":{"kind":"markdown","value":"\r\n#### rekur\r\n###### Package in Package [de.alex.brand](file:///C:/Code/DMF/intellijTest/test.dmf#L4)\r\n\r\n"},"range":{"start":{"line":34,"character":13},"end":{"line":34,"character":13}}}}
2025/01/08 13:53:17 hoverService.go:136: Trace | Finished Hover with Content: 
#### rekur
###### Package in Package [de.alex.brand](file:///C:/Code/DMF/intellijTest/test.dmf#L4)


2025/01/08 13:53:20 util.go:36: Trace | Read Content-Length: 271 from Content-Length: 271
2025/01/08 13:53:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":35,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":32,"character":5},"end":{"line":32,"character":5}},"rangeLength":0,"text":"\n    "}]}}
2025/01/08 13:53:20 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:53:20 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:53:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":35,"diagnostics":[]}}
2025/01/08 13:53:20 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:53:21 util.go:36: Trace | Read Content-Length: 271 from Content-Length: 271
2025/01/08 13:53:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":36,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":33,"character":4},"end":{"line":33,"character":4}},"rangeLength":0,"text":"\n    "}]}}
2025/01/08 13:53:21 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:53:21 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:53:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":36,"diagnostics":[]}}
2025/01/08 13:53:21 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:53:22 util.go:36: Trace | Read Content-Length: 265 from Content-Length: 265
2025/01/08 13:53:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":37,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":3},"end":{"line":34,"character":4}},"rangeLength":1,"text":""}]}}
2025/01/08 13:53:22 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:53:22 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:53:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":37,"diagnostics":[]}}
2025/01/08 13:53:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:53:22 util.go:36: Trace | Read Content-Length: 265 from Content-Length: 265
2025/01/08 13:53:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":38,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":2},"end":{"line":34,"character":3}},"rangeLength":1,"text":""}]}}
2025/01/08 13:53:22 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:53:22 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:53:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":38,"diagnostics":[]}}
2025/01/08 13:53:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:53:22 util.go:36: Trace | Read Content-Length: 265 from Content-Length: 265
2025/01/08 13:53:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":39,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":34,"character":0},"end":{"line":34,"character":2}},"rangeLength":2,"text":""}]}}
2025/01/08 13:53:22 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:53:22 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:53:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":39,"diagnostics":[]}}
2025/01/08 13:53:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:53:23 util.go:36: Trace | Read Content-Length: 265 from Content-Length: 265
2025/01/08 13:53:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":40,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":33,"character":4},"end":{"line":34,"character":0}},"rangeLength":1,"text":""}]}}
2025/01/08 13:53:23 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:53:23 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:53:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":40,"diagnostics":[]}}
2025/01/08 13:53:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:53:23 util.go:36: Trace | Read Content-Length: 265 from Content-Length: 265
2025/01/08 13:53:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":41,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":33,"character":3},"end":{"line":33,"character":4}},"rangeLength":1,"text":""}]}}
2025/01/08 13:53:23 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:53:23 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:53:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":41,"diagnostics":[]}}
2025/01/08 13:53:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/08 13:53:32 util.go:36: Trace | Read Content-Length: 173 from Content-Length: 173
2025/01/08 13:53:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"15","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"position":{"line":42,"character":20}}}
2025/01/08 13:53:32 server.go:98: INFO  | Handle Method: textDocument/hover 
2025/01/08 13:53:32 hoverService.go:106: Trace | Start Get File Content
2025/01/08 13:53:32 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/08 13:53:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"15","result":{"contents":{"kind":"markdown","value":"Kommentar\n\u003cbr\u003eHallo\n"},"range":{"start":{"line":42,"character":20},"end":{"line":42,"character":20}}}}
2025/01/08 13:53:32 hoverService.go:136: Trace | Finished Hover with Content: Kommentar
<br>Hallo

2025/01/08 13:54:01 util.go:36: Trace | Read Content-Length: 265 from Content-Length: 265
2025/01/08 13:54:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":42,"uri":"file:///C:/Code/DMF/intellijTest/test.dmf"},"contentChanges":[{"range":{"start":{"line":33,"character":0},"end":{"line":33,"character":3}},"rangeLength":3,"text":""}]}}
2025/01/08 13:54:01 server.go:98: INFO  | Handle Method: textDocument/didChange 
2025/01/08 13:54:01 fileService.go:104: Trace | Edit File for file:///C:/Code/DMF/intellijTest/test.dmf
2025/01/08 13:54:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///C:/Code/DMF/intellijTest/test.dmf","version":42,"diagnostics":[]}}
2025/01/08 13:54:01 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 67 58 47 67 111 100 101 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/11 15:59:50 fileService.go:35: Trace | FileChangeListeners: [0xc000012060]
2025/01/11 15:59:50 util.go:36: Trace | Read Content-Length: 3561 from Content-Length: 3561
2025/01/11 15:59:50 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":16022,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/11 15:59:50 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"referencesProvider":true},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/11 15:59:50 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/11 15:59:50 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/11 15:59:50 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/11 15:59:50 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/11 15:59:50 server.go:99: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/11 15:59:50 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/11 15:59:52 util.go:36: Trace | Read Content-Length: 3117 from Content-Length: 3117
2025/01/11 15:59:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket fÃ¼r Medienverwaltung\n    // Das ist ein neuer Kommentar\n    package media {\n\n        // Basisstruktur fÃ¼r alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            arg double rating;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PLUS(4, 15, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n            UNVERIFED(_);\n        }\n\n        // BenutzerentitÃ¤t\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email, firstName);\n        }\n    }\n}\n"}}}
2025/01/11 15:59:52 server.go:102: INFO  | Handle Method: textDocument/didOpen 
2025/01/11 15:59:52 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf
2025/01/11 15:59:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","version":1,"diagnostics":[]}}
2025/01/11 15:59:52 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 97 102 116 101 114 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/11 15:59:52 util.go:36: Trace | Read Content-Length: 1166 from Content-Length: 1166
2025/01/11 15:59:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar Ã¼ber Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund {\n\n         }\n    }\n}"}}}
2025/01/11 15:59:52 server.go:102: INFO  | Handle Method: textDocument/didOpen 
2025/01/11 15:59:52 fileService.go:88: Trace | Create FileHandle for file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf
2025/01/11 15:59:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/11 15:59:52 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/11 16:03:22 util.go:36: Trace | Read Content-Length: 247 from Content-Length: 247
2025/01/11 16:03:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/references","params":{"context":{"includeDeclaration":true},"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":94,"character":17}}}
2025/01/11 16:03:22 server.go:102: INFO  | Handle Method: textDocument/references 
2025/01/11 16:03:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":[]}
2025/01/11 16:03:22 referenceService.go:91: Trace | Finished References request
2025/01/11 16:03:33 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/11 16:03:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":99,"character":19}}}
2025/01/11 16:03:33 server.go:102: INFO  | Handle Method: textDocument/hover 
2025/01/11 16:03:33 hoverService.go:106: Trace | Start Get File Content
2025/01/11 16:03:33 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/11 16:03:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### [Address](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L68 \"AdressinformationenStruct Address in Package de.library.management.users\") address\n\n\n"},"range":{"start":{"line":99,"character":19},"end":{"line":99,"character":19}}}}
2025/01/11 16:03:33 hoverService.go:136: Trace | Finished Hover with Content: 
#### [Address](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L68 "AdressinformationenStruct Address in Package de.library.management.users") address



2025/01/11 16:03:37 util.go:36: Trace | Read Content-Length: 247 from Content-Length: 247
2025/01/11 16:03:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/references","params":{"context":{"includeDeclaration":true},"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":98,"character":25}}}
2025/01/11 16:03:37 server.go:102: INFO  | Handle Method: textDocument/references 
2025/01/11 16:03:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","range":{"start":{"line":98,"character":12},"end":{"line":98,"character":28}}},{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf","range":{"start":{"line":105,"character":23},"end":{"line":105,"character":28}}}]}
2025/01/11 16:03:37 referenceService.go:91: Trace | Finished References request
2025/01/11 16:03:49 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/11 16:03:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":105,"character":25}}}
2025/01/11 16:03:49 server.go:102: INFO  | Handle Method: textDocument/hover 
2025/01/11 16:03:49 hoverService.go:106: Trace | Start Get File Content
2025/01/11 16:03:49 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/11 16:03:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n#### Identifier von [User](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L95)\n\n---\n* **string [email](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L99)**\n\n* **string [firstName](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L96)**\n\n\n"},"range":{"start":{"line":105,"character":25},"end":{"line":105,"character":25}}}}
2025/01/11 16:03:49 hoverService.go:136: Trace | Finished Hover with Content: 
#### Identifier von [User](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L95)

---
* **string [email](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L99)**

* **string [firstName](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L96)**



2025/01/11 16:03:52 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/11 16:03:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":98,"character":26}}}
2025/01/11 16:03:52 server.go:102: INFO  | Handle Method: textDocument/hover 
2025/01/11 16:03:52 hoverService.go:106: Trace | Start Get File Content
2025/01/11 16:03:52 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/11 16:03:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n#### string email\n\n\n[```identifier(email, firstName);```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L106)\u003cbr\u003e\n\n"},"range":{"start":{"line":98,"character":26},"end":{"line":98,"character":26}}}}
2025/01/11 16:03:52 hoverService.go:136: Trace | Finished Hover with Content: 
#### string email


[```identifier(email, firstName);```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L106)<br>


2025/01/11 16:04:27 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/11 16:04:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":101,"character":34}}}
2025/01/11 16:04:27 server.go:102: INFO  | Handle Method: textDocument/hover 
2025/01/11 16:04:27 hoverService.go:106: Trace | Start Get File Content
2025/01/11 16:04:27 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/11 16:04:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"\n#### [UserStatus](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L87 \"BenutzerstatusEnum UserStatus in Package de.library.management.users\") status\n\n\n"},"range":{"start":{"line":101,"character":34},"end":{"line":101,"character":34}}}}
2025/01/11 16:04:27 hoverService.go:136: Trace | Finished Hover with Content: 
#### [UserStatus](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L87 "BenutzerstatusEnum UserStatus in Package de.library.management.users") status



2025/01/11 16:04:31 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/11 16:04:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":98,"character":25}}}
2025/01/11 16:04:31 server.go:102: INFO  | Handle Method: textDocument/hover 
2025/01/11 16:04:31 hoverService.go:106: Trace | Start Get File Content
2025/01/11 16:04:31 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/11 16:04:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"contents":{"kind":"markdown","value":"\n#### string email\n\n\n[```identifier(email, firstName);```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L106)\u003cbr\u003e\n\n"},"range":{"start":{"line":98,"character":25},"end":{"line":98,"character":25}}}}
2025/01/11 16:04:31 hoverService.go:136: Trace | Finished Hover with Content: 
#### string email


[```identifier(email, firstName);```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L106)<br>


2025/01/11 16:04:56 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/11 16:04:56 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf"},"position":{"line":98,"character":26}}}
2025/01/11 16:04:56 server.go:102: INFO  | Handle Method: textDocument/hover 
2025/01/11 16:04:56 hoverService.go:106: Trace | Start Get File Content
2025/01/11 16:04:56 hoverService.go:112: %!S(string=Trace | )tart Find Node
2025/01/11 16:04:56 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":{"contents":{"kind":"markdown","value":"\n#### string email\n\n\n[```identifier(email, firstName);```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L106)\u003cbr\u003e\n\n"},"range":{"start":{"line":98,"character":26},"end":{"line":98,"character":26}}}}
2025/01/11 16:04:56 hoverService.go:136: Trace | Finished Hover with Content: 
#### string email


[```identifier(email, firstName);```](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-after.dmf#L106)<br>


