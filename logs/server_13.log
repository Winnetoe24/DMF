2025/01/13 13:00:58 fileService.go:35: Trace | FileChangeListeners: [0xc0000120f0]
2025/01/13 13:00:59 util.go:36: Trace | Read Content-Length: 3705 from Content-Length: 3705
2025/01/13 13:00:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":20136,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 13:00:59 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true,"semanticTokensProvider":{"legend":{"tokenTypes":["namespace","type","enum","interface","struct","parameter","variable","property","enumMember","function","comment","keyword","modifier"],"tokenModifiers":["declaration","definition","readonly","deprecated","documentation"]},"full":true}},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 13:00:59 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/13 13:00:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/13 13:00:59 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 13:00:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 13:00:59 server.go:107: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 13:00:59 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 13:00:59 util.go:36: Trace | Read Content-Length: 68670 from Content-Length: 68670
2025/01/13 13:00:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"smart_city_management\" version 1.0.0\n\npackage de.smart.city {\n\n    // Core infrastructure management\n    package infrastructure {\n\n        struct GeoLocation {\n            arg double latitude;\n            arg double longitude;\n            arg double altitude;\n            arg string addressString;\n            func double calculateDistance(GeoLocation other);\n        }\n\n        enum AssetStatus {\n            OPERATIONAL(_);\n            MAINTENANCE_REQUIRED(_);\n            UNDER_REPAIR(_);\n            DECOMMISSIONED(_);\n            CRITICAL(_);\n        }\n\n        enum MaintenancePriority {\n            arg int level;\n            arg string description;\n            EMERGENCY(_, 1, \"Immediate action required\");\n            HIGH(_, 2, \"Address within 24 hours\");\n            MEDIUM(_, 3, \"Address within 1 week\");\n            LOW(_, 4, \"Schedule during routine maintenance\");\n        }\n\n        entity Asset {\n            arg string assetId;\n            arg string name;\n            ref .GeoLocation location;\n            ref .AssetStatus status;\n            arg date installationDate;\n            arg date lastMaintenanceDate;\n            arg double acquisitionCost;\n            arg int expectedLifespanYears;\n\n            identifier(assetId);\n        }\n    }\n\n    // Transportation system management\n    package transportation {\n\n        enum VehicleType {\n            BUS(_);\n            TRAM(_);\n            SUBWAY(_);\n            MUNICIPAL_VEHICLE(_);\n            EMERGENCY_VEHICLE(_);\n        }\n\n        enum RouteStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            PLANNED(_);\n            CANCELED(_);\n        }\n\n        struct RouteSegment {\n            ref ..infrastructure.GeoLocation startPoint;\n            ref ..infrastructure.GeoLocation endPoint;\n            arg double distance;\n            arg int estimatedTimeMinutes;\n            func double calculateCongestion();\n        }\n\n        entity TransportRoute {\n            arg string routeId;\n            arg string routeName;\n            ref .RouteStatus status;\n            ref .RouteSegment[] segments;\n            arg time firstDepartureTime;\n            arg time lastDepartureTime;\n            arg int frequencyMinutes;\n\n            identifier(routeId);\n        }\n\n        entity Vehicle extends ..infrastructure.Asset {\n            ref .VehicleType type;\n            arg string registrationNumber;\n            arg int capacity;\n            arg double currentFuelLevel;\n            arg int currentPassengerCount;\n            ref .TransportRoute currentRoute;\n\n            identifier(registrationNumber);\n        }\n    }\n\n    // Energy grid management\n    package energy {\n\n        enum EnergySource {\n            SOLAR(_);\n            WIND(_);\n            HYDRO(_);\n            BIOMASS(_);\n            GRID(_);\n        }\n\n        enum ConsumptionPattern {\n            arg string pattern;\n            arg double baselineKwh;\n            RESIDENTIAL(1, \"Home usage\", 10.0);\n            COMMERCIAL(2, \"Business usage\", 50.0);\n            INDUSTRIAL(3, \"Factory usage\", 200.0);\n            PUBLIC(4, \"Municipal usage\", 30.0);\n        }\n\n        entity PowerPlant extends ..infrastructure.Asset {\n            ref .EnergySource source;\n            arg double capacity;\n            arg double currentOutput;\n            arg double efficiency;\n            arg boolean isBackupSource;\n\n            identifier(assetId);\n        }\n\n        entity SmartMeter {\n            arg string meterId;\n            ref .ConsumptionPattern pattern;\n            arg double currentReading;\n            arg double peakDemand;\n            arg datetime lastReadingTime;\n            arg boolean isOnline;\n\n            identifier(meterId);\n        }\n    }\n\n    // Water management system\n    package water {\n\n        enum WaterQuality {\n            arg int level;\n            arg string description;\n            EXCELLENT(_, 1, \"Exceeds standards\");\n            GOOD(_, 2, \"Meets standards\");\n            FAIR(_, 3, \"Requires monitoring\");\n            POOR(_, 4, \"Requires action\");\n            CRITICAL(_, 5, \"Immediate action needed\");\n        }\n\n        entity WaterSource extends ..infrastructure.Asset {\n            arg double capacity;\n            arg double currentLevel;\n            ref .WaterQuality quality;\n            arg double flowRate;\n            arg boolean isActive;\n\n            identifier(assetId);\n        }\n\n        entity WaterTreatmentPlant extends ..infrastructure.Asset {\n            arg double processingCapacity;\n            arg double currentThroughput;\n            arg int treatmentStages;\n            arg boolean isOperating;\n\n            identifier(assetId);\n        }\n    }\n\n    // Waste management\n    package waste {\n\n        enum WasteType {\n            ORGANIC(_);\n            RECYCLABLE(_);\n            HAZARDOUS(_);\n            ELECTRONIC(_);\n            CONSTRUCTION(_);\n        }\n\n        entity WasteCollection {\n            arg string collectionId;\n            ref .WasteType type;\n            ref ..infrastructure.GeoLocation location;\n            arg datetime scheduledTime;\n            arg double estimatedVolume;\n            arg boolean isCompleted;\n\n            identifier(collectionId);\n        }\n\n        entity RecyclingFacility extends ..infrastructure.Asset {\n            ref .WasteType[] acceptedTypes;\n            arg double processingCapacity;\n            arg double currentStorage;\n            arg boolean isAcceptingWaste;\n\n            identifier(assetId);\n        }\n    }\n\n    // Environmental monitoring\n    package environment {\n\n        enum PollutantType {\n            CO_TWO(_);\n            NOX(_);\n            PM_TEN(_);\n            PM_TWENTY_FIVE(_);\n            SO_TWO(_);\n        }\n\n        struct AirQualityReading {\n            ref .PollutantType pollutant;\n            arg double concentration;\n            arg datetime timestamp;\n            arg boolean exceedsLimit;\n            func boolean requiresAlert();\n        }\n\n        entity MonitoringStation extends ..infrastructure.Asset {\n            arg string stationId;\n            ref .AirQualityReading[] readings;\n            arg boolean isCalibrated;\n            arg date lastCalibrationDate;\n\n            identifier(stationId);\n        }\n    }\n\n    // Emergency services management\n    package emergency {\n\n        enum EmergencyType {\n            FIRE(_);\n            MEDICAL(_);\n            POLICE(_);\n            DISASTER(_);\n            TRAFFIC(_);\n        }\n\n        enum ResponsePriority {\n            arg int code;\n            CRITICAL(1, 1);\n            HIGH(2, 2);\n            MEDIUM(3, 3);\n            LOW(4, 4);\n        }\n\n        entity EmergencyIncident {\n            arg string incidentId;\n            ref .EmergencyType type;\n            ref .ResponsePriority priority;\n            ref ..infrastructure.GeoLocation location;\n            arg datetime reportedTime;\n            arg datetime responseTime;\n            arg boolean isActive;\n\n            identifier(incidentId);\n        }\n\n        entity EmergencyTeam {\n            arg string teamId;\n            ref .EmergencyType specialty;\n            arg int memberCount;\n            ref ..infrastructure.GeoLocation currentLocation;\n            arg boolean isAvailable;\n\n            identifier(teamId);\n        }\n    }\n\n    // Smart building management\n    package buildings {\n\n        enum BuildingType {\n            RESIDENTIAL(_);\n            COMMERCIAL(_);\n            INDUSTRIAL(_);\n            GOVERNMENT(_);\n            MIXED_USE(_);\n        }\n\n        enum SecurityLevel {\n            arg int clearance;\n            HIGH(1, 1);\n            MEDIUM(2, 2);\n            LOW(3, 3);\n            PUBLIC(4, 4);\n        }\n\n        entity Building extends ..infrastructure.Asset {\n            ref .BuildingType type;\n            arg int floors;\n            arg double totalArea;\n            arg int occupancy;\n            ref .SecurityLevel securityLevel;\n            arg boolean isSmartEnabled;\n\n            identifier(assetId);\n        }\n\n        entity SmartDevice {\n            arg string deviceId;\n            ref Building building;\n            arg string deviceType;\n            arg boolean isOnline;\n            arg datetime lastPing;\n            arg string firmwareVersion;\n\n            identifier(deviceId);\n        }\n    }\n\n    // Citizen services\n    package citizens {\n\n        enum ServiceType {\n            ADMINISTRATIVE(_);\n            HEALTH(_);\n            EDUCATION(_);\n            RECREATION(_);\n            SOCIAL(_);\n        }\n\n        entity Citizen {\n            arg string citizenId;\n            arg string firstName;\n            arg string lastName;\n            ref ..infrastructure.GeoLocation residence;\n            arg date dateOfBirth;\n            arg string email;\n            arg string phone;\n\n            identifier(citizenId);\n        }\n\n        entity ServiceRequest {\n            arg string requestId;\n            ref .ServiceType type;\n            ref Citizen requester;\n            arg datetime submissionTime;\n            arg string status;\n            arg string description;\n\n            identifier(requestId);\n        }\n    }\n\n    // Data analytics and reporting\n    package analytics {\n\n        enum MetricType {\n            ENVIRONMENTAL(_);\n            TRAFFIC(_);\n            ENERGY(_);\n            SAFETY(_);\n            EFFICIENCY(_);\n        }\n\n        struct AnalyticsReport {\n            arg string reportId;\n            ref .MetricType type;\n            arg datetime generationTime;\n            arg string format;\n            arg boolean isPublic;\n            func void generatePDF();\n        }\n\n        entity DataPoint {\n            arg string dataId;\n            ref .MetricType type;\n            arg double value;\n            arg datetime timestamp;\n            arg string source;\n            arg boolean isVerified;\n\n            identifier(dataId);\n        }\n    }\n\n     // Healthcare management\n    package healthcare {\n            enum FacilityType {\n                HOSPITAL(_);\n                CLINIC(_);\n                PHARMACY(_);\n                LABORATORY(_);\n                NURSING_HOME(_);\n            }\n\n            enum MedicalSpecialty {\n                GENERAL_MEDICINE(_);\n                EMERGENCY(_);\n                PEDIATRICS(_);\n                SURGERY(_);\n                CARDIOLOGY(_);\n            }\n\n            struct PatientHistory {\n                arg string patientId;\n                arg datetime visitDate;\n                arg string diagnosis;\n                arg string treatment;\n                arg string notes;\n                func boolean isUrgent();\n            }\n\n            entity HealthcareFacility extends ..infrastructure.Asset {\n                ref .FacilityType type;\n                arg int bedCapacity;\n                arg int currentOccupancy;\n                arg boolean hasEmergencyUnit;\n                ref .MedicalSpecialty[] specialties;\n\n                identifier(assetId);\n            }\n\n            entity MedicalEquipment extends ..infrastructure.Asset {\n                arg string equipmentType;\n                arg string manufacturer;\n                arg date warrantyExpiry;\n                arg int hoursInUse;\n                arg boolean requiresCalibration;\n\n                identifier(assetId);\n            }\n        }\n\n    // Education system\n    package education {\n        enum InstitutionType {\n            PRIMARY_SCHOOL(_);\n            SECONDARY_SCHOOL(_);\n            UNIVERSITY(_);\n            VOCATIONAL(_);\n            LIBRARY(_);\n        }\n\n        enum CourseLevel {\n            BEGINNER(_);\n            INTERMEDIATE(_);\n            ADVANCED(_);\n            EXPERT(_);\n        }\n\n        entity EducationalInstitution extends ..infrastructure.Asset {\n            ref .InstitutionType type;\n            arg int studentCapacity;\n            arg int staffCount;\n            arg boolean isPublic;\n            arg string accreditationStatus;\n\n            identifier(assetId);\n        }\n\n        entity Course {\n            arg string courseId;\n            ref .CourseLevel level;\n            arg string title;\n            arg int credits;\n            arg int maxEnrollment;\n            arg boolean isOnline;\n\n            identifier(courseId);\n        }\n    }\n\n    // Smart agriculture\n    package agriculture {\n        enum CropType {\n            GRAIN(_);\n            VEGETABLE(_);\n            FRUIT(_);\n            FLOWER(_);\n            HERB(_);\n        }\n\n        enum IrrigationType {\n            DRIP(_);\n            SPRINKLER(_);\n            FLOOD(_);\n            MANUAL(_);\n        }\n\n        entity Farm extends ..infrastructure.Asset {\n            ref .CropType[] crops;\n            arg double area;\n            ref .IrrigationType irrigationType;\n            arg boolean isOrganic;\n            arg date lastHarvestDate;\n\n            identifier(assetId);\n        }\n\n        entity Sensor extends ..infrastructure.Asset {\n            arg string sensorType;\n            arg double readingValue;\n            arg string unit;\n            arg datetime lastReading;\n            arg boolean needsCalibration;\n\n            identifier(assetId);\n        }\n    }\n\n    // Tourism management\n    package tourism {\n        enum AttractionType {\n            HISTORICAL(_);\n            CULTURAL(_);\n            NATURAL(_);\n            RECREATIONAL(_);\n            COMMERCIAL(_);\n        }\n\n        enum SeasonType {\n            PEAK(_);\n            SHOULDER(_);\n            OFF_PEAK(_);\n            SPECIAL(_);\n        }\n\n        entity TouristAttraction extends ..infrastructure.Asset {\n            ref .AttractionType type;\n            arg int dailyVisitorCapacity;\n            arg double entryFee;\n            arg boolean isAccessible;\n            arg time[] openingHours;\n\n            identifier(assetId);\n        }\n\n        entity Event {\n            arg string eventId;\n            ref .SeasonType season;\n            arg string name;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg int expectedAttendance;\n\n            identifier(eventId);\n        }\n    }\n\n    // Smart parking\n    package parking {\n        enum ParkingType {\n            STREET(_);\n            GARAGE(_);\n            LOT(_);\n            PRIVATE(_);\n            SPECIAL(_);\n        }\n\n        enum VehicleSize {\n            COMPACT(_);\n            STANDARD(_);\n            LARGE(_);\n            MOTORCYCLE(_);\n            HANDICAP(_);\n        }\n\n        entity ParkingFacility extends ..infrastructure.Asset {\n            ref .ParkingType type;\n            arg int totalSpaces;\n            arg int availableSpaces;\n            arg double hourlyRate;\n            arg boolean hasChargingStations;\n\n            identifier(assetId);\n        }\n\n        entity ParkingTransaction {\n            arg string transactionId;\n            ref .VehicleSize vehicleSize;\n            arg datetime entryTime;\n            arg datetime exitTime;\n            arg double amount;\n            arg boolean isPaid;\n\n            identifier(transactionId);\n        }\n    }\n\n    // Weather monitoring\n    package weather {\n        enum WeatherCondition {\n            CLEAR(_);\n            CLOUDY(_);\n            RAIN(_);\n            SNOW(_);\n            STORM(_);\n        }\n\n        enum AlertLevel {\n            arg string description;\n            SEVERE(1, \"Immediate action required\");\n            WARNING(2, \"Be prepared\");\n            WATCH(3, \"Be aware\");\n            ADVISORY(4, \"For information\");\n        }\n\n        entity WeatherStation extends ..infrastructure.Asset {\n            arg double temperature;\n            arg double humidity;\n            arg double windSpeed;\n            arg double precipitation;\n            ref .WeatherCondition condition;\n\n            identifier(assetId);\n        }\n\n        entity WeatherAlert {\n            arg string alertId;\n            ref .AlertLevel level;\n            arg string message;\n            arg datetime issueTime;\n            arg datetime expiryTime;\n            arg boolean isActive;\n\n            identifier(alertId);\n        }\n    }\n\n    // Smart grid\n    package smartgrid {\n        enum GridComponent {\n            TRANSFORMER(_);\n            SUBSTATION(_);\n            SWITCHGEAR(_);\n            GENERATOR(_);\n            STORAGE(_);\n        }\n\n        enum LoadProfile {\n            arg double baseLoad;\n            RESIDENTIAL(1, 5.0);\n            COMMERCIAL(2, 20.0);\n            INDUSTRIAL(3, 100.0);\n            MUNICIPAL(4, 50.0);\n        }\n\n        entity GridNode extends ..infrastructure.Asset {\n            ref .GridComponent type;\n            arg double voltage;\n            arg double current;\n            ref .LoadProfile profile;\n            arg boolean isRedundant;\n\n            identifier(assetId);\n        }\n\n        entity PowerFlow {\n            arg string flowId;\n            ref GridNode source;\n            ref GridNode destination;\n            arg double amount;\n            arg datetime timestamp;\n            arg boolean isStable;\n\n            identifier(flowId);\n        }\n    }\n\n    // Urban planning\n    package urbanplanning {\n        enum ZoneType {\n            RESIDENTIAL(_);\n            COMMERCIAL(_);\n            INDUSTRIAL(_);\n            MIXED(_);\n            GREEN_SPACE(_);\n        }\n\n        enum DevelopmentStatus {\n            PROPOSED(_);\n            APPROVED(_);\n            UNDER_CONSTRUCTION(_);\n            COMPLETED(_);\n            SUSPENDED(_);\n        }\n\n        entity Zone extends ..infrastructure.Asset {\n            ref .ZoneType type;\n            arg double area;\n            arg double maxDensity;\n            arg int heightLimit;\n            arg boolean isHistorical;\n\n            identifier(assetId);\n        }\n\n        entity DevelopmentProject {\n            arg string projectId;\n            ref .DevelopmentStatus status;\n            arg string description;\n            arg date startDate;\n            arg date completionDate;\n            arg double budget;\n\n            identifier(projectId);\n        }\n    }\n\n    // Public safety\n    package safety {\n        enum IncidentType {\n            CRIME(_);\n            ACCIDENT(_);\n            FIRE(_);\n            MEDICAL(_);\n            INFRASTRUCTURE(_);\n        }\n\n        enum ResponseUnit {\n            POLICE(_);\n            FIRE(_);\n            AMBULANCE(_);\n            HAZMAT(_);\n            RESCUE(_);\n        }\n\n        entity SafetyIncident {\n            arg string incidentId;\n            ref .IncidentType type;\n            arg datetime reportTime;\n            arg string description;\n            arg boolean requiresEvacuation;\n            ref .ResponseUnit[] requiredUnits;\n\n            identifier(incidentId);\n        }\n\n        entity Evacuation {\n            arg string evacuationId;\n            ref SafetyIncident incident;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg int affectedPopulation;\n            arg boolean isCompleted;\n\n            identifier(evacuationId);\n        }\n    }\n\n    // Communication infrastructure\n    package communication {\n        enum NetworkType {\n            FIBER(_);\n            FIVE_G(_);\n            FOUR_G(_);\n            WIFI(_);\n            EMERGENCY(_);\n        }\n\n        enum Bandwidth {\n            arg int speed;\n            LOW(1, 10);\n            MEDIUM(2, 100);\n            HIGH(3, 1000);\n            ULTRA(4, 10000);\n        }\n\n        entity NetworkNode extends ..infrastructure.Asset {\n            ref .NetworkType type;\n            ref .Bandwidth bandwidth;\n            arg int connectedDevices;\n            arg double uptime;\n            arg boolean isRedundant;\n\n            identifier(assetId);\n        }\n\n        entity DataTransfer {\n            arg string transferId;\n            ref NetworkNode source;\n            ref NetworkNode destination;\n            arg double amount;\n            arg datetime timestamp;\n            arg boolean isEncrypted;\n\n            identifier(transferId);\n        }\n    }\n\n\n    // Cultural facilities management\n    package culture {\n        enum VenueType {\n            MUSEUM(_);\n            THEATER(_);\n            CONCERT_HALL(_);\n            ART_GALLERY(_);\n            AMPHITHEATER(_);\n        }\n\n        enum EventCategory {\n            EXHIBITION(_);\n            PERFORMANCE(_);\n            WORKSHOP(_);\n            SCREENING(_);\n            LECTURE(_);\n        }\n\n        struct TicketInfo {\n            arg double basePrice;\n            arg double discount;\n            arg int availableSeats;\n            arg boolean isRefundable;\n            func double calculateFinalPrice();\n        }\n\n        entity CulturalVenue extends ..infrastructure.Asset {\n            ref .VenueType type;\n            arg int capacity;\n            arg boolean hasAccessibility;\n            arg string[] facilities;\n            arg time[] operatingHours;\n\n            identifier(assetId);\n        }\n\n        entity CulturalEvent {\n            arg string eventId;\n            ref .EventCategory category;\n            ref .TicketInfo ticketing;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string curator;\n\n            identifier(eventId);\n        }\n    }\n\n    // Sports facilities\n    package sports {\n        enum FacilityType {\n            STADIUM(_);\n            GYMNASIUM(_);\n            POOL(_);\n            COURT(_);\n            FIELD(_);\n        }\n\n        enum SportType {\n            FOOTBALL(_);\n            BASKETBALL(_);\n            SWIMMING(_);\n            TENNIS(_);\n            ATHLETICS(_);\n        }\n\n        entity SportsFacility extends ..infrastructure.Asset {\n            ref .FacilityType type;\n            ref .SportType[] supportedSports;\n            arg int spectatorCapacity;\n            arg boolean hasFloodlights;\n            arg boolean isIndoor;\n\n            identifier(assetId);\n        }\n\n        entity Tournament {\n            arg string tournamentId;\n            ref .SportType sport;\n            arg date startDate;\n            arg date endDate;\n            arg int participants;\n            arg string sponsor;\n\n            identifier(tournamentId);\n        }\n    }\n\n    // Waste water management\n    package wastewater {\n        enum TreatmentStage {\n            PRIMARY(_);\n            SECONDARY(_);\n            TERTIARY(_);\n            ADVANCED(_);\n        }\n\n        enum WaterQualityMetric {\n            arg string unit;\n            BOD(1, \"mg/L\");\n            COD(2, \"mg/L\");\n            TSS(3, \"mg/L\");\n            PH(4, \"pH\");\n        }\n\n        entity TreatmentPlant extends ..infrastructure.Asset {\n            ref .TreatmentStage[] stages;\n            arg double dailyCapacity;\n            arg double currentFlow;\n            arg boolean isOperational;\n            arg date lastInspection;\n\n            identifier(assetId);\n        }\n\n        entity QualityTest {\n            arg string testId;\n            ref .WaterQualityMetric metric;\n            arg double value;\n            arg datetime timestamp;\n            arg boolean meetsStandard;\n            arg string analyst;\n\n            identifier(testId);\n        }\n    }\n\n    // Public transit payments\n    package transit_payment {\n        enum PaymentMethod {\n            CARD(_);\n            MOBILE(_);\n            TOKEN(_);\n            CASH(_);\n            SUBSCRIPTION(_);\n        }\n\n        enum FareType {\n            arg double baseRate;\n            SINGLE(1, 2.50);\n            DAY_PASS(2, 8.00);\n            WEEK_PASS(3, 30.00);\n            MONTH_PASS(4, 100.00);\n        }\n\n        entity TransitCard {\n            arg string cardId;\n            ref .PaymentMethod method;\n            ref .FareType fareType;\n            arg double balance;\n            arg date expiryDate;\n            arg boolean isActive;\n\n            identifier(cardId);\n        }\n\n        entity FareTransaction {\n            arg string transactionId;\n            ref TransitCard card;\n            arg datetime timestamp;\n            arg double amount;\n            arg string route;\n            arg boolean isRefunded;\n\n            identifier(transactionId);\n        }\n    }\n\n    // Digital signage\n    package signage {\n        enum SignType {\n            TRAFFIC(_);\n            INFORMATION(_);\n            ADVERTISING(_);\n            EMERGENCY(_);\n            WAYFINDING(_);\n        }\n\n        enum ContentType {\n            TEXT(_);\n            IMAGE(_);\n            VIDEO(_);\n            MIXED(_);\n        }\n\n        entity DigitalSign extends ..infrastructure.Asset {\n            ref .SignType type;\n            ref .ContentType contentType;\n            arg string resolution;\n            arg boolean isInteractive;\n            arg time[] activeHours;\n\n            identifier(assetId);\n        }\n\n        entity SignContent {\n            arg string contentId;\n            ref DigitalSign sign;\n            arg string content;\n            arg datetime startDisplay;\n            arg datetime endDisplay;\n            arg int priority;\n\n            identifier(contentId);\n        }\n    }\n\n    // Noise monitoring\n    package noise {\n        enum NoiseSource {\n            TRAFFIC(_);\n            CONSTRUCTION(_);\n            ENTERTAINMENT(_);\n            INDUSTRIAL(_);\n            URBAN(_);\n        }\n\n        enum NoiseLevel {\n            arg int decibels;\n            LOW(1, 40);\n            MODERATE(2, 60);\n            HIGH(3, 80);\n            DANGEROUS(4, 100);\n        }\n\n        entity NoiseSensor extends ..infrastructure.Asset {\n            ref .NoiseSource sources;\n            ref .NoiseLevel currentLevel;\n            arg double averageReading;\n            arg datetime lastPeak;\n            arg boolean needsCalibration;\n\n            identifier(assetId);\n        }\n\n        entity NoiseComplaint {\n            arg string complaintId;\n            ref .NoiseSource source;\n            arg datetime reportTime;\n            arg string description;\n            arg boolean isResolved;\n            arg string resolution;\n\n            identifier(complaintId);\n        }\n    }\n\n    // Smart lighting\n    package lighting {\n        enum LightType {\n            LED(_);\n            SOLAR(_);\n            HALOGEN(_);\n            SMART(_);\n            EMERGENCY(_);\n        }\n\n        enum BrightnessLevel {\n            arg int percentage;\n            OFF(0, 0);\n            DIM(1, 25);\n            MEDIUM(2, 50);\n            BRIGHT(3, 100);\n        }\n\n        entity StreetLight extends ..infrastructure.Asset {\n            ref .LightType type;\n            ref .BrightnessLevel brightness;\n            arg double energyConsumption;\n            arg boolean hasMotionSensor;\n            arg time[] scheduleOn;\n\n            identifier(assetId);\n        }\n\n        entity LightingZone {\n            arg string zoneId;\n            ref StreetLight[] lights;\n            arg string schedule;\n            arg boolean isDimmed;\n            arg double dailyUsage;\n\n            identifier(zoneId);\n        }\n    }\n\n    // Market management\n    package markets {\n        enum MarketType {\n            FARMERS(_);\n            FLEA(_);\n            FOOD(_);\n            CRAFT(_);\n            NIGHT(_);\n        }\n\n        enum VendorCategory {\n            PRODUCE(_);\n            PREPARED_FOOD(_);\n            CRAFTS(_);\n            SERVICES(_);\n            MIXED(_);\n        }\n\n        entity Market extends ..infrastructure.Asset {\n            ref .MarketType type;\n            arg int stallCapacity;\n            arg string[] operatingDays;\n            arg time openTime;\n            arg time closeTime;\n\n            identifier(assetId);\n        }\n\n        entity Vendor {\n            arg string vendorId;\n            ref .VendorCategory category;\n            ref Market market;\n            arg string products;\n            arg boolean isRegistered;\n            arg date licenseExpiry;\n\n            identifier(vendorId);\n        }\n    }\n\n    // Drone management\n    package drones {\n        enum DroneType {\n            SURVEILLANCE(_);\n            DELIVERY(_);\n            MAINTENANCE(_);\n            EMERGENCY(_);\n            MAPPING(_);\n        }\n\n        enum FlightStatus {\n            GROUNDED(_);\n            FLYING(_);\n            CHARGING(_);\n            MAINTENANCE(_);\n            EMERGENCY(_);\n        }\n\n        entity Drone extends ..infrastructure.Asset {\n            ref .DroneType type;\n            ref .FlightStatus flightStatus;\n            arg double batteryLevel;\n            arg double maxAltitude;\n            arg double range;\n\n            identifier(assetId);\n        }\n\n        entity FlightMission {\n            arg string missionId;\n            ref Drone drone;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string purpose;\n            arg boolean isCompleted;\n\n            identifier(missionId);\n        }\n    }\n\n    // Public furniture\n    package furniture {\n        enum FurnitureType {\n            BENCH(_);\n            BIN(_);\n            SHELTER(_);\n            KIOSK(_);\n            ART(_);\n        }\n\n        enum MaintenanceState {\n            NEW(_);\n            GOOD(_);\n            FAIR(_);\n            POOR(_);\n            REPLACE(_);\n        }\n\n        entity StreetFurniture extends ..infrastructure.Asset {\n            ref .FurnitureType type;\n            ref .MaintenanceState state;\n            arg string material;\n            arg boolean needsRepair;\n\n            identifier(assetId);\n        }\n\n        entity MaintenanceRecord {\n            arg string recordId;\n            ref StreetFurniture furniture;\n            arg date maintenanceDate;\n            arg string work;\n            arg double cost;\n            arg string contractor;\n\n            identifier(recordId);\n        }\n    }\n\n    // Smart restaurant management\n    package restaurants {\n        enum CuisineType {\n            ITALIAN(_);\n            ASIAN(_);\n            AMERICAN(_);\n            MEXICAN(_);\n            FUSION(_);\n        }\n\n        enum FoodSafetyRating {\n            arg string description;\n            A(1, \"Excellent\");\n            B(2, \"Good\");\n            C(3, \"Fair\");\n            D(4, \"Poor\");\n            F(5, \"Failed\");\n        }\n\n        struct MenuSection {\n            arg string name;\n            // TODO []\n            arg string items;\n            // TODO []\n            arg double prices;\n            arg boolean isSpecial;\n            func double getAveragePrice();\n        }\n\n        entity Restaurant extends ..infrastructure.Asset {\n            ref .CuisineType type;\n            ref .FoodSafetyRating rating;\n            arg int seatingCapacity;\n            arg boolean hasDelivery;\n            arg time[] operatingHours;\n\n            identifier(assetId);\n        }\n\n        entity Inspection {\n            arg string inspectionId;\n            ref Restaurant restaurant;\n            arg date inspectionDate;\n            arg string[] violations;\n            arg boolean passed;\n            arg date followupDate;\n\n            identifier(inspectionId);\n        }\n    }\n\n    // Smart retail\n    package retail {\n        enum StoreType {\n            GROCERY(_);\n            CLOTHING(_);\n            ELECTRONICS(_);\n            PHARMACY(_);\n            DEPARTMENT(_);\n        }\n\n        enum CustomerSegment {\n            BUDGET(_);\n            MAINSTREAM(_);\n            PREMIUM(_);\n            LUXURY(_);\n        }\n\n        entity RetailStore extends ..infrastructure.Asset {\n            ref .StoreType type;\n            ref .CustomerSegment segment;\n            arg double floorArea;\n            arg int employeeCount;\n            arg boolean isChainStore;\n\n            identifier(assetId);\n        }\n\n        entity InventoryItem {\n            arg string itemId;\n            ref RetailStore store;\n            arg string name;\n            arg int stockLevel;\n            arg double price;\n            arg boolean isDiscounted;\n\n            identifier(itemId);\n        }\n    }\n\n    // Cemetery management\n    package cemetery {\n        enum PlotType {\n            SINGLE(_);\n            FAMILY(_);\n            MAUSOLEUM(_);\n            COLUMBARIUM(_);\n            MEMORIAL(_);\n        }\n\n        enum MaintenanceSchedule {\n            WEEKLY(_);\n            MONTHLY(_);\n            QUARTERLY(_);\n            ANNUAL(_);\n            AS_NEEDED(_);\n        }\n\n        entity Cemetery extends ..infrastructure.Asset {\n            ref .PlotType[] availableTypes;\n            arg double totalArea;\n            arg int totalPlots;\n            arg int availablePlots;\n            arg boolean hasChapel;\n\n            identifier(assetId);\n        }\n\n        entity Plot {\n            arg string plotId;\n            ref .PlotType type;\n            ref .MaintenanceSchedule schedule;\n            arg date lastMaintenance;\n            arg boolean isOccupied;\n            arg string owner;\n\n            identifier(plotId);\n        }\n    }\n\n    // Smart postal service\n    package postal {\n        enum MailType {\n            LETTER(_);\n            PACKAGE(_);\n            EXPRESS(_);\n            REGISTERED(_);\n            BULK(_);\n        }\n\n        enum DeliveryStatus {\n            RECEIVED(_);\n            SORTING(_);\n            IN_TRANSIT(_);\n            OUT_FOR_DELIVERY(_);\n            DELIVERED(_);\n        }\n\n        entity PostOffice extends ..infrastructure.Asset {\n            arg int counterCount;\n            arg int staffCount;\n            arg boolean hasAutomation;\n            arg time[] serviceHours;\n            arg double storageCapacity;\n\n            identifier(assetId);\n        }\n\n        entity Shipment {\n            arg string trackingId;\n            ref .MailType type;\n            ref .DeliveryStatus status;\n            arg datetime receivedTime;\n            arg datetime estimatedDelivery;\n            arg boolean isInsured;\n\n            identifier(trackingId);\n        }\n    }\n\n    // Public art\n    package public_art {\n        enum ArtType {\n            SCULPTURE(_);\n            MURAL(_);\n            INSTALLATION(_);\n            INTERACTIVE(_);\n            TEMPORARY(_);\n        }\n\n        enum ArtistType {\n            LOCAL(_);\n            NATIONAL(_);\n            INTERNATIONAL(_);\n            STUDENT(_);\n            COLLECTIVE(_);\n        }\n\n        entity Artwork extends ..infrastructure.Asset {\n            ref .ArtType type;\n            ref .ArtistType artistType;\n            arg boolean requiresRestoration;\n            arg string materials;\n\n            identifier(assetId);\n        }\n\n        entity ArtEvent {\n            arg string eventId;\n            ref Artwork artwork;\n            arg string eventType;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg int attendees;\n\n            identifier(eventId);\n        }\n    }\n\n    // Smart elevators\n    package elevators {\n        enum ElevatorType {\n            PASSENGER(_);\n            FREIGHT(_);\n            SERVICE(_);\n            PANORAMIC(_);\n            EMERGENCY(_);\n        }\n\n        enum OperationalStatus {\n            OPERATIONAL(_);\n            MAINTENANCE(_);\n            OUT_OF_SERVICE(_);\n            INSPECTION(_);\n            EMERGENCY(_);\n        }\n\n        entity Elevator extends ..infrastructure.Asset {\n            ref .ElevatorType type;\n            ref .OperationalStatus operationalStatus;\n            arg int capacity;\n            arg int currentFloor;\n            arg int totalFloors;\n\n            identifier(assetId);\n        }\n\n        entity MaintenanceLog {\n            arg string logId;\n            ref Elevator elevator;\n            arg datetime serviceTime;\n            arg string technician;\n            arg string work;\n            arg boolean resolved;\n\n            identifier(logId);\n        }\n    }\n\n    // Climate action\n    package climate {\n        enum EmissionSource {\n            TRANSPORT(_);\n            BUILDINGS(_);\n            INDUSTRY(_);\n            WASTE(_);\n            ENERGY(_);\n        }\n\n        enum MitigationStrategy {\n            REDUCTION(_);\n            OFFSET(_);\n            ADAPTATION(_);\n            PREVENTION(_);\n            INNOVATION(_);\n        }\n\n        entity EmissionReport {\n            arg string reportId;\n            ref .EmissionSource source;\n            arg double amount;\n            arg string unit;\n            arg date measurementDate;\n            arg boolean verified;\n\n            identifier(reportId);\n        }\n\n        entity ClimateProject {\n            arg string projectId;\n            ref .MitigationStrategy strategy;\n            arg string description;\n            arg date startDate;\n            arg double budget;\n            arg boolean isActive;\n\n            identifier(projectId);\n        }\n    }\n\n    // Snow removal\n    package snow_removal {\n        enum PriorityLevel {\n            EMERGENCY(_);\n            PRIMARY(_);\n            SECONDARY(_);\n            RESIDENTIAL(_);\n            SIDEWALK(_);\n        }\n\n        enum TreatmentType {\n            PLOW(_);\n            SALT(_);\n            SAND(_);\n            CHEMICAL(_);\n            MANUAL(_);\n        }\n\n        entity SnowRoute {\n            arg string routeId;\n            ref .PriorityLevel priority;\n            arg double length;\n            arg int estimatedTime;\n            arg boolean isCleared;\n            arg datetime lastCleared;\n\n            identifier(routeId);\n        }\n\n        entity TreatmentOperation {\n            arg string operationId;\n            ref .TreatmentType type;\n            ref SnowRoute route;\n            arg datetime startTime;\n            arg datetime completionTime;\n            arg double materialUsed;\n\n            identifier(operationId);\n        }\n    }\n\n    // Urban wildlife\n    package wildlife {\n        enum SpeciesType {\n            BIRD(_);\n            MAMMAL(_);\n            REPTILE(_);\n            AMPHIBIAN(_);\n            INSECT(_);\n        }\n\n        enum HabitatType {\n            PARK(_);\n            WATERWAY(_);\n            URBAN(_);\n            PROTECTED(_);\n            CORRIDOR(_);\n        }\n\n        entity WildlifeZone extends ..infrastructure.Asset {\n            ref .HabitatType type;\n            arg double area;\n            ref .SpeciesType[] presentSpecies;\n            arg boolean isProtected;\n            arg date lastSurvey;\n\n            identifier(assetId);\n        }\n\n        entity WildlifeIncident {\n            arg string incidentId;\n            ref .SpeciesType species;\n            arg datetime reportTime;\n            arg string description;\n            arg boolean requiresAction;\n            arg string resolution;\n\n            identifier(incidentId);\n        }\n    }\n\n    // Public bathrooms\n    package bathrooms {\n        enum BathroomType {\n            PERMANENT(_);\n            PORTABLE(_);\n            AUTOMATED(_);\n            ACCESSIBLE(_);\n            FAMILY(_);\n        }\n\n        enum CleaningStatus {\n            CLEAN(_);\n            NEEDS_CLEANING(_);\n            IN_PROGRESS(_);\n            OUT_OF_SERVICE(_);\n            EMERGENCY(_);\n        }\n\n        entity PublicBathroom extends ..infrastructure.Asset {\n            ref .BathroomType type;\n            ref .CleaningStatus cleaningStatus;\n            arg boolean isOccupied;\n            arg datetime lastCleaning;\n            arg boolean hasChangingTable;\n\n            identifier(assetId);\n        }\n\n        entity MaintenanceTicket {\n            arg string ticketId;\n            ref PublicBathroom bathroom;\n            arg string issue;\n            arg datetime reportTime;\n            arg boolean isUrgent;\n            arg boolean resolved;\n\n            identifier(ticketId);\n        }\n    }\n\n    // Smart Manufacturing Hub Management\n    package manufacturing {\n        enum ProductionLineType {\n            ASSEMBLY(_);\n            PACKAGING(_);\n            TESTING(_);\n            MACHINING(_);\n            FINISHING(_);\n            CHEMICAL_PROCESSING(_);\n            FOOD_PROCESSING(_);\n            ELECTRONICS(_);\n            AUTOMOTIVE(_);\n            PHARMACEUTICAL(_);\n        }\n\n        enum QualityStandard {\n            arg string code;\n            arg int level;\n            ISO_NINE_THOUSAND_ONE(1, \"ISO-9001\", 1);\n            ISO_FOURTEEN_THOUSAND_ONE(2, \"ISO-14001\", 1);\n            GMP(3, \"GMP\", 2);\n            HACCP(4, \"HACCP\", 2);\n            SIX_SIGMA(5, \"6σ\", 3);\n        }\n\n        enum MachineStatus {\n            RUNNING(_);\n            IDLE(_);\n            MAINTENANCE(_);\n            ERROR(_);\n            OFFLINE(_);\n            CALIBRATING(_);\n            WARMING_UP(_);\n            COOLING_DOWN(_);\n            EMERGENCY_STOP(_);\n            STANDBY(_);\n        }\n\n        struct ProductionMetrics {\n            arg int targetOutput;\n            arg int actualOutput;\n            arg double efficiency;\n            arg int defectRate;\n            arg double energyConsumption;\n            arg double materialWaste;\n            func double calculateOEE();\n            func boolean isOnTarget();\n            func double getVariance();\n        }\n\n        struct MaintenanceSchedule {\n            arg date lastMaintenance;\n            arg date nextMaintenance;\n            arg int frequency;\n            // TODO []\n            arg string tasks;\n            arg string responsible;\n            func boolean isOverdue();\n        }\n\n        entity ManufacturingPlant extends ..infrastructure.Asset {\n            ref .ProductionLineType[] productionTypes;\n            ref .QualityStandard[] certifications;\n            arg int employeeCount;\n            arg double productionCapacity;\n            arg boolean isTwentyFourSeven;\n            arg string[] safetyProtocols;\n            arg double totalArea;\n            arg int shiftCount;\n\n            identifier(assetId);\n        }\n\n        entity ProductionLine {\n            arg string lineId;\n            ref .ProductionLineType type;\n            ref .MachineStatus status;\n            ref .ProductionMetrics metrics;\n            arg int workerCount;\n            arg double outputRate;\n            arg string currentProduct;\n            arg datetime lastStartup;\n\n            identifier(lineId);\n        }\n\n        entity Machine {\n            arg string machineId;\n            ref .MachineStatus status;\n            ref .MaintenanceSchedule maintenance;\n            arg string manufacturer;\n            arg string model;\n            arg date installationDate;\n            arg double powerConsumption;\n            arg string[] capabilities;\n\n            identifier(machineId);\n        }\n\n        entity QualityCheck {\n            arg string checkId;\n            ref ProductionLine line;\n            arg datetime timestamp;\n            arg string inspector;\n            arg string[] parameters;\n            arg boolean passed;\n            arg string[] defects;\n            arg string action;\n\n            identifier(checkId);\n        }\n\n        entity MaterialInventory {\n            arg string inventoryId;\n            arg string materialType;\n            arg double quantity;\n            arg string unit;\n            arg date expiryDate;\n            arg string supplier;\n            arg string storageLocation;\n            arg boolean hazardous;\n\n            identifier(inventoryId);\n        }\n\n    }\n\n    // Advanced Healthcare Management\n    package healthcare_extended {\n        enum MedicalDepartment {\n            EMERGENCY(_);\n            SURGERY(_);\n            PEDIATRICS(_);\n            CARDIOLOGY(_);\n            NEUROLOGY(_);\n            ORTHOPEDICS(_);\n            ONCOLOGY(_);\n            RADIOLOGY(_);\n            ICU(_);\n            PHARMACY(_);\n        }\n\n        enum PatientStatus {\n            ADMITTED(_);\n            OUTPATIENT(_);\n            CRITICAL(_);\n            STABLE(_);\n            DISCHARGED(_);\n            TRANSFERRED(_);\n            QUARANTINE(_);\n            OBSERVATION(_);\n            RECOVERY(_);\n            EMERGENCY(_);\n        }\n\n        enum TreatmentType {\n            MEDICATION(_);\n            SURGERY(_);\n            THERAPY(_);\n            DIAGNOSTIC(_);\n            PREVENTIVE(_);\n            EMERGENCY(_);\n            PALLIATIVE(_);\n            REHABILITATION(_);\n            ALTERNATIVE(_);\n            EXPERIMENTAL(_);\n        }\n\n        struct VitalSigns {\n            arg double temperature;\n            arg int heartRate;\n            arg int bloodPressureSystolic;\n            arg int bloodPressureDiastolic;\n            arg int respiratoryRate;\n            arg double oxygenSaturation;\n            func boolean isNormal();\n            func string getStatus();\n        }\n\n        entity Patient {\n            arg string patientId;\n            ref .PatientStatus status;\n            ref .MedicalDepartment department;\n            ref .VitalSigns vitals;\n            arg string[] allergies;\n            arg string[] medications;\n            arg string bloodType;\n            arg date admissionDate;\n\n            identifier(patientId);\n        }\n\n        entity Treatment {\n            arg string treatmentId;\n            ref .TreatmentType type;\n            ref Patient patient;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string provider;\n            arg string notes;\n            arg boolean completed;\n\n            identifier(treatmentId);\n        }\n\n    }\n\n    // Smart Education Extended\n    package education_extended {\n        enum CourseType {\n            LECTURE(_);\n            SEMINAR(_);\n            LABORATORY(_);\n            WORKSHOP(_);\n            ONLINE(_);\n            HYBRID(_);\n            FIELD_WORK(_);\n            RESEARCH(_);\n            PRACTICUM(_);\n            THESIS(_);\n        }\n    }\n\n    // Smart Library Management\n    package library {\n        enum LibraryResourceType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIOBOOK(_);\n            JOURNAL(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n            MULTIMEDIA(_);\n            RESEARCH_PAPER(_);\n            ARCHIVE(_);\n            SPECIAL_COLLECTION(_);\n        }\n\n        enum MembershipLevel {\n            arg int maxBorrows;\n            arg int durationDays;\n            BASIC(1, 3, 14);\n            STANDARD(2, 5, 21);\n            PREMIUM(3, 10, 30);\n            RESEARCHER(4, 15, 45);\n            INSTITUTIONAL(5, 20, 60);\n        }\n\n        struct LoanPolicy {\n            arg int maxRenewals;\n            arg double lateFeePerDay;\n            arg int gracePeriod;\n            arg boolean allowsReservation;\n            func double calculateLateFee(int daysOverdue);\n        }\n\n        entity LibraryBranch extends ..infrastructure.Asset {\n            arg string branchName;\n            arg int capacity;\n            arg int computerStations;\n            arg boolean hasStudyRooms;\n            arg time[] operatingHours;\n            arg string[] facilities;\n\n            identifier(assetId);\n        }\n\n        entity LibraryResource {\n            arg string resourceId;\n            ref .LibraryResourceType type;\n            arg string title;\n            arg string[] authors;\n            arg date publicationDate;\n            arg string publisher;\n            arg string location;\n            arg boolean isAvailable;\n\n            identifier(resourceId);\n        }\n\n        entity LibraryMember {\n            arg string memberId;\n            ref .MembershipLevel level;\n            arg string name;\n            arg string email;\n            arg date joinDate;\n            arg date membershipExpiry;\n            arg boolean isActive;\n            arg int currentBorrows;\n\n            identifier(memberId);\n        }\n\n        entity LoanTransaction {\n            arg string loanId;\n            ref LibraryMember member;\n            ref LibraryResource resource;\n            arg datetime borrowDate;\n            arg datetime dueDate;\n            arg datetime returnDate;\n            arg boolean isOverdue;\n            arg double fineAmount;\n\n            identifier(loanId);\n        }\n\n        entity StudyRoom {\n            arg string roomId;\n            ref LibraryBranch branch;\n            arg int capacity;\n            arg boolean hasProjector;\n            arg boolean hasWhiteboard;\n            arg boolean isOccupied;\n            arg datetime[] reservations;\n\n            identifier(roomId);\n        }\n    }\n\n    // Pet and Animal Management\n    package animal_management {\n        enum PetType {\n            DOG(_);\n            CAT(_);\n            BIRD(_);\n            FISH(_);\n            REPTILE(_);\n            SMALL_MAMMAL(_);\n            EXOTIC(_);\n            FARM_ANIMAL(_);\n            WILDLIFE(_);\n            SERVICE_ANIMAL(_);\n        }\n\n        enum LicenseStatus {\n            ACTIVE(_);\n            EXPIRED(_);\n            PENDING(_);\n            REVOKED(_);\n            TEMPORARY(_);\n        }\n\n        struct VaccinationRecord {\n            arg string vaccineName;\n            arg date administeredDate;\n            arg date expiryDate;\n            arg string veterinarian;\n            func boolean isValid();\n        }\n\n        entity Pet {\n            arg string petId;\n            ref .PetType type;\n            arg string name;\n            arg string breed;\n            arg date birthDate;\n            ref .LicenseStatus licenseStatus;\n            arg string ownerName;\n            arg string microchipId;\n\n            identifier(petId);\n        }\n\n        entity VeterinaryClinic extends ..infrastructure.Asset {\n            arg string clinicName;\n            arg string[] services;\n            arg boolean emergencyTwentyFourHour;\n            arg int capacity;\n            arg string[] specialists;\n            arg boolean hasLaboratory;\n\n            identifier(assetId);\n        }\n\n        entity AnimalControl {\n            arg string caseId;\n            ref .PetType animalType;\n            arg datetime reportTime;\n            arg string incidentType;\n            arg string location;\n            arg boolean resolved;\n            arg string resolution;\n\n            identifier(caseId);\n        }\n\n        entity PetLicense {\n            arg string licenseId;\n            ref Pet pet;\n            ref .LicenseStatus status;\n            arg date issueDate;\n            arg date expiryDate;\n            arg double fee;\n            arg boolean rabiesVaccinated;\n\n            identifier(licenseId);\n        }\n\n        entity AnimalShelter extends ..infrastructure.Asset {\n            arg string shelterName;\n            arg int capacity;\n            arg int currentOccupancy;\n            arg boolean acceptsStrays;\n            arg boolean providesVetCare;\n            arg string[] services;\n\n            identifier(assetId);\n        }\n    }\n\n    // Film and Media Production Management\n    package media_production {\n        enum ProductionType {\n            FILM(_);\n            TV(_);\n            COMMERCIAL(_);\n            DOCUMENTARY(_);\n            MUSIC_VIDEO(_);\n            PHOTOSHOOT(_);\n            LIVE_EVENT(_);\n            STUDENT_FILM(_);\n            NEWS(_);\n            DIGITAL_CONTENT(_);\n        }\n\n        enum PermitStatus {\n            PENDING(_);\n            APPROVED(_);\n            DENIED(_);\n            MODIFIED(_);\n            EXPIRED(_);\n        }\n\n        struct LocationRequirements {\n            arg boolean needsPowerSupply;\n            arg boolean needsParking;\n            arg boolean needsTrafficControl;\n            arg boolean needsSecurityPresence;\n            func boolean checkCompliance();\n        }\n\n        entity FilmPermit {\n            arg string permitId;\n            ref .ProductionType type;\n            ref .PermitStatus status;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string location;\n            arg int crewSize;\n            arg string[] equipment;\n\n            identifier(permitId);\n        }\n\n        entity FilmLocation extends ..infrastructure.Asset {\n            arg string locationName;\n            arg string[] features;\n            arg boolean isIndoor;\n            arg double dailyRate;\n            arg int maxOccupancy;\n            arg boolean hasParking;\n\n            identifier(assetId);\n        }\n\n        entity ProductionCrew {\n            arg string crewId;\n            ref FilmPermit permit;\n            arg string productionCompany;\n            arg string contactPerson;\n            arg string[] vehicles;\n            arg string[] specialNeeds;\n\n            identifier(crewId);\n        }\n\n        entity ImpactNotification {\n            arg string notificationId;\n            ref FilmPermit permit;\n            arg datetime noticeTime;\n            arg string[] affectedAreas;\n            arg string[] mitigation;\n            arg boolean requiresEvacuation;\n\n            identifier(notificationId);\n        }\n\n        entity Equipment {\n            arg string equipmentId;\n            arg string type;\n            arg string specifications;\n            arg boolean requiresPermit;\n            arg double powerRequirement;\n            arg string[] restrictions;\n\n            identifier(equipmentId);\n        }\n    }\n\n    // Scientific Research Facility Management\n    package research_facilities {\n        // Abstract base structures for research management\n        struct ResearchMetadata {\n            // TODO []\n            arg string keywords;\n            // TODO []\n            arg string classifications;\n            arg string methodology;\n            arg date startDate;\n            arg date endDate;\n            func boolean isActive();\n            // TODO [] return\n            func string getCollaborators();\n            func double calculateProgress();\n        }\n\n        struct EquipmentSpecification {\n            arg double precision;\n            arg double accuracy;\n            // TODO []\n            arg string calibrationRequirements;\n            // TODO []\n            arg string operatingConditions;\n            arg datetime lastVerification;\n            func boolean needsCalibration();\n            func boolean meetsStandards();\n        }\n\n        // Detailed categorization enums\n        enum ResearchDomain {\n            arg string field;\n            arg int complexityLevel;\n            QUANTUM_PHYSICS(1, \"Quantum Mechanics\", 5);\n            MOLECULAR_BIOLOGY(2, \"Molecular Studies\", 4);\n            NEUROSCIENCE(3, \"Brain Research\", 5);\n            CLIMATE_SCIENCE(4, \"Climate Studies\", 4);\n            MATERIALS_SCIENCE(5, \"Materials Research\", 3);\n            COMPUTER_SCIENCE(6, \"Computing\", 4);\n            PSYCHOLOGY(7, \"Behavioral Studies\", 3);\n            GENETICS(8, \"Genetic Research\", 5);\n            ROBOTICS(9, \"Robotics Research\", 4);\n            NANOTECHNOLOGY(10, \"Nano Research\", 5);\n        }\n\n        enum ExperimentalPhase {\n            DESIGN(_);\n            SETUP(_);\n            DATA_COLLECTION(_);\n            ANALYSIS(_);\n            VERIFICATION(_);\n            PEER_REVIEW(_);\n            PUBLICATION(_);\n            REPLICATION(_);\n            ARCHIVAL(_);\n            EXTENSION(_);\n        }\n\n        enum DataClassification {\n            arg int securityLevel;\n            arg string retentionPeriod;\n            PUBLIC(1, 0, \"1Y\");\n            CONFIDENTIAL(2, 1, \"5Y\");\n            RESTRICTED(3, 2, \"10Y\");\n            CLASSIFIED(4, 3, \"25Y\");\n            TOP_SECRET(5, 4, \"50Y\");\n        }\n\n        // Core research facility entities\n        entity Laboratory extends ..infrastructure.Asset {\n            // TODO []\n            ref .ResearchDomain domains;\n            ref .DataClassification securityLevel;\n            // TODO []\n            arg string specializations;\n            arg double totalArea;\n            arg int workstationCount;\n            arg boolean hasCleanRoom;\n            // TODO []\n            arg string safetyProtocols;\n            // TODO []\n            arg string certifications;\n\n            identifier(assetId);\n        }\n\n        entity Experiment {\n            arg string experimentId;\n            ref .ExperimentalPhase phase;\n            ref .ResearchMetadata metadata;\n            ref Laboratory location;\n            arg datetime scheduledStart;\n            arg datetime scheduledEnd;\n            // TODO []\n            arg string prerequisites;\n            arg string dependencies;\n            arg boolean hasEthicalApproval;\n\n            identifier(experimentId);\n        }\n\n        entity ResearchEquipment extends ..infrastructure.Asset {\n            ref .EquipmentSpecification specs;\n            arg string manufacturer;\n            arg string model;\n            arg string serialNumber;\n            arg date purchaseDate;\n            arg date warrantyExpiry;\n            arg datetime lastCalibration;\n            arg string[] supportedExperiments;\n            arg boolean requiresSpecialTraining;\n\n            identifier(assetId);\n        }\n\n        // Specialized monitoring and control entities\n        entity EnvironmentalControl {\n            arg string controlId;\n            ref Laboratory lab;\n            arg double temperature;\n            arg double humidity;\n            arg double pressure;\n            arg double[] gasLevels;\n            arg double particleCount;\n            arg string[] alerts;\n            arg boolean withinSpecs;\n\n            identifier(controlId);\n        }\n\n        entity DataCollection {\n            arg string datasetId;\n            ref Experiment experiment;\n            ref .DataClassification classification;\n            arg datetime collectionStart;\n            arg datetime collectionEnd;\n            arg double sampleSize;\n            arg string format;\n            arg string[] validationRules;\n            arg boolean isBackedUp;\n\n            identifier(datasetId);\n        }\n\n        // Research safety and compliance\n        entity SafetyProtocol {\n            arg string protocolId;\n            ref Laboratory lab;\n            arg string hazardType;\n            arg string[] precautions;\n            arg string[] emergencyProcedures;\n            arg date lastReview;\n            arg string[] authorizedPersonnel;\n            arg boolean requiresTraining;\n\n            identifier(protocolId);\n        }\n\n        entity ComplianceAudit {\n            arg string auditId;\n            ref Laboratory lab;\n            ref SafetyProtocol[] protocols;\n            arg date auditDate;\n            arg string auditor;\n            arg string[] findings;\n            arg string[] recommendations;\n            arg boolean passed;\n\n            identifier(auditId);\n        }\n\n        // Scheduling and resource management\n        entity ResourceSchedule {\n            arg string scheduleId;\n            ref ResearchEquipment equipment;\n            ref Experiment[] experiments;\n            arg datetime[] reservedTimes;\n            arg string[] users;\n            arg boolean hasConflicts;\n            // TODO []\n            arg string maintenanceWindows;\n            arg boolean isOptimized;\n\n            identifier(scheduleId);\n        }\n\n        entity MaintenanceLog {\n            arg string logId;\n            ref ResearchEquipment equipment;\n            arg datetime maintenanceTime;\n            arg string technician;\n            arg string[] tasks;\n            arg string[] replacedParts;\n            arg double cost;\n            arg boolean requiresFollowup;\n\n            identifier(logId);\n        }\n\n        // Research collaboration and access control\n        entity AccessCredential {\n            arg string credentialId;\n            ref Laboratory lab;\n            ref .DataClassification clearanceLevel;\n            arg string holderName;\n            arg string[] authorizedAreas;\n            arg datetime validFrom;\n            arg datetime validUntil;\n            arg boolean isActive;\n\n            identifier(credentialId);\n        }\n    }\n\n\n    // Financial Technology Infrastructure\n    package fintech {\n        // Core financial interfaces\n        interface Transactional {\n            func boolean validate();\n            func string generateHash();\n            func boolean verifySignature(string signature);\n            func void logTransaction();\n            func double calculateFees();\n        }\n\n        interface Auditable {\n            // TODO []\n            func string getAuditTrail();\n            func void addAuditEntry(string entry);\n            func boolean isCompliant();\n            func date getLastAuditDate();\n            func string getAuditor();\n        }\n\n        interface Secureable {\n            func boolean encrypt();\n            func boolean decrypt();\n            // TODO []\n            func string getAccessRoles();\n            func boolean hasPermission(string role);\n            func void revokeAccess(string userId);\n        }\n\n        interface RiskAssessable {\n            func int getRiskScore();\n            // TODO []\n            func string getRiskFactors();\n            func boolean isHighRisk();\n            func void updateRiskProfile();\n            // TODO []\n            func string getMitigationStrategies();\n        }\n\n        // Complex financial data structures\n        struct TransactionMetadata implements Auditable, Secureable {\n            arg datetime timestamp;\n            arg string originatorId;\n            arg string beneficiaryId;\n            arg double amount;\n            arg string currency;\n            arg string purpose;\n            func boolean validate();\n        }\n\n        struct RiskProfile implements RiskAssessable {\n            arg int creditScore;\n            arg double defaultProbability;\n            // TODO []\n            arg string riskIndicators;\n            arg date lastAssessment;\n        }\n\n        // Detailed enumerations\n        enum TransactionType {\n            arg string category;\n            arg double feePercentage;\n            PAYMENT(1, \"Payment\", 0.1);\n            TRANSFER(2, \"Transfer\", 0.2);\n            EXCHANGE(3, \"Currency Exchange\", 0.3);\n            INVESTMENT(4, \"Investment\", 0.4);\n            LOAN(5, \"Loan Disbursement\", 0.5);\n        }\n\n        enum SecurityLevel {\n            arg int clearance;\n            arg string protocol;\n            BASIC(1, 1, \"TLS\");\n            ENHANCED(2, 2, \"TLS+2FA\");\n            ADVANCED(3, 3, \"TLS+2FA+Biometric\");\n            MAXIMUM(4, 4, \"TLS+2FA+Biometric+Hardware\");\n        }\n\n        // Core financial entities\n        entity FinancialInstitution extends ..infrastructure.Asset implements Auditable, Secureable {\n            arg string institutionId;\n            arg string[] licenses;\n            ref .SecurityLevel securityLevel;\n            arg string[] supportedCurrencies;\n            arg boolean isActive;\n\n            identifier(institutionId);\n        }\n\n        entity FinancialAccount implements Transactional, Auditable, Secureable {\n            arg string accountId;\n            ref FinancialInstitution institution;\n            arg string accountType;\n            arg double balance;\n            arg string currency;\n            arg boolean isFrozen;\n            arg date openedDate;\n\n            identifier(accountId);\n        }\n\n        entity Transaction implements Transactional, Auditable, RiskAssessable {\n            arg string transactionId;\n            ref .TransactionType type;\n            ref .TransactionMetadata metadata;\n            ref FinancialAccount source;\n            ref FinancialAccount destination;\n            arg boolean isProcessed;\n            arg string status;\n\n            identifier(transactionId);\n        }\n\n        // Specialized monitoring entities\n        entity FraudDetection implements RiskAssessable, Secureable {\n            arg string detectionId;\n            ref Transaction transaction;\n            ref .RiskProfile risk;\n            arg string[] anomalyIndicators;\n            arg boolean requiresReview;\n            arg string resolution;\n\n            identifier(detectionId);\n        }\n\n        entity ComplianceCheck implements Auditable, RiskAssessable {\n            arg string checkId;\n            ref Transaction transaction;\n            arg string[] regulations;\n            arg boolean passedKYC;\n            arg boolean passedAML;\n            arg string[] violations;\n\n            identifier(checkId);\n        }\n\n        // Regulatory reporting\n        entity RegulatoryReport implements Auditable, Secureable {\n            arg string reportId;\n            ref FinancialInstitution institution;\n            arg string reportType;\n            arg date reportingPeriod;\n            arg boolean submitted;\n            arg string[] findings;\n\n            identifier(reportId);\n        }\n\n        // Security infrastructure\n        entity SecurityIncident implements Auditable, RiskAssessable {\n            arg string incidentId;\n            ref .SecurityLevel impactLevel;\n            arg datetime detectionTime;\n            arg string description;\n            arg boolean resolved;\n            arg string[] affectedSystems;\n\n            identifier(incidentId);\n        }\n\n        // Interface implementations for audit logging\n        entity AuditLog implements Auditable {\n            arg string logId;\n            ref Transaction transaction;\n            arg datetime timestamp;\n            arg string action;\n            arg string performedBy;\n            arg string details;\n\n            identifier(logId);\n        }\n\n        // Risk management\n        entity RiskAssessment implements RiskAssessable, Auditable {\n            arg string assessmentId;\n            ref FinancialInstitution institution;\n            ref .RiskProfile profile;\n            arg date assessmentDate;\n            arg string[] findings;\n            arg string[] recommendations;\n\n            identifier(assessmentId);\n        }\n\n        // Complex authentication system\n        entity AuthenticationSystem implements Secureable {\n            arg string systemId;\n            ref .SecurityLevel level;\n            arg string[] supportedMethods;\n            arg string[] activeTokens;\n            arg boolean multiFactorEnabled;\n            arg string[] blockedIPs;\n\n            identifier(systemId);\n        }\n    }\n}"}}}
2025/01/13 13:00:59 server.go:110: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 13:00:59 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf","version":1,"diagnostics":[]}}
2025/01/13 13:00:59 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 114 105 101 115 105 103 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 13:00:59 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 13:00:59 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf"}}}
2025/01/13 13:00:59 server.go:110: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 13:00:59 foldingService.go:218: Trace | Found 84 Comment Ranges
2025/01/13 13:00:59 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":[{"startLine":1094,"startCharacter":54,"endLine":1102,"endCharacter":8},{"startLine":1157,"startCharacter":23,"endLine":1193,"endCharacter":4},{"startLine":1224,"startCharacter":58,"endLine":1232,"endCharacter":8},{"startLine":2093,"startCharacter":26,"endLine":2102,"endCharacter":8},{"startLine":264,"startCharacter":30,"endLine":272,"endCharacter":8},{"startLine":670,"startCharacter":23,"endLine":676,"endCharacter":8},{"startLine":646,"startCharacter":56,"endLine":654,"endCharacter":8},{"startLine":777,"startCharacter":29,"endLine":786,"endCharacter":8},{"startLine":960,"startCharacter":23,"endLine":966,"endCharacter":8},{"startLine":1234,"startCharacter":27,"endLine":1243,"endCharacter":8},{"startLine":1528,"startCharacter":26,"endLine":1534,"endCharacter":8},{"startLine":1644,"startCharacter":34,"endLine":1654,"endCharacter":8},{"startLine":73,"startCharacter":31,"endLine":83,"endCharacter":8},{"startLine":434,"startCharacter":30,"endLine":440,"endCharacter":8},{"startLine":1830,"startCharacter":21,"endLine":1923,"endCharacter":4},{"startLine":616,"startCharacter":29,"endLine":625,"endCharacter":8},{"startLine":919,"startCharacter":28,"endLine":925,"endCharacter":8},{"startLine":999,"startCharacter":26,"endLine":1005,"endCharacter":8},{"startLine":1313,"startCharacter":21,"endLine":1322,"endCharacter":8},{"startLine":1383,"startCharacter":55,"endLine":1390,"endCharacter":8},{"startLine":1473,"startCharacter":31,"endLine":1482,"endCharacter":8},{"startLine":402,"startCharacter":35,"endLine":409,"endCharacter":12},{"startLine":421,"startCharacter":68,"endLine":429,"endCharacter":12},{"startLine":2360,"startCharacter":69,"endLine":2368,"endCharacter":8},{"startLine":2505,"startCharacter":59,"endLine":2514,"endCharacter":8},{"startLine":1078,"startCharacter":25,"endLine":1084,"endCharacter":8},{"startLine":1144,"startCharacter":30,"endLine":1153,"endCharacter":8},{"startLine":1495,"startCharacter":28,"endLine":1501,"endCharacter":8},{"startLine":24,"startCharacter":34,"endLine":31,"endCharacter":8},{"startLine":510,"startCharacter":21,"endLine":546,"endCharacter":4},{"startLine":1158,"startCharacter":28,"endLine":1164,"endCharacter":8},{"startLine":1256,"startCharacter":30,"endLine":1261,"endCharacter":8},{"startLine":1568,"startCharacter":27,"endLine":1574,"endCharacter":8},{"startLine":2331,"startCharacter":29,"endLine":2338,"endCharacter":8},{"startLine":2469,"startCharacter":70,"endLine":2478,"endCharacter":8},{"startLine":328,"startCharacter":24,"endLine":338,"endCharacter":8},{"startLine":905,"startCharacter":28,"endLine":914,"endCharacter":8},{"startLine":183,"startCharacter":32,"endLine":192,"endCharacter":8},{"startLine":1666,"startCharacter":66,"endLine":1677,"endCharacter":8},{"startLine":1353,"startCharacter":25,"endLine":1362,"endCharacter":8},{"startLine":1912,"startCharacter":26,"endLine":1922,"endCharacter":8},{"startLine":1969,"startCharacter":64,"endLine":1978,"endCharacter":8},{"startLine":718,"startCharacter":27,"endLine":724,"endCharacter":8},{"startLine":839,"startCharacter":20,"endLine":876,"endCharacter":4},{"startLine":305,"startCharacter":28,"endLine":314,"endCharacter":8},{"startLine":669,"startCharacter":27,"endLine":706,"endCharacter":4},{"startLine":1134,"startCharacter":53,"endLine":1142,"endCharacter":8},{"startLine":1273,"startCharacter":30,"endLine":1282,"endCharacter":8},{"startLine":1343,"startCharacter":58,"endLine":1351,"endCharacter":8},{"startLine":1692,"startCharacter":24,"endLine":1703,"endCharacter":8},{"startLine":207,"startCharacter":28,"endLine":213,"endCharacter":8},{"startLine":294,"startCharacter":56,"endLine":303,"endCharacter":8},{"startLine":1774,"startCharacter":27,"endLine":1783,"endCharacter":8},{"startLine":2421,"startCharacter":80,"endLine":2431,"endCharacter":8},{"startLine":791,"startCharacter":21,"endLine":836,"endCharacter":4},{"startLine":880,"startCharacter":29,"endLine":885,"endCharacter":8},{"startLine":1055,"startCharacter":59,"endLine":1063,"endCharacter":8},{"startLine":558,"startCharacter":26,"endLine":564,"endCharacter":8},{"startLine":638,"startCharacter":26,"endLine":644,"endCharacter":8},{"startLine":1335,"startCharacter":29,"endLine":1341,"endCharacter":8},{"startLine":194,"startCharacter":65,"endLine":201,"endCharacter":8},{"startLine":606,"startCharacter":62,"endLine":614,"endCharacter":8},{"startLine":1527,"startCharacter":22,"endLine":1564,"endCharacter":4},{"startLine":1608,"startCharacter":33,"endLine":1619,"endCharacter":8},{"startLine":1286,"startCharacter":22,"endLine":1323,"endCharacter":4},{"startLine":1454,"startCharacter":33,"endLine":1460,"endCharacter":8},{"startLine":1798,"startCharacter":26,"endLine":1809,"endCharacter":8},{"startLine":2250,"startCharacter":31,"endLine":2261,"endCharacter":8},{"startLine":2445,"startCharacter":69,"endLine":2454,"endCharacter":8},{"startLine":751,"startCharacter":26,"endLine":757,"endCharacter":8},{"startLine":918,"startCharacter":29,"endLine":956,"endCharacter":4},{"startLine":2370,"startCharacter":54,"endLine":2376,"endCharacter":8},{"startLine":576,"startCharacter":35,"endLine":585,"endCharacter":8},{"startLine":1940,"startCharacter":28,"endLine":1946,"endCharacter":8},{"startLine":108,"startCharacter":33,"endLine":115,"endCharacter":8},{"startLine":127,"startCharacter":27,"endLine":136,"endCharacter":8},{"startLine":278,"startCharacter":27,"endLine":284,"endCharacter":8},{"startLine":968,"startCharacter":26,"endLine":973,"endCharacter":8},{"startLine":2004,"startCharacter":61,"endLine":2013,"endCharacter":8},{"startLine":6,"startCharacter":28,"endLine":45,"endCharacter":4},{"startLine":58,"startCharacter":26,"endLine":63,"endCharacter":8},{"startLine":2481,"startCharacter":46,"endLine":2490,"endCharacter":8},{"startLine":550,"startCharacter":26,"endLine":556,"endCharacter":8},{"startLine":1295,"startCharacter":34,"endLine":1301,"endCharacter":8},{"startLine":1748,"startCharacter":28,"endLine":1759,"endCharacter":8},{"startLine":1956,"startCharacter":20,"endLine":1967,"endCharacter":8},{"startLine":1287,"startCharacter":23,"endLine":1293,"endCharacter":8},{"startLine":1679,"startCharacter":31,"endLine":1690,"endCharacter":8},{"startLine":2399,"startCharacter":101,"endLine":2407,"endCharacter":8},{"startLine":173,"startCharacter":19,"endLine":202,"endCharacter":4},{"startLine":215,"startCharacter":34,"endLine":221,"endCharacter":8},{"startLine":498,"startCharacter":54,"endLine":506,"endCharacter":8},{"startLine":566,"startCharacter":63,"endLine":574,"endCharacter":8},{"startLine":1621,"startCharacter":30,"endLine":1629,"endCharacter":8},{"startLine":142,"startCharacter":27,"endLine":150,"endCharacter":8},{"startLine":473,"startCharacter":23,"endLine":479,"endCharacter":8},{"startLine":696,"startCharacter":35,"endLine":705,"endCharacter":8},{"startLine":927,"startCharacter":23,"endLine":933,"endCharacter":8},{"startLine":1174,"startCharacter":63,"endLine":1181,"endCharacter":8},{"startLine":175,"startCharacter":24,"endLine":181,"endCharacter":8},{"startLine":1118,"startCharacter":24,"endLine":1124,"endCharacter":8},{"startLine":678,"startCharacter":32,"endLine":684,"endCharacter":8},{"startLine":826,"startCharacter":30,"endLine":835,"endCharacter":8},{"startLine":1367,"startCharacter":22,"endLine":1373,"endCharacter":8},{"startLine":1844,"startCharacter":30,"endLine":1852,"endCharacter":8},{"startLine":481,"startCharacter":29,"endLine":486,"endCharacter":8},{"startLine":536,"startCharacter":22,"endLine":545,"endCharacter":8},{"startLine":1196,"startCharacter":25,"endLine":1244,"endCharacter":4},{"startLine":630,"startCharacter":28,"endLine":636,"endCharacter":8},{"startLine":767,"startCharacter":59,"endLine":775,"endCharacter":8},{"startLine":1948,"startCharacter":34,"endLine":1954,"endCharacter":8},{"startLine":1554,"startCharacter":33,"endLine":1563,"endCharacter":8},{"startLine":1831,"startCharacter":34,"endLine":1842,"endCharacter":8},{"startLine":1104,"startCharacter":23,"endLine":1113,"endCharacter":8},{"startLine":1327,"startCharacter":23,"endLine":1333,"endCharacter":8},{"startLine":1414,"startCharacter":32,"endLine":1420,"endCharacter":8},{"startLine":1462,"startCharacter":31,"endLine":1471,"endCharacter":8},{"startLine":1487,"startCharacter":28,"endLine":1493,"endCharacter":8},{"startLine":1927,"startCharacter":22,"endLine":1938,"endCharacter":8},{"startLine":372,"startCharacter":26,"endLine":381,"endCharacter":8},{"startLine":866,"startCharacter":27,"endLine":875,"endCharacter":8},{"startLine":1514,"startCharacter":35,"endLine":1523,"endCharacter":8},{"startLine":2106,"startCharacter":33,"endLine":2317,"endCharacter":4},{"startLine":98,"startCharacter":20,"endLine":137,"endCharacter":4},{"startLine":1567,"startCharacter":23,"endLine":1604,"endCharacter":4},{"startLine":449,"startCharacter":70,"endLine":457,"endCharacter":8},{"startLine":1926,"startCharacter":31,"endLine":2014,"endCharacter":4},{"startLine":205,"startCharacter":25,"endLine":231,"endCharacter":4},{"startLine":252,"startCharacter":34,"endLine":262,"endCharacter":8},{"startLine":946,"startCharacter":32,"endLine":955,"endCharacter":8},{"startLine":1126,"startCharacter":27,"endLine":1132,"endCharacter":8},{"startLine":1183,"startCharacter":34,"endLine":1192,"endCharacter":8},{"startLine":1814,"startCharacter":32,"endLine":1827,"endCharacter":4},{"startLine":2031,"startCharacter":27,"endLine":2037,"endCharacter":8},{"startLine":590,"startCharacter":31,"endLine":596,"endCharacter":8},{"startLine":709,"startCharacter":20,"endLine":747,"endCharacter":4},{"startLine":1486,"startCharacter":26,"endLine":1524,"endCharacter":4},{"startLine":1656,"startCharacter":36,"endLine":1664,"endCharacter":8},{"startLine":1815,"startCharacter":25,"endLine":1826,"endCharacter":8},{"startLine":1873,"startCharacter":32,"endLine":1884,"endCharacter":8},{"startLine":1263,"startCharacter":59,"endLine":1271,"endCharacter":8},{"startLine":1432,"startCharacter":31,"endLine":1441,"endCharacter":8},{"startLine":1446,"startCharacter":29,"endLine":1452,"endCharacter":8},{"startLine":2221,"startCharacter":37,"endLine":2233,"endCharacter":8},{"startLine":759,"startCharacter":24,"endLine":765,"endCharacter":8},{"startLine":1197,"startCharacter":26,"endLine":1203,"endCharacter":8},{"startLine":65,"startCharacter":29,"endLine":71,"endCharacter":8},{"startLine":1734,"startCharacter":33,"endLine":1811,"endCharacter":4},{"startLine":511,"startCharacter":29,"endLine":517,"endCharacter":8},{"startLine":2409,"startCharacter":81,"endLine":2419,"endCharacter":8},{"startLine":223,"startCharacter":65,"endLine":230,"endCharacter":8},{"startLine":386,"startCharacter":31,"endLine":392,"endCharacter":12},{"startLine":1631,"startCharacter":28,"endLine":1642,"endCharacter":8},{"startLine":2163,"startCharacter":33,"endLine":2171,"endCharacter":8},{"startLine":935,"startCharacter":28,"endLine":944,"endCharacter":8},{"startLine":1366,"startCharacter":24,"endLine":1402,"endCharacter":4},{"startLine":1214,"startCharacter":28,"endLine":1222,"endCharacter":8},{"startLine":1607,"startCharacter":27,"endLine":1731,"endCharacter":4},{"startLine":50,"startCharacter":26,"endLine":56,"endCharacter":8},{"startLine":959,"startCharacter":21,"endLine":995,"endCharacter":4},{"startLine":1247,"startCharacter":20,"endLine":1283,"endCharacter":4},{"startLine":1422,"startCharacter":56,"endLine":1430,"endCharacter":8},{"startLine":2018,"startCharacter":29,"endLine":2029,"endCharacter":8},{"startLine":2206,"startCharacter":65,"endLine":2218,"endCharacter":8},{"startLine":33,"startCharacter":22,"endLine":44,"endCharacter":8},{"startLine":1015,"startCharacter":59,"endLine":1023,"endCharacter":8},{"startLine":1025,"startCharacter":31,"endLine":1034,"endCharacter":8},{"startLine":1445,"startCharacter":21,"endLine":1483,"endCharacter":4},{"startLine":1886,"startCharacter":30,"endLine":1897,"endCharacter":8},{"startLine":2071,"startCharacter":31,"endLine":2080,"endCharacter":8},{"startLine":48,"startCharacter":28,"endLine":95,"endCharacter":4},{"startLine":117,"startCharacter":58,"endLine":125,"endCharacter":8},{"startLine":1576,"startCharacter":29,"endLine":1582,"endCharacter":8},{"startLine":2321,"startCharacter":21,"endLine":2515,"endCharacter":4},{"startLine":385,"startCharacter":24,"endLine":430,"endCharacter":8},{"startLine":1039,"startCharacter":24,"endLine":1045,"endCharacter":8},{"startLine":1705,"startCharacter":29,"endLine":1716,"endCharacter":8},{"startLine":1718,"startCharacter":34,"endLine":1729,"endCharacter":8},{"startLine":1761,"startCharacter":28,"endLine":1772,"endCharacter":8},{"startLine":2263,"startCharacter":32,"endLine":2274,"endCharacter":8},{"startLine":353,"startCharacter":23,"endLine":382,"endCharacter":4},{"startLine":808,"startCharacter":27,"endLine":814,"endCharacter":8},{"startLine":726,"startCharacter":31,"endLine":735,"endCharacter":8},{"startLine":2060,"startCharacter":60,"endLine":2069,"endCharacter":8},{"startLine":276,"startCharacter":23,"endLine":315,"endCharacter":4},{"startLine":340,"startCharacter":31,"endLine":349,"endCharacter":8},{"startLine":848,"startCharacter":24,"endLine":854,"endCharacter":8},{"startLine":411,"startCharacter":70,"endLine":419,"endCharacter":12},{"startLine":710,"startCharacter":27,"endLine":716,"endCharacter":8},{"startLine":1303,"startCharacter":56,"endLine":1311,"endCharacter":8},{"startLine":1392,"startCharacter":25,"endLine":1401,"endCharacter":8},{"startLine":3,"startCharacter":23,"endLine":2516,"endCharacter":0},{"startLine":1065,"startCharacter":29,"endLine":1073,"endCharacter":8},{"startLine":1007,"startCharacter":25,"endLine":1013,"endCharacter":8},{"startLine":1047,"startCharacter":30,"endLine":1053,"endCharacter":8},{"startLine":1536,"startCharacter":26,"endLine":1542,"endCharacter":8},{"startLine":2039,"startCharacter":37,"endLine":2045,"endCharacter":8},{"startLine":140,"startCharacter":19,"endLine":170,"endCharacter":4},{"startLine":244,"startCharacter":31,"endLine":250,"endCharacter":8},{"startLine":1594,"startCharacter":34,"endLine":1603,"endCharacter":8},{"startLine":2047,"startCharacter":27,"endLine":2058,"endCharacter":8},{"startLine":2340,"startCharacter":30,"endLine":2347,"endCharacter":8},{"startLine":2379,"startCharacter":30,"endLine":2387,"endCharacter":8},{"startLine":2389,"startCharacter":28,"endLine":2396,"endCharacter":8},{"startLine":100,"startCharacter":27,"endLine":106,"endCharacter":8},{"startLine":985,"startCharacter":28,"endLine":994,"endCharacter":8},{"startLine":856,"startCharacter":62,"endLine":864,"endCharacter":8},{"startLine":1735,"startCharacter":32,"endLine":1746,"endCharacter":8},{"startLine":526,"startCharacter":65,"endLine":534,"endCharacter":8},{"startLine":840,"startCharacter":27,"endLine":846,"endCharacter":8},{"startLine":686,"startCharacter":52,"endLine":694,"endCharacter":8},{"startLine":1077,"startCharacter":21,"endLine":1114,"endCharacter":4},{"startLine":1862,"startCharacter":61,"endLine":1871,"endCharacter":8},{"startLine":286,"startCharacter":28,"endLine":292,"endCharacter":8},{"startLine":656,"startCharacter":26,"endLine":665,"endCharacter":8},{"startLine":589,"startCharacter":21,"endLine":626,"endCharacter":4},{"startLine":1086,"startCharacter":29,"endLine":1092,"endCharacter":8},{"startLine":355,"startCharacter":25,"endLine":361,"endCharacter":8},{"startLine":442,"startCharacter":26,"endLine":447,"endCharacter":8},{"startLine":1405,"startCharacter":23,"endLine":1442,"endCharacter":4},{"startLine":2349,"startCharacter":34,"endLine":2357,"endCharacter":8},{"startLine":152,"startCharacter":59,"endLine":160,"endCharacter":8},{"startLine":320,"startCharacter":26,"endLine":326,"endCharacter":8},{"startLine":2191,"startCharacter":27,"endLine":2204,"endCharacter":8},{"startLine":2277,"startCharacter":33,"endLine":2289,"endCharacter":8},{"startLine":2305,"startCharacter":33,"endLine":2316,"endCharacter":8},{"startLine":816,"startCharacter":61,"endLine":824,"endCharacter":8},{"startLine":975,"startCharacter":59,"endLine":983,"endCharacter":8},{"startLine":85,"startCharacter":55,"endLine":94,"endCharacter":8},{"startLine":750,"startCharacter":27,"endLine":787,"endCharacter":4},{"startLine":1584,"startCharacter":62,"endLine":1592,"endCharacter":8},{"startLine":2108,"startCharacter":33,"endLine":2120,"endCharacter":8},{"startLine":363,"startCharacter":32,"endLine":370,"endCharacter":8},{"startLine":1205,"startCharacter":31,"endLine":1212,"endCharacter":8},{"startLine":2174,"startCharacter":58,"endLine":2189,"endCharacter":8},{"startLine":800,"startCharacter":28,"endLine":806,"endCharacter":8},{"startLine":998,"startCharacter":19,"endLine":1035,"endCharacter":4},{"startLine":2135,"startCharacter":29,"endLine":2148,"endCharacter":8},{"startLine":459,"startCharacter":23,"endLine":468,"endCharacter":8},{"startLine":792,"startCharacter":24,"endLine":798,"endCharacter":8},{"startLine":895,"startCharacter":62,"endLine":903,"endCharacter":8},{"startLine":1899,"startCharacter":32,"endLine":1910,"endCharacter":8},{"startLine":2291,"startCharacter":31,"endLine":2302,"endCharacter":8},{"startLine":2323,"startCharacter":33,"endLine":2329,"endCharacter":8},{"startLine":394,"startCharacter":35,"endLine":400,"endCharacter":12},{"startLine":519,"startCharacter":25,"endLine":524,"endCharacter":8},{"startLine":737,"startCharacter":27,"endLine":746,"endCharacter":8},{"startLine":1375,"startCharacter":25,"endLine":1381,"endCharacter":8},{"startLine":1503,"startCharacter":26,"endLine":1512,"endCharacter":8},{"startLine":8,"startCharacter":28,"endLine":14,"endCharacter":8},{"startLine":629,"startCharacter":23,"endLine":666,"endCharacter":4},{"startLine":1854,"startCharacter":27,"endLine":1860,"endCharacter":8},{"startLine":1992,"startCharacter":27,"endLine":2002,"endCharacter":8},{"startLine":2150,"startCharacter":32,"endLine":2161,"endCharacter":8},{"startLine":318,"startCharacter":22,"endLine":350,"endCharacter":4},{"startLine":472,"startCharacter":25,"endLine":507,"endCharacter":4},{"startLine":598,"startCharacter":25,"endLine":604,"endCharacter":8},{"startLine":2017,"startCharacter":30,"endLine":2103,"endCharacter":4},{"startLine":2493,"startCharacter":68,"endLine":2502,"endCharacter":8},{"startLine":162,"startCharacter":67,"endLine":169,"endCharacter":8},{"startLine":1980,"startCharacter":30,"endLine":1990,"endCharacter":8},{"startLine":1248,"startCharacter":24,"endLine":1254,"endCharacter":8},{"startLine":1038,"startCharacter":22,"endLine":1074,"endCharacter":4},{"startLine":1544,"startCharacter":60,"endLine":1552,"endCharacter":8},{"startLine":2082,"startCharacter":35,"endLine":2091,"endCharacter":8},{"startLine":433,"startCharacter":23,"endLine":469,"endCharacter":4},{"startLine":887,"startCharacter":33,"endLine":893,"endCharacter":8},{"startLine":2235,"startCharacter":31,"endLine":2247,"endCharacter":8},{"startLine":2434,"startCharacter":69,"endLine":2443,"endCharacter":8},{"startLine":2457,"startCharacter":66,"endLine":2466,"endCharacter":8},{"startLine":549,"startCharacter":21,"endLine":586,"endCharacter":4},{"startLine":1406,"startCharacter":27,"endLine":1412,"endCharacter":8},{"startLine":1117,"startCharacter":20,"endLine":1154,"endCharacter":4},{"startLine":234,"startCharacter":23,"endLine":273,"endCharacter":4},{"startLine":488,"startCharacter":52,"endLine":496,"endCharacter":8},{"startLine":2122,"startCharacter":39,"endLine":2132,"endCharacter":8},{"startLine":236,"startCharacter":28,"endLine":242,"endCharacter":8},{"startLine":1326,"startCharacter":20,"endLine":1363,"endCharacter":4},{"startLine":1166,"startCharacter":31,"endLine":1172,"endCharacter":8},{"startLine":1785,"startCharacter":24,"endLine":1796,"endCharacter":8},{"startLine":16,"startCharacter":26,"endLine":22,"endCharacter":8},{"startLine":879,"startCharacter":24,"endLine":915,"endCharacter":4},{"startLine":5,"startCharacter":1,"endLine":5,"endCharacter":33,"kind":"comment"},{"startLine":47,"startCharacter":1,"endLine":47,"endCharacter":35,"kind":"comment"},{"startLine":97,"startCharacter":1,"endLine":97,"endCharacter":25,"kind":"comment"},{"startLine":139,"startCharacter":1,"endLine":139,"endCharacter":26,"kind":"comment"},{"startLine":172,"startCharacter":1,"endLine":172,"endCharacter":19,"kind":"comment"},{"startLine":204,"startCharacter":1,"endLine":204,"endCharacter":27,"kind":"comment"},{"startLine":233,"startCharacter":1,"endLine":233,"endCharacter":32,"kind":"comment"},{"startLine":275,"startCharacter":1,"endLine":275,"endCharacter":28,"kind":"comment"},{"startLine":317,"startCharacter":1,"endLine":317,"endCharacter":19,"kind":"comment"},{"startLine":352,"startCharacter":1,"endLine":352,"endCharacter":31,"kind":"comment"},{"startLine":384,"startCharacter":1,"endLine":384,"endCharacter":24,"kind":"comment"},{"startLine":432,"startCharacter":1,"endLine":432,"endCharacter":19,"kind":"comment"},{"startLine":471,"startCharacter":1,"endLine":471,"endCharacter":20,"kind":"comment"},{"startLine":509,"startCharacter":1,"endLine":509,"endCharacter":21,"kind":"comment"},{"startLine":548,"startCharacter":1,"endLine":548,"endCharacter":16,"kind":"comment"},{"startLine":588,"startCharacter":1,"endLine":588,"endCharacter":21,"kind":"comment"},{"startLine":628,"startCharacter":1,"endLine":628,"endCharacter":13,"kind":"comment"},{"startLine":668,"startCharacter":1,"endLine":668,"endCharacter":17,"kind":"comment"},{"startLine":708,"startCharacter":1,"endLine":708,"endCharacter":16,"kind":"comment"},{"startLine":749,"startCharacter":1,"endLine":749,"endCharacter":31,"kind":"comment"},{"startLine":790,"startCharacter":1,"endLine":790,"endCharacter":33,"kind":"comment"},{"startLine":838,"startCharacter":1,"endLine":838,"endCharacter":20,"kind":"comment"},{"startLine":878,"startCharacter":1,"endLine":878,"endCharacter":25,"kind":"comment"},{"startLine":917,"startCharacter":1,"endLine":917,"endCharacter":26,"kind":"comment"},{"startLine":958,"startCharacter":1,"endLine":958,"endCharacter":18,"kind":"comment"},{"startLine":997,"startCharacter":1,"endLine":997,"endCharacter":19,"kind":"comment"},{"startLine":1037,"startCharacter":1,"endLine":1037,"endCharacter":17,"kind":"comment"},{"startLine":1076,"startCharacter":1,"endLine":1076,"endCharacter":20,"kind":"comment"},{"startLine":1116,"startCharacter":1,"endLine":1116,"endCharacter":19,"kind":"comment"},{"startLine":1156,"startCharacter":1,"endLine":1156,"endCharacter":19,"kind":"comment"},{"startLine":1195,"startCharacter":1,"endLine":1195,"endCharacter":30,"kind":"comment"},{"startLine":1216,"startCharacter":1,"endLine":1216,"endCharacter":10,"kind":"comment"},{"startLine":1218,"startCharacter":1,"endLine":1218,"endCharacter":10,"kind":"comment"},{"startLine":1246,"startCharacter":1,"endLine":1246,"endCharacter":15,"kind":"comment"},{"startLine":1285,"startCharacter":1,"endLine":1285,"endCharacter":22,"kind":"comment"},{"startLine":1325,"startCharacter":1,"endLine":1325,"endCharacter":23,"kind":"comment"},{"startLine":1365,"startCharacter":1,"endLine":1365,"endCharacter":13,"kind":"comment"},{"startLine":1404,"startCharacter":1,"endLine":1404,"endCharacter":18,"kind":"comment"},{"startLine":1444,"startCharacter":1,"endLine":1444,"endCharacter":17,"kind":"comment"},{"startLine":1485,"startCharacter":1,"endLine":1485,"endCharacter":15,"kind":"comment"},{"startLine":1526,"startCharacter":1,"endLine":1526,"endCharacter":17,"kind":"comment"},{"startLine":1566,"startCharacter":1,"endLine":1566,"endCharacter":19,"kind":"comment"},{"startLine":1606,"startCharacter":1,"endLine":1606,"endCharacter":37,"kind":"comment"},{"startLine":1660,"startCharacter":1,"endLine":1660,"endCharacter":10,"kind":"comment"},{"startLine":1733,"startCharacter":1,"endLine":1733,"endCharacter":33,"kind":"comment"},{"startLine":1813,"startCharacter":1,"endLine":1813,"endCharacter":27,"kind":"comment"},{"startLine":1829,"startCharacter":1,"endLine":1829,"endCharacter":27,"kind":"comment"},{"startLine":1925,"startCharacter":1,"endLine":1925,"endCharacter":28,"kind":"comment"},{"startLine":2016,"startCharacter":1,"endLine":2016,"endCharacter":39,"kind":"comment"},{"startLine":2105,"startCharacter":1,"endLine":2105,"endCharacter":42,"kind":"comment"},{"startLine":2107,"startCharacter":1,"endLine":2107,"endCharacter":51,"kind":"comment"},{"startLine":2109,"startCharacter":1,"endLine":2109,"endCharacter":10,"kind":"comment"},{"startLine":2111,"startCharacter":1,"endLine":2111,"endCharacter":10,"kind":"comment"},{"startLine":2117,"startCharacter":1,"endLine":2117,"endCharacter":17,"kind":"comment"},{"startLine":2125,"startCharacter":1,"endLine":2125,"endCharacter":10,"kind":"comment"},{"startLine":2127,"startCharacter":1,"endLine":2127,"endCharacter":10,"kind":"comment"},{"startLine":2134,"startCharacter":1,"endLine":2134,"endCharacter":32,"kind":"comment"},{"startLine":2173,"startCharacter":1,"endLine":2173,"endCharacter":34,"kind":"comment"},{"startLine":2175,"startCharacter":1,"endLine":2175,"endCharacter":10,"kind":"comment"},{"startLine":2178,"startCharacter":1,"endLine":2178,"endCharacter":10,"kind":"comment"},{"startLine":2183,"startCharacter":1,"endLine":2183,"endCharacter":10,"kind":"comment"},{"startLine":2185,"startCharacter":1,"endLine":2185,"endCharacter":10,"kind":"comment"},{"startLine":2198,"startCharacter":1,"endLine":2198,"endCharacter":10,"kind":"comment"},{"startLine":2220,"startCharacter":1,"endLine":2220,"endCharacter":46,"kind":"comment"},{"startLine":2249,"startCharacter":1,"endLine":2249,"endCharacter":33,"kind":"comment"},{"startLine":2276,"startCharacter":1,"endLine":2276,"endCharacter":37,"kind":"comment"},{"startLine":2284,"startCharacter":1,"endLine":2284,"endCharacter":10,"kind":"comment"},{"startLine":2304,"startCharacter":1,"endLine":2304,"endCharacter":44,"kind":"comment"},{"startLine":2320,"startCharacter":1,"endLine":2320,"endCharacter":38,"kind":"comment"},{"startLine":2322,"startCharacter":1,"endLine":2322,"endCharacter":28,"kind":"comment"},{"startLine":2332,"startCharacter":1,"endLine":2332,"endCharacter":10,"kind":"comment"},{"startLine":2343,"startCharacter":1,"endLine":2343,"endCharacter":10,"kind":"comment"},{"startLine":2351,"startCharacter":1,"endLine":2351,"endCharacter":10,"kind":"comment"},{"startLine":2355,"startCharacter":1,"endLine":2355,"endCharacter":10,"kind":"comment"},{"startLine":2359,"startCharacter":1,"endLine":2359,"endCharacter":36,"kind":"comment"},{"startLine":2373,"startCharacter":1,"endLine":2373,"endCharacter":10,"kind":"comment"},{"startLine":2378,"startCharacter":1,"endLine":2378,"endCharacter":24,"kind":"comment"},{"startLine":2398,"startCharacter":1,"endLine":2398,"endCharacter":26,"kind":"comment"},{"startLine":2433,"startCharacter":1,"endLine":2433,"endCharacter":34,"kind":"comment"},{"startLine":2456,"startCharacter":1,"endLine":2456,"endCharacter":23,"kind":"comment"},{"startLine":2468,"startCharacter":1,"endLine":2468,"endCharacter":26,"kind":"comment"},{"startLine":2480,"startCharacter":1,"endLine":2480,"endCharacter":46,"kind":"comment"},{"startLine":2492,"startCharacter":1,"endLine":2492,"endCharacter":18,"kind":"comment"},{"startLine":2504,"startCharacter":1,"endLine":2504,"endCharacter":32,"kind":"comment"}]}
2025/01/13 13:00:59 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 13:01:10 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 13:01:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf"}}}
2025/01/13 13:01:10 server.go:110: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 13:01:10 foldingService.go:218: Trace | Found 84 Comment Ranges
2025/01/13 13:01:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":[{"startLine":1631,"startCharacter":28,"endLine":1642,"endCharacter":8},{"startLine":2163,"startCharacter":33,"endLine":2171,"endCharacter":8},{"startLine":935,"startCharacter":28,"endLine":944,"endCharacter":8},{"startLine":1366,"startCharacter":24,"endLine":1402,"endCharacter":4},{"startLine":1214,"startCharacter":28,"endLine":1222,"endCharacter":8},{"startLine":1607,"startCharacter":27,"endLine":1731,"endCharacter":4},{"startLine":50,"startCharacter":26,"endLine":56,"endCharacter":8},{"startLine":959,"startCharacter":21,"endLine":995,"endCharacter":4},{"startLine":1247,"startCharacter":20,"endLine":1283,"endCharacter":4},{"startLine":1422,"startCharacter":56,"endLine":1430,"endCharacter":8},{"startLine":2018,"startCharacter":29,"endLine":2029,"endCharacter":8},{"startLine":2206,"startCharacter":65,"endLine":2218,"endCharacter":8},{"startLine":33,"startCharacter":22,"endLine":44,"endCharacter":8},{"startLine":1015,"startCharacter":59,"endLine":1023,"endCharacter":8},{"startLine":1025,"startCharacter":31,"endLine":1034,"endCharacter":8},{"startLine":1445,"startCharacter":21,"endLine":1483,"endCharacter":4},{"startLine":1886,"startCharacter":30,"endLine":1897,"endCharacter":8},{"startLine":2071,"startCharacter":31,"endLine":2080,"endCharacter":8},{"startLine":48,"startCharacter":28,"endLine":95,"endCharacter":4},{"startLine":117,"startCharacter":58,"endLine":125,"endCharacter":8},{"startLine":1576,"startCharacter":29,"endLine":1582,"endCharacter":8},{"startLine":2321,"startCharacter":21,"endLine":2515,"endCharacter":4},{"startLine":385,"startCharacter":24,"endLine":430,"endCharacter":8},{"startLine":1039,"startCharacter":24,"endLine":1045,"endCharacter":8},{"startLine":1705,"startCharacter":29,"endLine":1716,"endCharacter":8},{"startLine":1718,"startCharacter":34,"endLine":1729,"endCharacter":8},{"startLine":1761,"startCharacter":28,"endLine":1772,"endCharacter":8},{"startLine":2263,"startCharacter":32,"endLine":2274,"endCharacter":8},{"startLine":353,"startCharacter":23,"endLine":382,"endCharacter":4},{"startLine":808,"startCharacter":27,"endLine":814,"endCharacter":8},{"startLine":726,"startCharacter":31,"endLine":735,"endCharacter":8},{"startLine":2060,"startCharacter":60,"endLine":2069,"endCharacter":8},{"startLine":276,"startCharacter":23,"endLine":315,"endCharacter":4},{"startLine":340,"startCharacter":31,"endLine":349,"endCharacter":8},{"startLine":848,"startCharacter":24,"endLine":854,"endCharacter":8},{"startLine":411,"startCharacter":70,"endLine":419,"endCharacter":12},{"startLine":710,"startCharacter":27,"endLine":716,"endCharacter":8},{"startLine":1303,"startCharacter":56,"endLine":1311,"endCharacter":8},{"startLine":1392,"startCharacter":25,"endLine":1401,"endCharacter":8},{"startLine":3,"startCharacter":23,"endLine":2516,"endCharacter":0},{"startLine":1065,"startCharacter":29,"endLine":1073,"endCharacter":8},{"startLine":1007,"startCharacter":25,"endLine":1013,"endCharacter":8},{"startLine":1047,"startCharacter":30,"endLine":1053,"endCharacter":8},{"startLine":1536,"startCharacter":26,"endLine":1542,"endCharacter":8},{"startLine":2039,"startCharacter":37,"endLine":2045,"endCharacter":8},{"startLine":140,"startCharacter":19,"endLine":170,"endCharacter":4},{"startLine":244,"startCharacter":31,"endLine":250,"endCharacter":8},{"startLine":1594,"startCharacter":34,"endLine":1603,"endCharacter":8},{"startLine":2047,"startCharacter":27,"endLine":2058,"endCharacter":8},{"startLine":2340,"startCharacter":30,"endLine":2347,"endCharacter":8},{"startLine":2379,"startCharacter":30,"endLine":2387,"endCharacter":8},{"startLine":2389,"startCharacter":28,"endLine":2396,"endCharacter":8},{"startLine":100,"startCharacter":27,"endLine":106,"endCharacter":8},{"startLine":985,"startCharacter":28,"endLine":994,"endCharacter":8},{"startLine":856,"startCharacter":62,"endLine":864,"endCharacter":8},{"startLine":1735,"startCharacter":32,"endLine":1746,"endCharacter":8},{"startLine":526,"startCharacter":65,"endLine":534,"endCharacter":8},{"startLine":840,"startCharacter":27,"endLine":846,"endCharacter":8},{"startLine":686,"startCharacter":52,"endLine":694,"endCharacter":8},{"startLine":1077,"startCharacter":21,"endLine":1114,"endCharacter":4},{"startLine":1862,"startCharacter":61,"endLine":1871,"endCharacter":8},{"startLine":286,"startCharacter":28,"endLine":292,"endCharacter":8},{"startLine":656,"startCharacter":26,"endLine":665,"endCharacter":8},{"startLine":589,"startCharacter":21,"endLine":626,"endCharacter":4},{"startLine":1086,"startCharacter":29,"endLine":1092,"endCharacter":8},{"startLine":355,"startCharacter":25,"endLine":361,"endCharacter":8},{"startLine":442,"startCharacter":26,"endLine":447,"endCharacter":8},{"startLine":1405,"startCharacter":23,"endLine":1442,"endCharacter":4},{"startLine":2349,"startCharacter":34,"endLine":2357,"endCharacter":8},{"startLine":152,"startCharacter":59,"endLine":160,"endCharacter":8},{"startLine":320,"startCharacter":26,"endLine":326,"endCharacter":8},{"startLine":2191,"startCharacter":27,"endLine":2204,"endCharacter":8},{"startLine":2277,"startCharacter":33,"endLine":2289,"endCharacter":8},{"startLine":2305,"startCharacter":33,"endLine":2316,"endCharacter":8},{"startLine":816,"startCharacter":61,"endLine":824,"endCharacter":8},{"startLine":975,"startCharacter":59,"endLine":983,"endCharacter":8},{"startLine":85,"startCharacter":55,"endLine":94,"endCharacter":8},{"startLine":750,"startCharacter":27,"endLine":787,"endCharacter":4},{"startLine":1584,"startCharacter":62,"endLine":1592,"endCharacter":8},{"startLine":2108,"startCharacter":33,"endLine":2120,"endCharacter":8},{"startLine":363,"startCharacter":32,"endLine":370,"endCharacter":8},{"startLine":1205,"startCharacter":31,"endLine":1212,"endCharacter":8},{"startLine":2174,"startCharacter":58,"endLine":2189,"endCharacter":8},{"startLine":800,"startCharacter":28,"endLine":806,"endCharacter":8},{"startLine":998,"startCharacter":19,"endLine":1035,"endCharacter":4},{"startLine":2135,"startCharacter":29,"endLine":2148,"endCharacter":8},{"startLine":459,"startCharacter":23,"endLine":468,"endCharacter":8},{"startLine":792,"startCharacter":24,"endLine":798,"endCharacter":8},{"startLine":895,"startCharacter":62,"endLine":903,"endCharacter":8},{"startLine":1899,"startCharacter":32,"endLine":1910,"endCharacter":8},{"startLine":2291,"startCharacter":31,"endLine":2302,"endCharacter":8},{"startLine":2323,"startCharacter":33,"endLine":2329,"endCharacter":8},{"startLine":394,"startCharacter":35,"endLine":400,"endCharacter":12},{"startLine":519,"startCharacter":25,"endLine":524,"endCharacter":8},{"startLine":737,"startCharacter":27,"endLine":746,"endCharacter":8},{"startLine":1375,"startCharacter":25,"endLine":1381,"endCharacter":8},{"startLine":1503,"startCharacter":26,"endLine":1512,"endCharacter":8},{"startLine":8,"startCharacter":28,"endLine":14,"endCharacter":8},{"startLine":629,"startCharacter":23,"endLine":666,"endCharacter":4},{"startLine":1854,"startCharacter":27,"endLine":1860,"endCharacter":8},{"startLine":1992,"startCharacter":27,"endLine":2002,"endCharacter":8},{"startLine":2150,"startCharacter":32,"endLine":2161,"endCharacter":8},{"startLine":318,"startCharacter":22,"endLine":350,"endCharacter":4},{"startLine":472,"startCharacter":25,"endLine":507,"endCharacter":4},{"startLine":598,"startCharacter":25,"endLine":604,"endCharacter":8},{"startLine":2017,"startCharacter":30,"endLine":2103,"endCharacter":4},{"startLine":2493,"startCharacter":68,"endLine":2502,"endCharacter":8},{"startLine":162,"startCharacter":67,"endLine":169,"endCharacter":8},{"startLine":1980,"startCharacter":30,"endLine":1990,"endCharacter":8},{"startLine":1248,"startCharacter":24,"endLine":1254,"endCharacter":8},{"startLine":1038,"startCharacter":22,"endLine":1074,"endCharacter":4},{"startLine":1544,"startCharacter":60,"endLine":1552,"endCharacter":8},{"startLine":2082,"startCharacter":35,"endLine":2091,"endCharacter":8},{"startLine":433,"startCharacter":23,"endLine":469,"endCharacter":4},{"startLine":887,"startCharacter":33,"endLine":893,"endCharacter":8},{"startLine":2235,"startCharacter":31,"endLine":2247,"endCharacter":8},{"startLine":2434,"startCharacter":69,"endLine":2443,"endCharacter":8},{"startLine":2457,"startCharacter":66,"endLine":2466,"endCharacter":8},{"startLine":549,"startCharacter":21,"endLine":586,"endCharacter":4},{"startLine":1406,"startCharacter":27,"endLine":1412,"endCharacter":8},{"startLine":1117,"startCharacter":20,"endLine":1154,"endCharacter":4},{"startLine":234,"startCharacter":23,"endLine":273,"endCharacter":4},{"startLine":488,"startCharacter":52,"endLine":496,"endCharacter":8},{"startLine":2122,"startCharacter":39,"endLine":2132,"endCharacter":8},{"startLine":236,"startCharacter":28,"endLine":242,"endCharacter":8},{"startLine":1326,"startCharacter":20,"endLine":1363,"endCharacter":4},{"startLine":1166,"startCharacter":31,"endLine":1172,"endCharacter":8},{"startLine":1785,"startCharacter":24,"endLine":1796,"endCharacter":8},{"startLine":16,"startCharacter":26,"endLine":22,"endCharacter":8},{"startLine":879,"startCharacter":24,"endLine":915,"endCharacter":4},{"startLine":1094,"startCharacter":54,"endLine":1102,"endCharacter":8},{"startLine":1157,"startCharacter":23,"endLine":1193,"endCharacter":4},{"startLine":1224,"startCharacter":58,"endLine":1232,"endCharacter":8},{"startLine":2093,"startCharacter":26,"endLine":2102,"endCharacter":8},{"startLine":264,"startCharacter":30,"endLine":272,"endCharacter":8},{"startLine":670,"startCharacter":23,"endLine":676,"endCharacter":8},{"startLine":646,"startCharacter":56,"endLine":654,"endCharacter":8},{"startLine":777,"startCharacter":29,"endLine":786,"endCharacter":8},{"startLine":960,"startCharacter":23,"endLine":966,"endCharacter":8},{"startLine":1234,"startCharacter":27,"endLine":1243,"endCharacter":8},{"startLine":1528,"startCharacter":26,"endLine":1534,"endCharacter":8},{"startLine":1644,"startCharacter":34,"endLine":1654,"endCharacter":8},{"startLine":73,"startCharacter":31,"endLine":83,"endCharacter":8},{"startLine":434,"startCharacter":30,"endLine":440,"endCharacter":8},{"startLine":1830,"startCharacter":21,"endLine":1923,"endCharacter":4},{"startLine":616,"startCharacter":29,"endLine":625,"endCharacter":8},{"startLine":919,"startCharacter":28,"endLine":925,"endCharacter":8},{"startLine":999,"startCharacter":26,"endLine":1005,"endCharacter":8},{"startLine":1313,"startCharacter":21,"endLine":1322,"endCharacter":8},{"startLine":1383,"startCharacter":55,"endLine":1390,"endCharacter":8},{"startLine":1473,"startCharacter":31,"endLine":1482,"endCharacter":8},{"startLine":402,"startCharacter":35,"endLine":409,"endCharacter":12},{"startLine":421,"startCharacter":68,"endLine":429,"endCharacter":12},{"startLine":2360,"startCharacter":69,"endLine":2368,"endCharacter":8},{"startLine":2505,"startCharacter":59,"endLine":2514,"endCharacter":8},{"startLine":1078,"startCharacter":25,"endLine":1084,"endCharacter":8},{"startLine":1144,"startCharacter":30,"endLine":1153,"endCharacter":8},{"startLine":1495,"startCharacter":28,"endLine":1501,"endCharacter":8},{"startLine":24,"startCharacter":34,"endLine":31,"endCharacter":8},{"startLine":510,"startCharacter":21,"endLine":546,"endCharacter":4},{"startLine":1158,"startCharacter":28,"endLine":1164,"endCharacter":8},{"startLine":1256,"startCharacter":30,"endLine":1261,"endCharacter":8},{"startLine":1568,"startCharacter":27,"endLine":1574,"endCharacter":8},{"startLine":2331,"startCharacter":29,"endLine":2338,"endCharacter":8},{"startLine":2469,"startCharacter":70,"endLine":2478,"endCharacter":8},{"startLine":328,"startCharacter":24,"endLine":338,"endCharacter":8},{"startLine":905,"startCharacter":28,"endLine":914,"endCharacter":8},{"startLine":183,"startCharacter":32,"endLine":192,"endCharacter":8},{"startLine":1666,"startCharacter":66,"endLine":1677,"endCharacter":8},{"startLine":1353,"startCharacter":25,"endLine":1362,"endCharacter":8},{"startLine":1912,"startCharacter":26,"endLine":1922,"endCharacter":8},{"startLine":1969,"startCharacter":64,"endLine":1978,"endCharacter":8},{"startLine":718,"startCharacter":27,"endLine":724,"endCharacter":8},{"startLine":839,"startCharacter":20,"endLine":876,"endCharacter":4},{"startLine":305,"startCharacter":28,"endLine":314,"endCharacter":8},{"startLine":669,"startCharacter":27,"endLine":706,"endCharacter":4},{"startLine":1134,"startCharacter":53,"endLine":1142,"endCharacter":8},{"startLine":1273,"startCharacter":30,"endLine":1282,"endCharacter":8},{"startLine":1343,"startCharacter":58,"endLine":1351,"endCharacter":8},{"startLine":1692,"startCharacter":24,"endLine":1703,"endCharacter":8},{"startLine":207,"startCharacter":28,"endLine":213,"endCharacter":8},{"startLine":294,"startCharacter":56,"endLine":303,"endCharacter":8},{"startLine":1774,"startCharacter":27,"endLine":1783,"endCharacter":8},{"startLine":2421,"startCharacter":80,"endLine":2431,"endCharacter":8},{"startLine":791,"startCharacter":21,"endLine":836,"endCharacter":4},{"startLine":880,"startCharacter":29,"endLine":885,"endCharacter":8},{"startLine":1055,"startCharacter":59,"endLine":1063,"endCharacter":8},{"startLine":558,"startCharacter":26,"endLine":564,"endCharacter":8},{"startLine":638,"startCharacter":26,"endLine":644,"endCharacter":8},{"startLine":1335,"startCharacter":29,"endLine":1341,"endCharacter":8},{"startLine":194,"startCharacter":65,"endLine":201,"endCharacter":8},{"startLine":606,"startCharacter":62,"endLine":614,"endCharacter":8},{"startLine":1527,"startCharacter":22,"endLine":1564,"endCharacter":4},{"startLine":1608,"startCharacter":33,"endLine":1619,"endCharacter":8},{"startLine":1286,"startCharacter":22,"endLine":1323,"endCharacter":4},{"startLine":1454,"startCharacter":33,"endLine":1460,"endCharacter":8},{"startLine":1798,"startCharacter":26,"endLine":1809,"endCharacter":8},{"startLine":2250,"startCharacter":31,"endLine":2261,"endCharacter":8},{"startLine":2445,"startCharacter":69,"endLine":2454,"endCharacter":8},{"startLine":751,"startCharacter":26,"endLine":757,"endCharacter":8},{"startLine":918,"startCharacter":29,"endLine":956,"endCharacter":4},{"startLine":2370,"startCharacter":54,"endLine":2376,"endCharacter":8},{"startLine":576,"startCharacter":35,"endLine":585,"endCharacter":8},{"startLine":1940,"startCharacter":28,"endLine":1946,"endCharacter":8},{"startLine":108,"startCharacter":33,"endLine":115,"endCharacter":8},{"startLine":127,"startCharacter":27,"endLine":136,"endCharacter":8},{"startLine":278,"startCharacter":27,"endLine":284,"endCharacter":8},{"startLine":968,"startCharacter":26,"endLine":973,"endCharacter":8},{"startLine":2004,"startCharacter":61,"endLine":2013,"endCharacter":8},{"startLine":6,"startCharacter":28,"endLine":45,"endCharacter":4},{"startLine":58,"startCharacter":26,"endLine":63,"endCharacter":8},{"startLine":2481,"startCharacter":46,"endLine":2490,"endCharacter":8},{"startLine":550,"startCharacter":26,"endLine":556,"endCharacter":8},{"startLine":1295,"startCharacter":34,"endLine":1301,"endCharacter":8},{"startLine":1748,"startCharacter":28,"endLine":1759,"endCharacter":8},{"startLine":1956,"startCharacter":20,"endLine":1967,"endCharacter":8},{"startLine":1287,"startCharacter":23,"endLine":1293,"endCharacter":8},{"startLine":1679,"startCharacter":31,"endLine":1690,"endCharacter":8},{"startLine":2399,"startCharacter":101,"endLine":2407,"endCharacter":8},{"startLine":173,"startCharacter":19,"endLine":202,"endCharacter":4},{"startLine":215,"startCharacter":34,"endLine":221,"endCharacter":8},{"startLine":498,"startCharacter":54,"endLine":506,"endCharacter":8},{"startLine":566,"startCharacter":63,"endLine":574,"endCharacter":8},{"startLine":1621,"startCharacter":30,"endLine":1629,"endCharacter":8},{"startLine":142,"startCharacter":27,"endLine":150,"endCharacter":8},{"startLine":473,"startCharacter":23,"endLine":479,"endCharacter":8},{"startLine":696,"startCharacter":35,"endLine":705,"endCharacter":8},{"startLine":927,"startCharacter":23,"endLine":933,"endCharacter":8},{"startLine":1174,"startCharacter":63,"endLine":1181,"endCharacter":8},{"startLine":175,"startCharacter":24,"endLine":181,"endCharacter":8},{"startLine":1118,"startCharacter":24,"endLine":1124,"endCharacter":8},{"startLine":678,"startCharacter":32,"endLine":684,"endCharacter":8},{"startLine":826,"startCharacter":30,"endLine":835,"endCharacter":8},{"startLine":1367,"startCharacter":22,"endLine":1373,"endCharacter":8},{"startLine":1844,"startCharacter":30,"endLine":1852,"endCharacter":8},{"startLine":481,"startCharacter":29,"endLine":486,"endCharacter":8},{"startLine":536,"startCharacter":22,"endLine":545,"endCharacter":8},{"startLine":1196,"startCharacter":25,"endLine":1244,"endCharacter":4},{"startLine":630,"startCharacter":28,"endLine":636,"endCharacter":8},{"startLine":767,"startCharacter":59,"endLine":775,"endCharacter":8},{"startLine":1948,"startCharacter":34,"endLine":1954,"endCharacter":8},{"startLine":1554,"startCharacter":33,"endLine":1563,"endCharacter":8},{"startLine":1831,"startCharacter":34,"endLine":1842,"endCharacter":8},{"startLine":1104,"startCharacter":23,"endLine":1113,"endCharacter":8},{"startLine":1327,"startCharacter":23,"endLine":1333,"endCharacter":8},{"startLine":1414,"startCharacter":32,"endLine":1420,"endCharacter":8},{"startLine":1462,"startCharacter":31,"endLine":1471,"endCharacter":8},{"startLine":1487,"startCharacter":28,"endLine":1493,"endCharacter":8},{"startLine":1927,"startCharacter":22,"endLine":1938,"endCharacter":8},{"startLine":372,"startCharacter":26,"endLine":381,"endCharacter":8},{"startLine":866,"startCharacter":27,"endLine":875,"endCharacter":8},{"startLine":1514,"startCharacter":35,"endLine":1523,"endCharacter":8},{"startLine":2106,"startCharacter":33,"endLine":2317,"endCharacter":4},{"startLine":98,"startCharacter":20,"endLine":137,"endCharacter":4},{"startLine":1567,"startCharacter":23,"endLine":1604,"endCharacter":4},{"startLine":449,"startCharacter":70,"endLine":457,"endCharacter":8},{"startLine":1926,"startCharacter":31,"endLine":2014,"endCharacter":4},{"startLine":205,"startCharacter":25,"endLine":231,"endCharacter":4},{"startLine":252,"startCharacter":34,"endLine":262,"endCharacter":8},{"startLine":946,"startCharacter":32,"endLine":955,"endCharacter":8},{"startLine":1126,"startCharacter":27,"endLine":1132,"endCharacter":8},{"startLine":1183,"startCharacter":34,"endLine":1192,"endCharacter":8},{"startLine":1814,"startCharacter":32,"endLine":1827,"endCharacter":4},{"startLine":2031,"startCharacter":27,"endLine":2037,"endCharacter":8},{"startLine":590,"startCharacter":31,"endLine":596,"endCharacter":8},{"startLine":709,"startCharacter":20,"endLine":747,"endCharacter":4},{"startLine":1486,"startCharacter":26,"endLine":1524,"endCharacter":4},{"startLine":1656,"startCharacter":36,"endLine":1664,"endCharacter":8},{"startLine":1815,"startCharacter":25,"endLine":1826,"endCharacter":8},{"startLine":1873,"startCharacter":32,"endLine":1884,"endCharacter":8},{"startLine":1263,"startCharacter":59,"endLine":1271,"endCharacter":8},{"startLine":1432,"startCharacter":31,"endLine":1441,"endCharacter":8},{"startLine":1446,"startCharacter":29,"endLine":1452,"endCharacter":8},{"startLine":2221,"startCharacter":37,"endLine":2233,"endCharacter":8},{"startLine":759,"startCharacter":24,"endLine":765,"endCharacter":8},{"startLine":1197,"startCharacter":26,"endLine":1203,"endCharacter":8},{"startLine":65,"startCharacter":29,"endLine":71,"endCharacter":8},{"startLine":1734,"startCharacter":33,"endLine":1811,"endCharacter":4},{"startLine":511,"startCharacter":29,"endLine":517,"endCharacter":8},{"startLine":2409,"startCharacter":81,"endLine":2419,"endCharacter":8},{"startLine":223,"startCharacter":65,"endLine":230,"endCharacter":8},{"startLine":386,"startCharacter":31,"endLine":392,"endCharacter":12},{"startLine":5,"startCharacter":1,"endLine":5,"endCharacter":33,"kind":"comment"},{"startLine":47,"startCharacter":1,"endLine":47,"endCharacter":35,"kind":"comment"},{"startLine":97,"startCharacter":1,"endLine":97,"endCharacter":25,"kind":"comment"},{"startLine":139,"startCharacter":1,"endLine":139,"endCharacter":26,"kind":"comment"},{"startLine":172,"startCharacter":1,"endLine":172,"endCharacter":19,"kind":"comment"},{"startLine":204,"startCharacter":1,"endLine":204,"endCharacter":27,"kind":"comment"},{"startLine":233,"startCharacter":1,"endLine":233,"endCharacter":32,"kind":"comment"},{"startLine":275,"startCharacter":1,"endLine":275,"endCharacter":28,"kind":"comment"},{"startLine":317,"startCharacter":1,"endLine":317,"endCharacter":19,"kind":"comment"},{"startLine":352,"startCharacter":1,"endLine":352,"endCharacter":31,"kind":"comment"},{"startLine":384,"startCharacter":1,"endLine":384,"endCharacter":24,"kind":"comment"},{"startLine":432,"startCharacter":1,"endLine":432,"endCharacter":19,"kind":"comment"},{"startLine":471,"startCharacter":1,"endLine":471,"endCharacter":20,"kind":"comment"},{"startLine":509,"startCharacter":1,"endLine":509,"endCharacter":21,"kind":"comment"},{"startLine":548,"startCharacter":1,"endLine":548,"endCharacter":16,"kind":"comment"},{"startLine":588,"startCharacter":1,"endLine":588,"endCharacter":21,"kind":"comment"},{"startLine":628,"startCharacter":1,"endLine":628,"endCharacter":13,"kind":"comment"},{"startLine":668,"startCharacter":1,"endLine":668,"endCharacter":17,"kind":"comment"},{"startLine":708,"startCharacter":1,"endLine":708,"endCharacter":16,"kind":"comment"},{"startLine":749,"startCharacter":1,"endLine":749,"endCharacter":31,"kind":"comment"},{"startLine":790,"startCharacter":1,"endLine":790,"endCharacter":33,"kind":"comment"},{"startLine":838,"startCharacter":1,"endLine":838,"endCharacter":20,"kind":"comment"},{"startLine":878,"startCharacter":1,"endLine":878,"endCharacter":25,"kind":"comment"},{"startLine":917,"startCharacter":1,"endLine":917,"endCharacter":26,"kind":"comment"},{"startLine":958,"startCharacter":1,"endLine":958,"endCharacter":18,"kind":"comment"},{"startLine":997,"startCharacter":1,"endLine":997,"endCharacter":19,"kind":"comment"},{"startLine":1037,"startCharacter":1,"endLine":1037,"endCharacter":17,"kind":"comment"},{"startLine":1076,"startCharacter":1,"endLine":1076,"endCharacter":20,"kind":"comment"},{"startLine":1116,"startCharacter":1,"endLine":1116,"endCharacter":19,"kind":"comment"},{"startLine":1156,"startCharacter":1,"endLine":1156,"endCharacter":19,"kind":"comment"},{"startLine":1195,"startCharacter":1,"endLine":1195,"endCharacter":30,"kind":"comment"},{"startLine":1216,"startCharacter":1,"endLine":1216,"endCharacter":10,"kind":"comment"},{"startLine":1218,"startCharacter":1,"endLine":1218,"endCharacter":10,"kind":"comment"},{"startLine":1246,"startCharacter":1,"endLine":1246,"endCharacter":15,"kind":"comment"},{"startLine":1285,"startCharacter":1,"endLine":1285,"endCharacter":22,"kind":"comment"},{"startLine":1325,"startCharacter":1,"endLine":1325,"endCharacter":23,"kind":"comment"},{"startLine":1365,"startCharacter":1,"endLine":1365,"endCharacter":13,"kind":"comment"},{"startLine":1404,"startCharacter":1,"endLine":1404,"endCharacter":18,"kind":"comment"},{"startLine":1444,"startCharacter":1,"endLine":1444,"endCharacter":17,"kind":"comment"},{"startLine":1485,"startCharacter":1,"endLine":1485,"endCharacter":15,"kind":"comment"},{"startLine":1526,"startCharacter":1,"endLine":1526,"endCharacter":17,"kind":"comment"},{"startLine":1566,"startCharacter":1,"endLine":1566,"endCharacter":19,"kind":"comment"},{"startLine":1606,"startCharacter":1,"endLine":1606,"endCharacter":37,"kind":"comment"},{"startLine":1660,"startCharacter":1,"endLine":1660,"endCharacter":10,"kind":"comment"},{"startLine":1733,"startCharacter":1,"endLine":1733,"endCharacter":33,"kind":"comment"},{"startLine":1813,"startCharacter":1,"endLine":1813,"endCharacter":27,"kind":"comment"},{"startLine":1829,"startCharacter":1,"endLine":1829,"endCharacter":27,"kind":"comment"},{"startLine":1925,"startCharacter":1,"endLine":1925,"endCharacter":28,"kind":"comment"},{"startLine":2016,"startCharacter":1,"endLine":2016,"endCharacter":39,"kind":"comment"},{"startLine":2105,"startCharacter":1,"endLine":2105,"endCharacter":42,"kind":"comment"},{"startLine":2107,"startCharacter":1,"endLine":2107,"endCharacter":51,"kind":"comment"},{"startLine":2109,"startCharacter":1,"endLine":2109,"endCharacter":10,"kind":"comment"},{"startLine":2111,"startCharacter":1,"endLine":2111,"endCharacter":10,"kind":"comment"},{"startLine":2117,"startCharacter":1,"endLine":2117,"endCharacter":17,"kind":"comment"},{"startLine":2125,"startCharacter":1,"endLine":2125,"endCharacter":10,"kind":"comment"},{"startLine":2127,"startCharacter":1,"endLine":2127,"endCharacter":10,"kind":"comment"},{"startLine":2134,"startCharacter":1,"endLine":2134,"endCharacter":32,"kind":"comment"},{"startLine":2173,"startCharacter":1,"endLine":2173,"endCharacter":34,"kind":"comment"},{"startLine":2175,"startCharacter":1,"endLine":2175,"endCharacter":10,"kind":"comment"},{"startLine":2178,"startCharacter":1,"endLine":2178,"endCharacter":10,"kind":"comment"},{"startLine":2183,"startCharacter":1,"endLine":2183,"endCharacter":10,"kind":"comment"},{"startLine":2185,"startCharacter":1,"endLine":2185,"endCharacter":10,"kind":"comment"},{"startLine":2198,"startCharacter":1,"endLine":2198,"endCharacter":10,"kind":"comment"},{"startLine":2220,"startCharacter":1,"endLine":2220,"endCharacter":46,"kind":"comment"},{"startLine":2249,"startCharacter":1,"endLine":2249,"endCharacter":33,"kind":"comment"},{"startLine":2276,"startCharacter":1,"endLine":2276,"endCharacter":37,"kind":"comment"},{"startLine":2284,"startCharacter":1,"endLine":2284,"endCharacter":10,"kind":"comment"},{"startLine":2304,"startCharacter":1,"endLine":2304,"endCharacter":44,"kind":"comment"},{"startLine":2320,"startCharacter":1,"endLine":2320,"endCharacter":38,"kind":"comment"},{"startLine":2322,"startCharacter":1,"endLine":2322,"endCharacter":28,"kind":"comment"},{"startLine":2332,"startCharacter":1,"endLine":2332,"endCharacter":10,"kind":"comment"},{"startLine":2343,"startCharacter":1,"endLine":2343,"endCharacter":10,"kind":"comment"},{"startLine":2351,"startCharacter":1,"endLine":2351,"endCharacter":10,"kind":"comment"},{"startLine":2355,"startCharacter":1,"endLine":2355,"endCharacter":10,"kind":"comment"},{"startLine":2359,"startCharacter":1,"endLine":2359,"endCharacter":36,"kind":"comment"},{"startLine":2373,"startCharacter":1,"endLine":2373,"endCharacter":10,"kind":"comment"},{"startLine":2378,"startCharacter":1,"endLine":2378,"endCharacter":24,"kind":"comment"},{"startLine":2398,"startCharacter":1,"endLine":2398,"endCharacter":26,"kind":"comment"},{"startLine":2433,"startCharacter":1,"endLine":2433,"endCharacter":34,"kind":"comment"},{"startLine":2456,"startCharacter":1,"endLine":2456,"endCharacter":23,"kind":"comment"},{"startLine":2468,"startCharacter":1,"endLine":2468,"endCharacter":26,"kind":"comment"},{"startLine":2480,"startCharacter":1,"endLine":2480,"endCharacter":46,"kind":"comment"},{"startLine":2492,"startCharacter":1,"endLine":2492,"endCharacter":18,"kind":"comment"},{"startLine":2504,"startCharacter":1,"endLine":2504,"endCharacter":32,"kind":"comment"}]}
2025/01/13 13:01:10 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 13:01:10 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 13:01:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf"}}}
2025/01/13 13:01:10 server.go:110: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 13:01:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"data":[696,8,18,1,1,3,12,11,6,0,1,12,9,6,0,1,12,14,6,0,1,12,6,6,0,225,8,8,3,1,2,12,6,8,0,1,12,8,8,0,1,12,9,8,0,1,12,10,8,0,242,8,15,1,1,4,12,11,6,0,189,8,7,3,1,1,12,9,8,0,1,12,5,8,0,1,12,12,8,0,1,12,11,8,0,1,12,9,8,0,472,8,15,3,1,3,12,5,8,0,1,12,8,8,0,1,12,7,8,0,1,12,10,8,0,1,12,13,8,0,76,8,7,3,1,1,12,3,8,0,1,12,3,8,0,1,12,4,8,0,1,12,4,8,0,1,12,7,8,0,1,12,12,8,0,1,12,6,8,0,1,12,11,8,0,1,12,8,8,0,1,12,14,8,0,169,4,33,0,1,0,0,41,10,4,115,8,20,1,1,4,12,8,6,0,1,12,8,6,0,2,12,13,6,0,2,12,11,6,0,179,8,16,1,1,5,12,8,6,0,2,12,10,6,0,77,8,14,1,1,1,12,12,6,0,3,12,14,6,0,8,8,20,1,1,1,12,8,6,0,4,12,18,6,0]}}
2025/01/13 13:01:10 util.go:36: Trace | Read Content-Length: 156 from Content-Length: 156
2025/01/13 13:01:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf"}}}
2025/01/13 13:01:10 server.go:110: INFO  | Handle Method: textDocument/didClose 
2025/01/13 13:01:15 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/13 13:01:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"shutdown","params":null}
2025/01/13 13:01:15 server.go:94: INFO  | Received Shutdown Request
2025/01/13 13:01:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5"}
2025/01/13 13:01:15 server.go:81: INFO  | Server Closed
2025/01/13 13:01:15 main.go:32: Server Shutdown
2025/01/13 13:01:17 fileService.go:35: Trace | FileChangeListeners: [0xc0000be0d8]
2025/01/13 13:01:17 util.go:36: Trace | Read Content-Length: 3705 from Content-Length: 3705
2025/01/13 13:01:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":20136,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 13:01:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true,"semanticTokensProvider":{"legend":{"tokenTypes":["namespace","type","enum","interface","struct","parameter","variable","property","enumMember","function","comment","keyword","modifier"],"tokenModifiers":["declaration","definition","readonly","deprecated","documentation"]},"full":true}},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 13:01:17 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/13 13:01:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/13 13:01:17 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 13:01:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 13:01:17 server.go:107: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 13:01:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 13:01:17 util.go:36: Trace | Read Content-Length: 2973 from Content-Length: 2973
2025/01/13 13:01:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket für Medienverwaltung\n    package media {\n\n        // Basisstruktur für alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n        }\n\n        // Benutzerentität\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email);\n        }\n    }\n}\n"}}}
2025/01/13 13:01:17 server.go:110: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 13:01:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf","version":1,"diagnostics":[]}}
2025/01/13 13:01:17 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 98 101 102 111 114 101 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 13:01:17 util.go:36: Trace | Read Content-Length: 181 from Content-Length: 181
2025/01/13 13:01:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"}}}
2025/01/13 13:01:17 server.go:110: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 13:01:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"data":[39,8,4,1,1,4,12,9,6,0,1,12,9,6,0,1,12,8,6,0,6,8,8,1,1,1,12,11,6,0,2,12,14,6,0,1,12,10,6,0,7,4,27,0,1,0,0,20,10,4,3,8,21,10,4,9,8,14,3,1,3,12,8,8,0,1,12,7,8,0,1,12,7,8,0,4,8,10,3,1,1,12,6,8,0,1,12,9,8,0,1,12,7,8,0,4,8,4,1,1,3,12,11,6,0,5,12,11,6,0,1,12,16,6,0]}}
2025/01/13 13:01:17 util.go:36: Trace | Read Content-Length: 203 from Content-Length: 203
2025/01/13 13:01:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":0,"character":0}}}
2025/01/13 13:01:17 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 13:01:17 hoverService.go:106: Trace | Start Get File Content
2025/01/13 13:01:17 hoverService.go:114: Trace | Start Find Node
2025/01/13 13:01:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"DMF Modell mit der Version 1.0.0"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}}}}
2025/01/13 13:01:17 hoverService.go:138: Trace | Finished Hover with Content: DMF Modell mit der Version 1.0.0
2025/01/13 13:01:17 util.go:36: Trace | Read Content-Length: 174 from Content-Length: 174
2025/01/13 13:01:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"}}}
2025/01/13 13:01:17 server.go:110: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 13:01:17 foldingService.go:218: Trace | Found 11 Comment Ranges
2025/01/13 13:01:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":[{"startLine":51,"startCharacter":43,"endLine":58,"endCharacter":8},{"startLine":19,"startCharacter":24,"endLine":26,"endCharacter":8},{"startLine":29,"startCharacter":23,"endLine":36,"endCharacter":8},{"startLine":39,"startCharacter":39,"endLine":48,"endCharacter":8},{"startLine":62,"startCharacter":19,"endLine":103,"endCharacter":4},{"startLine":65,"startCharacter":24,"endLine":71,"endCharacter":8},{"startLine":74,"startCharacter":29,"endLine":80,"endCharacter":8},{"startLine":83,"startCharacter":25,"endLine":87,"endCharacter":8},{"startLine":90,"startCharacter":21,"endLine":102,"endCharacter":8},{"startLine":3,"startCharacter":31,"endLine":104,"endCharacter":0},{"startLine":6,"startCharacter":19,"endLine":59,"endCharacter":4},{"startLine":9,"startCharacter":26,"endLine":16,"endCharacter":8},{"startLine":5,"startCharacter":1,"endLine":5,"endCharacter":35,"kind":"comment"},{"startLine":8,"startCharacter":1,"endLine":8,"endCharacter":38,"kind":"comment"},{"startLine":18,"startCharacter":1,"endLine":18,"endCharacter":27,"kind":"comment"},{"startLine":28,"startCharacter":1,"endLine":28,"endCharacter":29,"kind":"comment"},{"startLine":38,"startCharacter":1,"endLine":38,"endCharacter":33,"kind":"comment"},{"startLine":50,"startCharacter":1,"endLine":50,"endCharacter":31,"kind":"comment"},{"startLine":61,"startCharacter":1,"endLine":61,"endCharacter":21,"kind":"comment"},{"startLine":64,"startCharacter":1,"endLine":64,"endCharacter":22,"kind":"comment"},{"startLine":73,"startCharacter":1,"endLine":73,"endCharacter":30,"kind":"comment"},{"startLine":82,"startCharacter":1,"endLine":82,"endCharacter":17,"kind":"comment"},{"startLine":89,"startCharacter":1,"endLine":89,"endCharacter":19,"kind":"comment"}]}
2025/01/13 13:01:17 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 13:01:18 util.go:36: Trace | Read Content-Length: 203 from Content-Length: 203
2025/01/13 13:01:18 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":8,"character":9}}}
2025/01/13 13:01:18 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 13:01:18 hoverService.go:106: Trace | Start Get File Content
2025/01/13 13:01:18 hoverService.go:114: Trace | Start Find Node
2025/01/13 13:01:18 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"Basisstruktur für alle Medientypen\n"},"range":{"start":{"line":8,"character":9},"end":{"line":8,"character":9}}}}
2025/01/13 13:01:18 hoverService.go:138: Trace | Finished Hover with Content: Basisstruktur für alle Medientypen

2025/01/13 13:01:19 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/13 13:01:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":20,"character":19}}}
2025/01/13 13:01:19 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 13:01:19 hoverService.go:106: Trace | Start Get File Content
2025/01/13 13:01:19 hoverService.go:114: Trace | Start Find Node
2025/01/13 13:01:19 hoverService.go:157: Trace | Start Render Hover Text Konstante Markdown
2025/01/13 13:01:19 hoverService.go:374: Trace | Index 0 Argumente: 0
2025/01/13 13:01:19 hoverService.go:375: Trace | Value: {ModelElement:{Kommentar:<nil> Node:0xc0000174e0} Ignored:true Value:0}
2025/01/13 13:01:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n#### BOOK\n###### In [MediaType](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L20)\n\n\n**[Index]()**: 0\u003cbr\u003e\n\n"},"range":{"start":{"line":20,"character":19},"end":{"line":20,"character":19}}}}
2025/01/13 13:01:19 hoverService.go:138: Trace | Finished Hover with Content: 
#### BOOK
###### In [MediaType](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L20)


**[Index]()**: 0<br>


2025/01/13 13:01:20 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/13 13:01:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":47,"character":19}}}
2025/01/13 13:01:20 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 13:01:20 hoverService.go:106: Trace | Start Get File Content
2025/01/13 13:01:20 hoverService.go:114: Trace | Start Find Node
2025/01/13 13:01:20 hoverService.go:271: Trace | IdentifierElementMarkdown Nodes: &{{[1229 47 12 0] 0x7f4670007d78 0x7f4670001d70}}(identifier_statement) entity_block
2025/01/13 13:01:20 hoverService.go:272: Trace | IdentifierElementMarkdown LookUp: map[de.library.management:0xc00018a5b0 de.library.management.media:0xc00018a460 de.library.management.media.Book:0xc0001beea0 de.library.management.media.Category:0xc0001ce630 de.library.management.media.Magazine:0xc0001befc0 de.library.management.media.MediaItem:0xc000180b40 de.library.management.media.MediaType:0xc0001ce510 de.library.management.users:0xc00018a4d0 de.library.management.users.Address:0xc000180c30 de.library.management.users.MembershipType:0xc0001ce7e0 de.library.management.users.User:0xc0001bf320 de.library.management.users.UserStatus:0xc0001ce900]
2025/01/13 13:01:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"contents":{"kind":"markdown","value":"\n#### Identifier von [Book](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L40)\n\n---\n* **string [isbn](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L12)**\n\n* **int [copyNumber](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L15)**\n\n\n"},"range":{"start":{"line":47,"character":19},"end":{"line":47,"character":19}}}}
2025/01/13 13:01:20 hoverService.go:138: Trace | Finished Hover with Content: 
#### Identifier von [Book](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L40)

---
* **string [isbn](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L12)**

* **int [copyNumber](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L15)**



2025/01/13 13:01:22 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/13 13:01:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":43,"character":16}}}
2025/01/13 13:01:22 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 13:01:22 hoverService.go:106: Trace | Start Get File Content
2025/01/13 13:01:22 hoverService.go:114: Trace | Start Find Node
2025/01/13 13:01:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"contents":{"kind":"markdown","value":"\n#### int pageCount\n\n\n"},"range":{"start":{"line":43,"character":16},"end":{"line":43,"character":16}}}}
2025/01/13 13:01:22 hoverService.go:138: Trace | Finished Hover with Content: 
#### int pageCount



2025/01/13 13:01:23 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/13 13:01:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":43,"character":14}}}
2025/01/13 13:01:23 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 13:01:23 hoverService.go:106: Trace | Start Get File Content
2025/01/13 13:01:23 hoverService.go:114: Trace | Start Find Node
2025/01/13 13:01:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":{"contents":{"kind":"markdown","value":"\n#### int pageCount\n\n\n"},"range":{"start":{"line":43,"character":14},"end":{"line":43,"character":14}}}}
2025/01/13 13:01:23 hoverService.go:138: Trace | Finished Hover with Content: 
#### int pageCount



2025/01/13 13:01:25 util.go:36: Trace | Read Content-Length: 206 from Content-Length: 206
2025/01/13 13:01:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":43,"character":15}}}
2025/01/13 13:01:25 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 13:01:25 hoverService.go:106: Trace | Start Get File Content
2025/01/13 13:01:25 hoverService.go:114: Trace | Start Find Node
2025/01/13 13:01:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10","result":{"contents":{"kind":"markdown","value":"\n#### int pageCount\n\n\n"},"range":{"start":{"line":43,"character":15},"end":{"line":43,"character":15}}}}
2025/01/13 13:01:25 hoverService.go:138: Trace | Finished Hover with Content: 
#### int pageCount



2025/01/13 13:01:36 util.go:36: Trace | Read Content-Length: 206 from Content-Length: 206
2025/01/13 13:01:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"11","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":41,"character":16}}}
2025/01/13 13:01:36 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 13:01:36 hoverService.go:106: Trace | Start Get File Content
2025/01/13 13:01:36 hoverService.go:114: Trace | Start Find Node
2025/01/13 13:01:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"11","result":{"contents":{"kind":"markdown","value":"\n#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L30 \"Kategorisierung der MedienEnum Category in Package de.library.management.media\") category\n\n\n"},"range":{"start":{"line":41,"character":16},"end":{"line":41,"character":16}}}}
2025/01/13 13:01:36 hoverService.go:138: Trace | Finished Hover with Content: 
#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L30 "Kategorisierung der MedienEnum Category in Package de.library.management.media") category



2025/01/13 13:01:36 util.go:36: Trace | Read Content-Length: 206 from Content-Length: 206
2025/01/13 13:01:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"12","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":41,"character":21}}}
2025/01/13 13:01:36 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 13:01:36 hoverService.go:106: Trace | Start Get File Content
2025/01/13 13:01:36 hoverService.go:114: Trace | Start Find Node
2025/01/13 13:01:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"12","result":{"contents":{"kind":"markdown","value":"\n#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L30 \"Kategorisierung der MedienEnum Category in Package de.library.management.media\") category\n\n\n"},"range":{"start":{"line":41,"character":21},"end":{"line":41,"character":21}}}}
2025/01/13 13:01:36 hoverService.go:138: Trace | Finished Hover with Content: 
#### [Category](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L30 "Kategorisierung der MedienEnum Category in Package de.library.management.media") category



2025/01/13 13:02:03 util.go:36: Trace | Read Content-Length: 206 from Content-Length: 206
2025/01/13 13:02:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"13","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":39,"character":17}}}
2025/01/13 13:02:03 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 13:02:03 hoverService.go:106: Trace | Start Get File Content
2025/01/13 13:02:03 hoverService.go:114: Trace | Start Find Node
2025/01/13 13:02:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"13","result":{"contents":{"kind":"markdown","value":"\n#### Book\n###### Entity in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L7)\nDetaillierte Buchinformationen\n\n"},"range":{"start":{"line":39,"character":17},"end":{"line":39,"character":17}}}}
2025/01/13 13:02:03 hoverService.go:138: Trace | Finished Hover with Content: 
#### Book
###### Entity in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L7)
Detaillierte Buchinformationen


2025/01/13 13:02:04 util.go:36: Trace | Read Content-Length: 206 from Content-Length: 206
2025/01/13 13:02:04 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"14","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":45,"character":16}}}
2025/01/13 13:02:04 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 13:02:04 hoverService.go:106: Trace | Start Get File Content
2025/01/13 13:02:04 hoverService.go:114: Trace | Start Find Node
2025/01/13 13:02:04 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"14","result":{"contents":{"kind":"markdown","value":"\n#### string language\n\n\n"},"range":{"start":{"line":45,"character":16},"end":{"line":45,"character":16}}}}
2025/01/13 13:02:04 hoverService.go:138: Trace | Finished Hover with Content: 
#### string language



2025/01/13 14:17:42 util.go:36: Trace | Read Content-Length: 61 from Content-Length: 61
2025/01/13 14:17:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"15","method":"shutdown","params":null}
2025/01/13 14:17:42 server.go:94: INFO  | Received Shutdown Request
2025/01/13 14:17:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"15"}
2025/01/13 14:17:42 server.go:81: INFO  | Server Closed
2025/01/13 14:17:42 main.go:32: Server Shutdown
2025/01/13 14:17:43 fileService.go:35: Trace | FileChangeListeners: [0xc0000120f0]
2025/01/13 14:17:44 util.go:36: Trace | Read Content-Length: 3705 from Content-Length: 3705
2025/01/13 14:17:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":20136,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 14:17:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"hoverProvider":true,"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true,"semanticTokensProvider":{"legend":{"tokenTypes":["namespace","type","enum","interface","struct","parameter","variable","property","enumMember","function","comment","keyword","modifier"],"tokenModifiers":["declaration","definition","readonly","deprecated","documentation"]},"full":true}},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 14:17:44 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/13 14:17:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/13 14:17:44 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 14:17:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 14:17:44 server.go:107: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 14:17:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 14:17:44 util.go:36: Trace | Read Content-Length: 2973 from Content-Length: 2973
2025/01/13 14:17:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket für Medienverwaltung\n    package media {\n\n        // Basisstruktur für alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n        }\n\n        // Benutzerentität\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email);\n        }\n    }\n}\n"}}}
2025/01/13 14:17:44 server.go:110: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:17:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:17:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 98 101 102 111 114 101 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:17:44 util.go:36: Trace | Read Content-Length: 174 from Content-Length: 174
2025/01/13 14:17:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"}}}
2025/01/13 14:17:44 server.go:110: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:17:44 foldingService.go:218: Trace | Found 11 Comment Ranges
2025/01/13 14:17:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":[{"startLine":83,"startCharacter":25,"endLine":87,"endCharacter":8},{"startLine":90,"startCharacter":21,"endLine":102,"endCharacter":8},{"startLine":29,"startCharacter":23,"endLine":36,"endCharacter":8},{"startLine":39,"startCharacter":39,"endLine":48,"endCharacter":8},{"startLine":51,"startCharacter":43,"endLine":58,"endCharacter":8},{"startLine":62,"startCharacter":19,"endLine":103,"endCharacter":4},{"startLine":3,"startCharacter":31,"endLine":104,"endCharacter":0},{"startLine":6,"startCharacter":19,"endLine":59,"endCharacter":4},{"startLine":9,"startCharacter":26,"endLine":16,"endCharacter":8},{"startLine":19,"startCharacter":24,"endLine":26,"endCharacter":8},{"startLine":65,"startCharacter":24,"endLine":71,"endCharacter":8},{"startLine":74,"startCharacter":29,"endLine":80,"endCharacter":8},{"startLine":5,"startCharacter":1,"endLine":5,"endCharacter":35,"kind":"comment"},{"startLine":8,"startCharacter":1,"endLine":8,"endCharacter":38,"kind":"comment"},{"startLine":18,"startCharacter":1,"endLine":18,"endCharacter":27,"kind":"comment"},{"startLine":28,"startCharacter":1,"endLine":28,"endCharacter":29,"kind":"comment"},{"startLine":38,"startCharacter":1,"endLine":38,"endCharacter":33,"kind":"comment"},{"startLine":50,"startCharacter":1,"endLine":50,"endCharacter":31,"kind":"comment"},{"startLine":61,"startCharacter":1,"endLine":61,"endCharacter":21,"kind":"comment"},{"startLine":64,"startCharacter":1,"endLine":64,"endCharacter":22,"kind":"comment"},{"startLine":73,"startCharacter":1,"endLine":73,"endCharacter":30,"kind":"comment"},{"startLine":82,"startCharacter":1,"endLine":82,"endCharacter":17,"kind":"comment"},{"startLine":89,"startCharacter":1,"endLine":89,"endCharacter":19,"kind":"comment"}]}
2025/01/13 14:17:44 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:17:47 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/13 14:17:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":44,"character":19}}}
2025/01/13 14:17:47 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 14:17:47 hoverService.go:106: Trace | Start Get File Content
2025/01/13 14:17:47 hoverService.go:114: Trace | Start Find Node
2025/01/13 14:17:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"contents":{"kind":"markdown","value":"\n#### string publisher\n\n\n"},"range":{"start":{"line":44,"character":19},"end":{"line":44,"character":19}}}}
2025/01/13 14:17:47 hoverService.go:138: Trace | Finished Hover with Content: 
#### string publisher



2025/01/13 14:17:50 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/13 14:17:50 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":39,"character":14}}}
2025/01/13 14:17:50 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 14:17:50 hoverService.go:106: Trace | Start Get File Content
2025/01/13 14:17:50 hoverService.go:114: Trace | Start Find Node
2025/01/13 14:17:50 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":{"contents":{"kind":"markdown","value":"\n#### Book\n###### Entity in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L7)\nDetaillierte Buchinformationen\n\n"},"range":{"start":{"line":39,"character":14},"end":{"line":39,"character":14}}}}
2025/01/13 14:17:50 hoverService.go:138: Trace | Finished Hover with Content: 
#### Book
###### Entity in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L7)
Detaillierte Buchinformationen


2025/01/13 14:17:51 util.go:36: Trace | Read Content-Length: 205 from Content-Length: 205
2025/01/13 14:17:51 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":25,"character":11}}}
2025/01/13 14:17:51 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 14:17:51 hoverService.go:106: Trace | Start Get File Content
2025/01/13 14:17:51 hoverService.go:114: Trace | Start Find Node
2025/01/13 14:17:51 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"contents":{"kind":"markdown","value":"\n#### MediaType\n###### Enum in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L7)\nVerschiedene Medientypen\n\n"},"range":{"start":{"line":25,"character":11},"end":{"line":25,"character":11}}}}
2025/01/13 14:17:51 hoverService.go:138: Trace | Finished Hover with Content: 
#### MediaType
###### Enum in Package [de.library.management.media](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L7)
Verschiedene Medientypen


2025/01/13 14:17:53 util.go:36: Trace | Read Content-Length: 203 from Content-Length: 203
2025/01/13 14:17:53 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/hover","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":6,"character":8}}}
2025/01/13 14:17:53 server.go:110: INFO  | Handle Method: textDocument/hover 
2025/01/13 14:17:53 hoverService.go:106: Trace | Start Get File Content
2025/01/13 14:17:53 hoverService.go:114: Trace | Start Find Node
2025/01/13 14:17:53 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"contents":{"kind":"markdown","value":"\n#### media\n###### Package in Package [de.library.management](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L4)\nBasispaket für Medienverwaltung\n\n"},"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":8}}}}
2025/01/13 14:17:53 hoverService.go:138: Trace | Finished Hover with Content: 
#### media
###### Package in Package [de.library.management](file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf#L4)
Basispaket für Medienverwaltung


2025/01/13 14:19:00 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/13 14:19:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"shutdown","params":null}
2025/01/13 14:19:00 server.go:94: INFO  | Received Shutdown Request
2025/01/13 14:19:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7"}
2025/01/13 14:19:00 server.go:81: INFO  | Server Closed
2025/01/13 14:19:00 main.go:32: Server Shutdown
2025/01/13 14:19:01 fileService.go:35: Trace | FileChangeListeners: [0xc0000c00d8]
2025/01/13 14:19:01 util.go:36: Trace | Read Content-Length: 3705 from Content-Length: 3705
2025/01/13 14:19:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":20136,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 14:19:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true,"semanticTokensProvider":{"legend":{"tokenTypes":["namespace","type","enum","interface","struct","parameter","variable","property","enumMember","function","comment","keyword","modifier"],"tokenModifiers":["declaration","definition","readonly","deprecated","documentation"]},"full":true}},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 14:19:01 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/13 14:19:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/13 14:19:01 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 14:19:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 14:19:01 server.go:106: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 14:19:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 14:19:01 util.go:36: Trace | Read Content-Length: 2973 from Content-Length: 2973
2025/01/13 14:19:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket für Medienverwaltung\n    package media {\n\n        // Basisstruktur für alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n        }\n\n        // Benutzerentität\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email);\n        }\n    }\n}\n"}}}
2025/01/13 14:19:01 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:19:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:19:01 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 98 101 102 111 114 101 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:19:01 util.go:36: Trace | Read Content-Length: 174 from Content-Length: 174
2025/01/13 14:19:01 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"}}}
2025/01/13 14:19:01 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:19:01 foldingService.go:218: Trace | Found 11 Comment Ranges
2025/01/13 14:19:01 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":[{"startLine":6,"startCharacter":19,"endLine":59,"endCharacter":4},{"startLine":62,"startCharacter":19,"endLine":103,"endCharacter":4},{"startLine":83,"startCharacter":25,"endLine":87,"endCharacter":8},{"startLine":90,"startCharacter":21,"endLine":102,"endCharacter":8},{"startLine":51,"startCharacter":43,"endLine":58,"endCharacter":8},{"startLine":65,"startCharacter":24,"endLine":71,"endCharacter":8},{"startLine":74,"startCharacter":29,"endLine":80,"endCharacter":8},{"startLine":3,"startCharacter":31,"endLine":104,"endCharacter":0},{"startLine":9,"startCharacter":26,"endLine":16,"endCharacter":8},{"startLine":19,"startCharacter":24,"endLine":26,"endCharacter":8},{"startLine":29,"startCharacter":23,"endLine":36,"endCharacter":8},{"startLine":39,"startCharacter":39,"endLine":48,"endCharacter":8},{"startLine":5,"startCharacter":1,"endLine":5,"endCharacter":35,"kind":"comment"},{"startLine":8,"startCharacter":1,"endLine":8,"endCharacter":38,"kind":"comment"},{"startLine":18,"startCharacter":1,"endLine":18,"endCharacter":27,"kind":"comment"},{"startLine":28,"startCharacter":1,"endLine":28,"endCharacter":29,"kind":"comment"},{"startLine":38,"startCharacter":1,"endLine":38,"endCharacter":33,"kind":"comment"},{"startLine":50,"startCharacter":1,"endLine":50,"endCharacter":31,"kind":"comment"},{"startLine":61,"startCharacter":1,"endLine":61,"endCharacter":21,"kind":"comment"},{"startLine":64,"startCharacter":1,"endLine":64,"endCharacter":22,"kind":"comment"},{"startLine":73,"startCharacter":1,"endLine":73,"endCharacter":30,"kind":"comment"},{"startLine":82,"startCharacter":1,"endLine":82,"endCharacter":17,"kind":"comment"},{"startLine":89,"startCharacter":1,"endLine":89,"endCharacter":19,"kind":"comment"}]}
2025/01/13 14:19:01 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:21:42 util.go:36: Trace | Read Content-Length: 248 from Content-Length: 248
2025/01/13 14:21:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/references","params":{"context":{"includeDeclaration":true},"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"},"position":{"line":18,"character":34}}}
2025/01/13 14:21:42 server.go:109: INFO  | Handle Method: textDocument/references 
2025/01/13 14:21:42 referenceService.go:91: Trace | Found Nodes for References: [<nil> <nil> <nil> 0xc000016320]
2025/01/13 14:21:43 fileService.go:35: Trace | FileChangeListeners: [0xc0000120f0]
2025/01/13 14:21:43 util.go:36: Trace | Read Content-Length: 3705 from Content-Length: 3705
2025/01/13 14:21:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":20136,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 14:21:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true,"semanticTokensProvider":{"legend":{"tokenTypes":["namespace","type","enum","interface","struct","parameter","variable","property","enumMember","function","comment","keyword","modifier"],"tokenModifiers":["declaration","definition","readonly","deprecated","documentation"]},"full":true}},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 14:21:43 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/13 14:21:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/13 14:21:43 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 14:21:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 14:21:43 server.go:106: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 14:21:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 14:21:43 util.go:36: Trace | Read Content-Length: 2973 from Content-Length: 2973
2025/01/13 14:21:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"edit\" version 1.0.0\n\npackage de.library.management {\n\n    // Basispaket für Medienverwaltung\n    package media {\n\n        // Basisstruktur für alle Medientypen\n        struct MediaItem {\n            arg string title;\n            arg string isbn;\n            arg date publishedDate;\n            arg double price;\n            arg int copyNumber;\n            func boolean isAvailable(int copyId);\n        }\n\n        // Verschiedene Medientypen\n        enum MediaType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIO_BOOK(_);\n            DVD(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n        }\n\n        // Kategorisierung der Medien\n        enum Category {\n            arg string name;\n            FICTION(1, \"Belletristik\");\n            NON_FICTION(2, \"Sachbuch\");\n            CHILDREN(3, \"Kinderbuch\");\n            SCIENCE(4, \"Wissenschaft\");\n            HISTORY(5, \"Geschichte\");\n        }\n\n        // Detaillierte Buchinformationen\n        entity Book extends MediaItem {\n            arg string author;\n            ref .Category category;\n            ref .MediaType type;\n            arg int pageCount;\n            arg string publisher;\n            arg string language;\n\n            identifier(isbn, copyNumber);\n        }\n\n        // Verwaltung von Zeitschriften\n        entity Magazine extends MediaItem {\n            arg int issueNumber;\n            arg string publisher;\n            arg boolean isSubscription;\n            arg date validUntil;\n\n            identifier(isbn, issueNumber);\n        }\n    }\n\n    // Benutzerverwaltung\n    package users {\n\n        // Adressinformationen\n        struct Address {\n            arg string street;\n            arg string houseNumber;\n            arg string postalCode;\n            arg string city;\n            arg string country;\n        }\n\n        // Verschiedene Mitgliedsarten\n        enum MembershipType {\n            arg int preis;\n            arg date startdatum;\n            STANDARD(1, 10, D2024-01-01);\n            PREMIUM(2, 20, D2024-01-01);\n            STUDENT(3, 15, D2024-01-01);\n        }\n\n        // Benutzerstatus\n        enum UserStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            EXPIRED(_);\n        }\n\n        // Benutzerentität\n        entity User {\n            arg string firstName;\n            arg string lastName;\n            arg date dateOfBirth;\n            arg string email;\n            ref .Address address;\n            ref .MembershipType membershipType;\n            ref .UserStatus status;\n            arg date memberSince;\n            arg date membershipExpiry;\n\n            identifier(email);\n        }\n    }\n}\n"}}}
2025/01/13 14:21:43 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:21:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:21:43 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 101 100 105 116 45 98 101 102 111 114 101 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:15 util.go:36: Trace | Read Content-Length: 1166 from Content-Length: 1166
2025/01/13 14:22:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar über Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund {\n\n         }\n    }\n}"}}}
2025/01/13 14:22:15 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:22:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:22:15 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:15 util.go:36: Trace | Read Content-Length: 167 from Content-Length: 167
2025/01/13 14:22:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"}}}
2025/01/13 14:22:15 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:15 foldingService.go:218: Trace | Found 6 Comment Ranges
2025/01/13 14:22:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":[{"startLine":5,"startCharacter":19,"endLine":32,"endCharacter":4},{"startLine":13,"startCharacter":18,"endLine":16,"endCharacter":8},{"startLine":35,"startCharacter":18,"endLine":53,"endCharacter":4},{"startLine":54,"startCharacter":19,"endLine":58,"endCharacter":4},{"startLine":3,"startCharacter":23,"endLine":59,"endCharacter":0},{"startLine":7,"startCharacter":20,"endLine":10,"endCharacter":8},{"startLine":19,"startCharacter":24,"endLine":24,"endCharacter":8},{"startLine":26,"startCharacter":26,"endLine":28,"endCharacter":8},{"startLine":37,"startCharacter":21,"endLine":38,"endCharacter":8},{"startLine":41,"startCharacter":21,"endLine":49,"endCharacter":8},{"startLine":50,"startCharacter":35,"endLine":52,"endCharacter":8},{"startLine":55,"startCharacter":27,"endLine":57,"endCharacter":9},{"startLine":4,"startCharacter":1,"endLine":4,"endCharacter":21,"kind":"comment"},{"startLine":12,"startCharacter":1,"endLine":12,"endCharacter":20,"kind":"comment"},{"startLine":18,"startCharacter":1,"endLine":18,"endCharacter":24,"kind":"comment"},{"startLine":36,"startCharacter":1,"endLine":36,"endCharacter":25,"kind":"comment"},{"startLine":42,"startCharacter":14,"endLine":43,"endCharacter":20,"kind":"comment"},{"startLine":46,"startCharacter":1,"endLine":46,"endCharacter":20,"kind":"comment"}]}
2025/01/13 14:22:15 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:15 util.go:36: Trace | Read Content-Length: 174 from Content-Length: 174
2025/01/13 14:22:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"}}}
2025/01/13 14:22:15 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"data":null}}
2025/01/13 14:22:33 util.go:36: Trace | Read Content-Length: 201 from Content-Length: 201
2025/01/13 14:22:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","languageId":"klein.dmf","version":1,"text":""}}}
2025/01/13 14:22:33 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:22:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":1,"diagnostics":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:1:0\n\n\nkeine DMF Deklaration vorhanden\n","message":"keine DMF Deklaration vorhanden"}]}}
2025/01/13 14:22:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 48 44 34 99 104 97 114 97 99 116 101 114 34 58 48 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 48 44 34 99 104 97 114 97 99 116 101 114 34 58 48 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 58 48 92 110 92 110 92 110 107 101 105 110 101 32 68 77 70 32 68 101 107 108 97 114 97 116 105 111 110 32 118 111 114 104 97 110 100 101 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 107 101 105 110 101 32 68 77 70 32 68 101 107 108 97 114 97 116 105 111 110 32 118 111 114 104 97 110 100 101 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:22:35 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:22:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:35 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:35 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":[]}
2025/01/13 14:22:35 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:35 util.go:36: Trace | Read Content-Length: 175 from Content-Length: 175
2025/01/13 14:22:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:35 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"data":null}}
2025/01/13 14:22:39 util.go:36: Trace | Read Content-Length: 361 from Content-Length: 361
2025/01/13 14:22:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {"}]}}
2025/01/13 14:22:39 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":2,"diagnostics":[]}}
2025/01/13 14:22:39 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:39 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:22:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:39 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:39 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":[{"startLine":3,"startCharacter":23,"endLine":3,"endCharacter":22}]}
2025/01/13 14:22:39 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:39 util.go:36: Trace | Read Content-Length: 175 from Content-Length: 175
2025/01/13 14:22:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:39 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"data":null}}
2025/01/13 14:22:39 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:22:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":3,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":23},"end":{"line":3,"character":23}},"rangeLength":0,"text":"\n"}]}}
2025/01/13 14:22:39 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":3,"diagnostics":[]}}
2025/01/13 14:22:39 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:40 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:22:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:40 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:40 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":[{"startLine":3,"startCharacter":23,"endLine":3,"endCharacter":22}]}
2025/01/13 14:22:40 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:40 util.go:36: Trace | Read Content-Length: 175 from Content-Length: 175
2025/01/13 14:22:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:40 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":{"data":null}}
2025/01/13 14:22:40 util.go:36: Trace | Read Content-Length: 290 from Content-Length: 290
2025/01/13 14:22:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":4,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":0}},"rangeLength":0,"text":"}"}]}}
2025/01/13 14:22:40 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":4,"diagnostics":[]}}
2025/01/13 14:22:40 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:40 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:22:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:40 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:40 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10","result":[{"startLine":3,"startCharacter":23,"endLine":4,"endCharacter":0}]}
2025/01/13 14:22:40 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:40 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:22:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"11","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:40 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"11","result":{"data":null}}
2025/01/13 14:22:44 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:22:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":5,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":21}},"rangeLength":0,"text":"-"}]}}
2025/01/13 14:22:44 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":5,"diagnostics":[]}}
2025/01/13 14:22:44 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:44 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:22:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"12","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:44 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:44 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"12","result":[{"startLine":3,"startCharacter":24,"endLine":4,"endCharacter":0}]}
2025/01/13 14:22:44 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:44 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:22:44 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"13","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:44 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:44 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"13","result":{"data":null}}
2025/01/13 14:22:45 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:22:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":6,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":22},"end":{"line":3,"character":22}},"rangeLength":0,"text":"k"}]}}
2025/01/13 14:22:45 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":6,"diagnostics":[]}}
2025/01/13 14:22:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:45 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:22:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":7,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":23},"end":{"line":3,"character":23}},"rangeLength":0,"text":"l"}]}}
2025/01/13 14:22:45 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":7,"diagnostics":[]}}
2025/01/13 14:22:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:45 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:22:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"14","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:45 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:45 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"14","result":[{"startLine":3,"startCharacter":26,"endLine":4,"endCharacter":0}]}
2025/01/13 14:22:45 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:45 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:22:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"15","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:45 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"15","result":{"data":null}}
2025/01/13 14:22:45 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:22:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":8,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":24},"end":{"line":3,"character":24}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:22:45 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":8,"diagnostics":[]}}
2025/01/13 14:22:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:45 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:22:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":9,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":25},"end":{"line":3,"character":25}},"rangeLength":0,"text":"i"}]}}
2025/01/13 14:22:45 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":9,"diagnostics":[]}}
2025/01/13 14:22:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:45 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:22:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":10,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":26},"end":{"line":3,"character":26}},"rangeLength":0,"text":"n"}]}}
2025/01/13 14:22:45 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":10,"diagnostics":[]}}
2025/01/13 14:22:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:45 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:22:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"16","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:45 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:45 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"16","result":[{"startLine":3,"startCharacter":29,"endLine":4,"endCharacter":0}]}
2025/01/13 14:22:45 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:45 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:22:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"17","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:45 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"17","result":{"data":null}}
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":11,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":26},"end":{"line":3,"character":27}},"rangeLength":1,"text":""}]}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":11,"diagnostics":[]}}
2025/01/13 14:22:46 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"18","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:46 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"18","result":[{"startLine":3,"startCharacter":28,"endLine":4,"endCharacter":0}]}
2025/01/13 14:22:46 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"19","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"19","result":{"data":null}}
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":12,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":25},"end":{"line":3,"character":26}},"rangeLength":1,"text":""}]}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":12,"diagnostics":[]}}
2025/01/13 14:22:46 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"20","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:46 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"20","result":[{"startLine":3,"startCharacter":27,"endLine":4,"endCharacter":0}]}
2025/01/13 14:22:46 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"21","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"21","result":{"data":null}}
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":13,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":24},"end":{"line":3,"character":25}},"rangeLength":1,"text":""}]}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":13,"diagnostics":[]}}
2025/01/13 14:22:46 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"22","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:46 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"22","result":[{"startLine":3,"startCharacter":26,"endLine":4,"endCharacter":0}]}
2025/01/13 14:22:46 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"23","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"23","result":{"data":null}}
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":14,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":23},"end":{"line":3,"character":24}},"rangeLength":1,"text":""}]}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":14,"diagnostics":[]}}
2025/01/13 14:22:46 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"24","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:46 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"24","result":[{"startLine":3,"startCharacter":25,"endLine":4,"endCharacter":0}]}
2025/01/13 14:22:46 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"25","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"25","result":{"data":null}}
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":15,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":22},"end":{"line":3,"character":23}},"rangeLength":1,"text":""}]}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":15,"diagnostics":[]}}
2025/01/13 14:22:46 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"26","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:46 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"26","result":[{"startLine":3,"startCharacter":24,"endLine":4,"endCharacter":0}]}
2025/01/13 14:22:46 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:46 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:22:46 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"27","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:46 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:46 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"27","result":{"data":null}}
2025/01/13 14:22:47 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:22:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":16,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":22}},"rangeLength":1,"text":""}]}}
2025/01/13 14:22:47 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":16,"diagnostics":[]}}
2025/01/13 14:22:47 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:47 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:22:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"28","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:47 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:47 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"28","result":[{"startLine":3,"startCharacter":23,"endLine":4,"endCharacter":0}]}
2025/01/13 14:22:47 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:47 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:22:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"29","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:47 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"29","result":{"data":null}}
2025/01/13 14:22:47 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:22:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":17,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":21},"end":{"line":3,"character":21}},"rangeLength":0,"text":"."}]}}
2025/01/13 14:22:47 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":17,"diagnostics":[]}}
2025/01/13 14:22:47 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:47 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:22:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"30","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:47 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:47 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"30","result":[{"startLine":3,"startCharacter":24,"endLine":4,"endCharacter":0}]}
2025/01/13 14:22:47 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:47 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:22:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"31","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:47 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"31","result":{"data":null}}
2025/01/13 14:22:47 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:22:47 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":18,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":22},"end":{"line":3,"character":22}},"rangeLength":0,"text":"k"}]}}
2025/01/13 14:22:47 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:47 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":18,"diagnostics":[]}}
2025/01/13 14:22:47 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:48 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:22:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":19,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":23},"end":{"line":3,"character":23}},"rangeLength":0,"text":"l"}]}}
2025/01/13 14:22:48 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":19,"diagnostics":[]}}
2025/01/13 14:22:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:48 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:22:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":20,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":24},"end":{"line":3,"character":24}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:22:48 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":20,"diagnostics":[]}}
2025/01/13 14:22:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:48 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:22:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":21,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":25},"end":{"line":3,"character":25}},"rangeLength":0,"text":"i"}]}}
2025/01/13 14:22:48 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":21,"diagnostics":[]}}
2025/01/13 14:22:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:48 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:22:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":22,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":26},"end":{"line":3,"character":26}},"rangeLength":0,"text":"n"}]}}
2025/01/13 14:22:48 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":22,"diagnostics":[]}}
2025/01/13 14:22:48 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:48 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:22:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"32","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:48 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:48 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"32","result":[{"startLine":3,"startCharacter":29,"endLine":4,"endCharacter":0}]}
2025/01/13 14:22:48 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:48 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:22:48 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"33","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:48 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:48 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"33","result":{"data":null}}
2025/01/13 14:22:49 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:22:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":23,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":3,"character":29},"end":{"line":3,"character":29}},"rangeLength":0,"text":"\n"}]}}
2025/01/13 14:22:49 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:22:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":23,"diagnostics":[]}}
2025/01/13 14:22:49 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:22:49 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:22:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"34","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:49 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:22:49 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:22:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"34","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:22:49 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:22:49 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:22:49 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"35","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:22:49 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:22:49 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"35","result":{"data":null}}
2025/01/13 14:23:04 util.go:36: Trace | Read Content-Length: 241 from Content-Length: 241
2025/01/13 14:23:04 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"36","method":"textDocument/references","params":{"context":{"includeDeclaration":true},"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"position":{"line":5,"character":1}}}
2025/01/13 14:23:04 server.go:109: INFO  | Handle Method: textDocument/references 
2025/01/13 14:23:04 referenceService.go:91: Trace | Found Nodes for References: []
2025/01/13 14:23:04 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"36","result":null}
2025/01/13 14:23:04 referenceService.go:102: Trace | Finished References request
2025/01/13 14:23:09 util.go:36: Trace | Read Content-Length: 161 from Content-Length: 161
2025/01/13 14:23:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/edit-before.dmf"}}}
2025/01/13 14:23:09 server.go:109: INFO  | Handle Method: textDocument/didClose 
2025/01/13 14:23:12 util.go:36: Trace | Read Content-Length: 154 from Content-Length: 154
2025/01/13 14:23:12 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"}}}
2025/01/13 14:23:12 server.go:109: INFO  | Handle Method: textDocument/didClose 
2025/01/13 14:23:23 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:23:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":24,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":0},"end":{"line":4,"character":0}},"rangeLength":0,"text":"    "}]}}
2025/01/13 14:23:23 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":24,"diagnostics":[]}}
2025/01/13 14:23:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:23 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"37","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:23 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:23 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"37","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:23 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:23 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"38","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:23 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"38","result":{"data":null}}
2025/01/13 14:23:23 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:23:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":25,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":4},"end":{"line":4,"character":4}},"rangeLength":0,"text":"    "}]}}
2025/01/13 14:23:23 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":25,"diagnostics":[]}}
2025/01/13 14:23:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:23 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"39","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:23 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:23 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"39","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:23 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:23 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"40","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:23 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"40","result":{"data":null}}
2025/01/13 14:23:23 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/13 14:23:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":26,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":8},"end":{"line":4,"character":8}},"rangeLength":0,"text":"s"}]}}
2025/01/13 14:23:23 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":26,"diagnostics":[]}}
2025/01/13 14:23:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:23 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"41","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:23 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:23 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"41","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:23 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:23 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"42","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:23 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"42","result":{"data":null}}
2025/01/13 14:23:23 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/13 14:23:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":27,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":9},"end":{"line":4,"character":9}},"rangeLength":0,"text":"t"}]}}
2025/01/13 14:23:23 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":27,"diagnostics":[]}}
2025/01/13 14:23:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:23 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":28,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":10},"end":{"line":4,"character":10}},"rangeLength":0,"text":"r"}]}}
2025/01/13 14:23:23 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":28,"diagnostics":[]}}
2025/01/13 14:23:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:23 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"43","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:23 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:23 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"43","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:23 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:23 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"44","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:23 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"44","result":{"data":null}}
2025/01/13 14:23:24 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":29,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":11},"end":{"line":4,"character":11}},"rangeLength":0,"text":"u"}]}}
2025/01/13 14:23:24 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":29,"diagnostics":[]}}
2025/01/13 14:23:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:24 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"45","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:24 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:24 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"45","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:24 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:24 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"46","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:24 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"46","result":{"data":null}}
2025/01/13 14:23:24 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":30,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":12},"end":{"line":4,"character":12}},"rangeLength":0,"text":"c"}]}}
2025/01/13 14:23:24 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":30,"diagnostics":[]}}
2025/01/13 14:23:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:24 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"47","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:24 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:24 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"47","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:24 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:24 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"48","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:24 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"48","result":{"data":null}}
2025/01/13 14:23:24 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":31,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":13},"end":{"line":4,"character":13}},"rangeLength":0,"text":"t"}]}}
2025/01/13 14:23:24 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":31,"diagnostics":[]}}
2025/01/13 14:23:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:24 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"49","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:24 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:24 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"49","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:24 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:24 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"50","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:24 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"50","result":{"data":null}}
2025/01/13 14:23:24 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":32,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":14},"end":{"line":4,"character":14}},"rangeLength":0,"text":" "}]}}
2025/01/13 14:23:24 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":32,"diagnostics":[]}}
2025/01/13 14:23:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:25 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"51","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:25 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:25 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"51","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:25 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:25 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"52","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:25 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"52","result":{"data":null}}
2025/01/13 14:23:26 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":33,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":15},"end":{"line":4,"character":15}},"rangeLength":0,"text":"T"}]}}
2025/01/13 14:23:26 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":33,"diagnostics":[]}}
2025/01/13 14:23:26 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:26 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"53","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:26 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:26 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"53","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:26 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:26 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"54","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:26 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"54","result":{"data":null}}
2025/01/13 14:23:27 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":34,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":16},"end":{"line":4,"character":16}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:23:27 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":34,"diagnostics":[]}}
2025/01/13 14:23:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:27 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"55","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:27 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:27 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"55","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:27 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:27 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"56","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:27 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"56","result":{"data":null}}
2025/01/13 14:23:27 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":35,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":17},"end":{"line":4,"character":17}},"rangeLength":0,"text":"s"}]}}
2025/01/13 14:23:27 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":35,"diagnostics":[]}}
2025/01/13 14:23:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:27 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"57","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:27 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:27 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"57","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:27 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:27 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"58","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:27 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"58","result":{"data":null}}
2025/01/13 14:23:27 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":36,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":18},"end":{"line":4,"character":18}},"rangeLength":0,"text":"t"}]}}
2025/01/13 14:23:27 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":36,"diagnostics":[]}}
2025/01/13 14:23:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:27 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"59","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:27 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:27 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"59","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:27 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:27 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"60","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:27 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"60","result":{"data":null}}
2025/01/13 14:23:27 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:23:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":37,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":18},"end":{"line":4,"character":19}},"rangeLength":1,"text":""}]}}
2025/01/13 14:23:27 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":37,"diagnostics":[]}}
2025/01/13 14:23:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:28 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"61","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:28 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:28 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"61","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:28 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:28 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"62","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:28 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"62","result":{"data":null}}
2025/01/13 14:23:28 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:23:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":38,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":17},"end":{"line":4,"character":18}},"rangeLength":1,"text":""}]}}
2025/01/13 14:23:28 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":38,"diagnostics":[]}}
2025/01/13 14:23:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:28 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"63","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:28 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:28 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"63","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:28 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:28 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"64","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:28 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"64","result":{"data":null}}
2025/01/13 14:23:28 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:23:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":39,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":16},"end":{"line":4,"character":17}},"rangeLength":1,"text":""}]}}
2025/01/13 14:23:28 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":39,"diagnostics":[]}}
2025/01/13 14:23:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:28 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"65","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:28 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:28 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"65","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:28 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:28 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"66","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:28 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"66","result":{"data":null}}
2025/01/13 14:23:29 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":40,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":16},"end":{"line":4,"character":16}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:23:29 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":40,"diagnostics":[]}}
2025/01/13 14:23:29 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:29 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"67","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:29 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:29 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"67","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:29 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:29 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"68","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:29 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"68","result":{"data":null}}
2025/01/13 14:23:29 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":41,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":17},"end":{"line":4,"character":17}},"rangeLength":0,"text":"t"}]}}
2025/01/13 14:23:29 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":41,"diagnostics":[]}}
2025/01/13 14:23:29 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:29 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":42,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":18},"end":{"line":4,"character":18}},"rangeLength":0,"text":"r"}]}}
2025/01/13 14:23:29 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":42,"diagnostics":[]}}
2025/01/13 14:23:29 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:29 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"69","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:29 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:29 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"69","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:29 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:29 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"70","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:29 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"70","result":{"data":null}}
2025/01/13 14:23:29 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":43,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":19},"end":{"line":4,"character":19}},"rangeLength":0,"text":"a"}]}}
2025/01/13 14:23:29 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":43,"diagnostics":[]}}
2025/01/13 14:23:29 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:29 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"71","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:29 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:29 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"71","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:29 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:29 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"72","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:29 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"72","result":{"data":null}}
2025/01/13 14:23:30 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":44,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":20},"end":{"line":4,"character":20}},"rangeLength":0,"text":"p"}]}}
2025/01/13 14:23:30 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":44,"diagnostics":[]}}
2025/01/13 14:23:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:30 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"73","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:30 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:30 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"73","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:30 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:30 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"74","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:30 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"74","result":{"data":null}}
2025/01/13 14:23:30 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":45,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":21},"end":{"line":4,"character":21}},"rangeLength":0,"text":"a"}]}}
2025/01/13 14:23:30 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":45,"diagnostics":[]}}
2025/01/13 14:23:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:30 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"75","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:30 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:30 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"75","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:30 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:30 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"76","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:30 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"76","result":{"data":null}}
2025/01/13 14:23:30 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":46,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":22},"end":{"line":4,"character":22}},"rangeLength":0,"text":"c"}]}}
2025/01/13 14:23:30 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":46,"diagnostics":[]}}
2025/01/13 14:23:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:30 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"77","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:30 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:30 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"77","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:30 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:30 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"78","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:30 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"78","result":{"data":null}}
2025/01/13 14:23:30 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":47,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":23},"end":{"line":4,"character":23}},"rangeLength":0,"text":"k"}]}}
2025/01/13 14:23:30 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":47,"diagnostics":[]}}
2025/01/13 14:23:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:30 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"79","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:30 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:30 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"79","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:30 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:30 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"80","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:30 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"80","result":{"data":null}}
2025/01/13 14:23:31 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:23:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":48,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":23},"end":{"line":4,"character":24}},"rangeLength":1,"text":""}]}}
2025/01/13 14:23:31 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":48,"diagnostics":[]}}
2025/01/13 14:23:31 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:31 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"81","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:31 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:31 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"81","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:31 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:31 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"82","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:31 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"82","result":{"data":null}}
2025/01/13 14:23:31 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:23:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":49,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":22},"end":{"line":4,"character":23}},"rangeLength":1,"text":""}]}}
2025/01/13 14:23:31 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":49,"diagnostics":[]}}
2025/01/13 14:23:31 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:31 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"83","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:31 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:31 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"83","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:31 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:31 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"84","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:31 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"84","result":{"data":null}}
2025/01/13 14:23:31 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":50,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":22},"end":{"line":4,"character":22}},"rangeLength":0,"text":"k"}]}}
2025/01/13 14:23:31 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":50,"diagnostics":[]}}
2025/01/13 14:23:31 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:31 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"85","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:31 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:31 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"85","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:31 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:31 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"86","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:31 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"86","result":{"data":null}}
2025/01/13 14:23:32 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":51,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":23},"end":{"line":4,"character":23}},"rangeLength":0,"text":"t"}]}}
2025/01/13 14:23:32 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":51,"diagnostics":[]}}
2025/01/13 14:23:32 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:32 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"87","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:32 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:32 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"87","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:32 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:32 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"88","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:32 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"88","result":{"data":null}}
2025/01/13 14:23:33 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:23:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":52,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":23},"end":{"line":4,"character":24}},"rangeLength":1,"text":""}]}}
2025/01/13 14:23:33 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":52,"diagnostics":[]}}
2025/01/13 14:23:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:33 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"89","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:33 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:33 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"89","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:33 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:33 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"90","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:33 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"90","result":{"data":null}}
2025/01/13 14:23:33 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:23:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":53,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":22},"end":{"line":4,"character":23}},"rangeLength":1,"text":""}]}}
2025/01/13 14:23:33 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":53,"diagnostics":[]}}
2025/01/13 14:23:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:33 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"91","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:33 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:33 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"91","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:33 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:33 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"92","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:33 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"92","result":{"data":null}}
2025/01/13 14:23:33 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":54,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":22},"end":{"line":4,"character":22}},"rangeLength":0,"text":"c"}]}}
2025/01/13 14:23:33 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":54,"diagnostics":[]}}
2025/01/13 14:23:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:33 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"93","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:33 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:33 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"93","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:33 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:33 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"94","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:33 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"94","result":{"data":null}}
2025/01/13 14:23:33 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":55,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":23},"end":{"line":4,"character":23}},"rangeLength":0,"text":"k"}]}}
2025/01/13 14:23:33 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":55,"diagnostics":[]}}
2025/01/13 14:23:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:33 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"95","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:33 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:33 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"95","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:33 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:33 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"96","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:33 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"96","result":{"data":null}}
2025/01/13 14:23:34 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":56,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":24},"end":{"line":4,"character":24}},"rangeLength":0,"text":" "}]}}
2025/01/13 14:23:34 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":56,"diagnostics":[]}}
2025/01/13 14:23:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:34 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"97","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:34 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:34 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"97","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:34 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:34 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:23:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"98","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:34 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"98","result":{"data":null}}
2025/01/13 14:23:34 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:23:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":57,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":25},"end":{"line":4,"character":25}},"rangeLength":0,"text":"{"}]}}
2025/01/13 14:23:34 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":57,"diagnostics":[]}}
2025/01/13 14:23:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:34 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:23:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"99","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:34 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:34 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"99","result":[{"startLine":3,"startCharacter":29,"endLine":5,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":5,"endCharacter":0}]}
2025/01/13 14:23:34 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:34 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:23:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"100","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:34 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"100","result":{"data":null}}
2025/01/13 14:23:35 util.go:36: Trace | Read Content-Length: 302 from Content-Length: 302
2025/01/13 14:23:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":58,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":4,"character":26},"end":{"line":4,"character":26}},"rangeLength":0,"text":"\n        "}]}}
2025/01/13 14:23:35 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":58,"diagnostics":[]}}
2025/01/13 14:23:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:35 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:23:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"101","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:35 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:35 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"101","result":[{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":0},{"startLine":3,"startCharacter":29,"endLine":6,"endCharacter":0}]}
2025/01/13 14:23:35 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:35 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:23:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"102","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:35 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"102","result":{"data":null}}
2025/01/13 14:23:35 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/13 14:23:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":59,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":8}},"rangeLength":0,"text":"}"}]}}
2025/01/13 14:23:35 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":59,"diagnostics":[]}}
2025/01/13 14:23:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:36 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:23:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"103","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:36 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:36 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"103","result":[{"startLine":3,"startCharacter":29,"endLine":6,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":5,"endCharacter":8}]}
2025/01/13 14:23:36 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:36 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:23:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"104","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:36 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"104","result":{"data":null}}
2025/01/13 14:23:36 util.go:36: Trace | Read Content-Length: 300 from Content-Length: 300
2025/01/13 14:23:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":60,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":8}},"rangeLength":0,"text":"\n        "}]}}
2025/01/13 14:23:36 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":60,"diagnostics":[]}}
2025/01/13 14:23:36 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:37 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:23:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"105","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:37 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:37 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"105","result":[{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8}]}
2025/01/13 14:23:37 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:37 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:23:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"106","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:37 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"106","result":{"data":null}}
2025/01/13 14:23:37 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:23:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":61,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":8},"end":{"line":5,"character":8}},"rangeLength":0,"text":"    "}]}}
2025/01/13 14:23:37 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:23:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":61,"diagnostics":[]}}
2025/01/13 14:23:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:23:37 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:23:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"107","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:37 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:23:37 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:23:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"107","result":[{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8}]}
2025/01/13 14:23:37 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:23:37 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:23:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"108","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:23:37 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:23:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"108","result":{"data":null}}
2025/01/13 14:24:06 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":62,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":12}},"rangeLength":0,"text":"a"}]}}
2025/01/13 14:24:06 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":62,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":13}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            a\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:24:06 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:06 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"109","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:06 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:06 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"109","result":[{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8}]}
2025/01/13 14:24:06 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:06 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"110","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:06 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"110","result":{"data":null}}
2025/01/13 14:24:06 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":63,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":13},"end":{"line":5,"character":13}},"rangeLength":0,"text":"r"}]}}
2025/01/13 14:24:06 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":63,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":14}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            ar\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:24:06 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:06 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"111","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:06 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:06 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"111","result":[{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8}]}
2025/01/13 14:24:06 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:06 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"112","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:06 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"112","result":{"data":null}}
2025/01/13 14:24:06 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":64,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":14},"end":{"line":5,"character":14}},"rangeLength":0,"text":"g"}]}}
2025/01/13 14:24:06 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":64,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":15}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:24:06 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 53 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:07 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"113","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:07 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:07 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"113","result":[{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8}]}
2025/01/13 14:24:07 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:07 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"114","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:07 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"114","result":{"data":null}}
2025/01/13 14:24:07 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":65,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":15},"end":{"line":5,"character":15}},"rangeLength":0,"text":" "}]}}
2025/01/13 14:24:07 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":65,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":15}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg \n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:24:07 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 53 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:07 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"116","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:07 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"116","result":{"data":null}}
2025/01/13 14:24:07 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"115","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:07 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:07 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"115","result":[{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0}]}
2025/01/13 14:24:07 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:07 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":66,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":16},"end":{"line":5,"character":16}},"rangeLength":0,"text":"i"}]}}
2025/01/13 14:24:07 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":66,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":17}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg i\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:24:07 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 105 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:07 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"117","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:07 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:07 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"117","result":[{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0}]}
2025/01/13 14:24:07 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:07 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"118","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:07 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"118","result":{"data":null}}
2025/01/13 14:24:07 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":67,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":17},"end":{"line":5,"character":17}},"rangeLength":0,"text":" "}]}}
2025/01/13 14:24:07 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":67,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":17}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg i \n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:24:07 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 105 32 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:07 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"119","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:07 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:07 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"119","result":[{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8}]}
2025/01/13 14:24:07 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:07 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"120","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:07 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"120","result":{"data":null}}
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":68,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":18},"end":{"line":5,"character":18}},"rangeLength":0,"text":"i"}]}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":68,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":19}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg i i\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:24:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 105 32 105 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"121","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:08 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"121","result":[{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0}]}
2025/01/13 14:24:08 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"122","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"122","result":{"data":null}}
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":69,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":19}},"rangeLength":0,"text":"n"}]}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":69,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":20}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg i in\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:24:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 50 48 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 105 32 105 110 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"123","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:08 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"123","result":[{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8}]}
2025/01/13 14:24:08 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"124","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"124","result":{"data":null}}
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":70,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":20},"end":{"line":5,"character":20}},"rangeLength":0,"text":"t"}]}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":70,"diagnostics":[{"range":{"start":{"line":5,"character":16},"end":{"line":5,"character":17}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:16\ni\n^\nPrimitive Type Node ist error\n","message":"Primitive Type Node ist error"},{"range":{"start":{"line":5,"character":21},"end":{"line":5,"character":21}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:21\n\n\nSemikolon ist missing\n","message":"Semikolon ist missing"}]}}
2025/01/13 14:24:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 54 92 110 105 92 110 94 92 110 80 114 105 109 105 116 105 118 101 32 84 121 112 101 32 78 111 100 101 32 105 115 116 32 101 114 114 111 114 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 80 114 105 109 105 116 105 118 101 32 84 121 112 101 32 78 111 100 101 32 105 115 116 32 101 114 114 111 114 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 50 49 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 50 49 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 50 49 92 110 92 110 92 110 83 101 109 105 107 111 108 111 110 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 83 101 109 105 107 111 108 111 110 32 105 115 116 32 109 105 115 115 105 110 103 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"125","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:08 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"125","result":[{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0}]}
2025/01/13 14:24:08 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"126","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"126","result":{"data":null}}
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":71,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":20},"end":{"line":5,"character":21}},"rangeLength":1,"text":""}]}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":71,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":20}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg i in\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:24:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 50 48 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 105 32 105 110 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"127","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:08 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"127","result":[{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0}]}
2025/01/13 14:24:08 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"128","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"128","result":{"data":null}}
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":72,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":20}},"rangeLength":1,"text":""}]}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":72,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":19}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg i i\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:24:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 105 32 105 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"129","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:08 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"129","result":[{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8}]}
2025/01/13 14:24:08 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"130","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"130","result":{"data":null}}
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":73,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":18},"end":{"line":5,"character":19}},"rangeLength":1,"text":""}]}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":73,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":17}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg i \n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:24:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 105 32 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"131","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:08 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"131","result":[{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8}]}
2025/01/13 14:24:08 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:08 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"132","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:08 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"132","result":{"data":null}}
2025/01/13 14:24:09 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:24:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":74,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":17},"end":{"line":5,"character":18}},"rangeLength":1,"text":""}]}}
2025/01/13 14:24:09 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":74,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":17}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg i\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:24:09 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 105 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:09 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"133","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:09 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:09 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"133","result":[{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8}]}
2025/01/13 14:24:09 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:09 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"134","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:09 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"134","result":{"data":null}}
2025/01/13 14:24:09 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":75,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":17},"end":{"line":5,"character":17}},"rangeLength":0,"text":"n"}]}}
2025/01/13 14:24:09 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":75,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":18}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg in\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:24:09 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 56 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 105 110 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:09 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":76,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":18},"end":{"line":5,"character":18}},"rangeLength":0,"text":"t"}]}}
2025/01/13 14:24:09 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":76,"diagnostics":[{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":19}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:19\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":19}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\narg int\n^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:24:09 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 57 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 57 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 97 114 103 32 105 110 116 92 110 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:09 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":77,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":19}},"rangeLength":0,"text":" "}]}}
2025/01/13 14:24:09 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":77,"diagnostics":[{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":19}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:19\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":19}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\narg int\n^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:24:09 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 57 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 57 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 97 114 103 32 105 110 116 92 110 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:09 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"135","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:09 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:09 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"135","result":[{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0}]}
2025/01/13 14:24:09 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:09 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"136","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:09 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"136","result":{"data":null}}
2025/01/13 14:24:09 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":78,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":20},"end":{"line":5,"character":20}},"rangeLength":0,"text":"i"}]}}
2025/01/13 14:24:09 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":78,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":21}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\narg int i\n^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:24:09 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 50 49 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 97 114 103 32 105 110 116 32 105 92 110 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:09 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"137","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:09 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:09 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"137","result":[{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0}]}
2025/01/13 14:24:09 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:09 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"138","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:09 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"138","result":{"data":null}}
2025/01/13 14:24:09 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":79,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":21},"end":{"line":5,"character":21}},"rangeLength":0,"text":";"}]}}
2025/01/13 14:24:09 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":79,"diagnostics":[]}}
2025/01/13 14:24:09 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:09 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"139","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:09 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:09 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"139","result":[{"startLine":3,"startCharacter":29,"endLine":7,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":6,"endCharacter":8}]}
2025/01/13 14:24:09 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:09 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"140","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:09 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"140","result":{"data":null}}
2025/01/13 14:24:10 util.go:36: Trace | Read Content-Length: 306 from Content-Length: 306
2025/01/13 14:24:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":80,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":22},"end":{"line":5,"character":22}},"rangeLength":0,"text":"\n            "}]}}
2025/01/13 14:24:10 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":80,"diagnostics":[]}}
2025/01/13 14:24:10 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:10 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"141","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:10 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:10 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"141","result":[{"startLine":3,"startCharacter":29,"endLine":8,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:10 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:10 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:10 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"142","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:10 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:10 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"142","result":{"data":null}}
2025/01/13 14:24:14 util.go:36: Trace | Read Content-Length: 300 from Content-Length: 300
2025/01/13 14:24:14 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":81,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":7,"character":9},"end":{"line":7,"character":9}},"rangeLength":0,"text":"\n        "}]}}
2025/01/13 14:24:14 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:14 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":81,"diagnostics":[]}}
2025/01/13 14:24:14 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"143","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:15 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"143","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":9,"endCharacter":0}]}
2025/01/13 14:24:15 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"144","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"144","result":{"data":null}}
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 300 from Content-Length: 300
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":82,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":8,"character":8},"end":{"line":8,"character":8}},"rangeLength":0,"text":"\n        "}]}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":82,"diagnostics":[]}}
2025/01/13 14:24:15 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"145","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:15 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"145","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:15 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"146","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"146","result":{"data":null}}
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":83,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":8},"end":{"line":9,"character":8}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":83,"diagnostics":[]}}
2025/01/13 14:24:15 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"147","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:15 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"147","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:15 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"148","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"148","result":{"data":null}}
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":84,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":9},"end":{"line":9,"character":9}},"rangeLength":0,"text":"n"}]}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":84,"diagnostics":[]}}
2025/01/13 14:24:15 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":85,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":10},"end":{"line":9,"character":10}},"rangeLength":0,"text":"t"}]}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":85,"diagnostics":[]}}
2025/01/13 14:24:15 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"149","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:15 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"149","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:15 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"150","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"150","result":{"data":null}}
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":86,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":11},"end":{"line":9,"character":11}},"rangeLength":0,"text":"i"}]}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":86,"diagnostics":[]}}
2025/01/13 14:24:15 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"151","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:15 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"151","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0}]}
2025/01/13 14:24:15 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"152","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"152","result":{"data":null}}
2025/01/13 14:24:15 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:15 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":87,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":12},"end":{"line":9,"character":12}},"rangeLength":0,"text":"r"}]}}
2025/01/13 14:24:15 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:15 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":87,"diagnostics":[]}}
2025/01/13 14:24:15 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:16 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"153","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:16 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:16 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"153","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:16 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:16 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"154","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:16 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"154","result":{"data":null}}
2025/01/13 14:24:16 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:24:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":88,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":12},"end":{"line":9,"character":13}},"rangeLength":1,"text":""}]}}
2025/01/13 14:24:16 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":88,"diagnostics":[]}}
2025/01/13 14:24:16 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:16 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":89,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":12},"end":{"line":9,"character":12}},"rangeLength":0,"text":"y"}]}}
2025/01/13 14:24:16 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":89,"diagnostics":[]}}
2025/01/13 14:24:16 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:16 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"155","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:16 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:16 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"155","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:16 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:16 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"156","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:16 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"156","result":{"data":null}}
2025/01/13 14:24:16 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:24:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":90,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":12},"end":{"line":9,"character":13}},"rangeLength":1,"text":""}]}}
2025/01/13 14:24:16 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":90,"diagnostics":[]}}
2025/01/13 14:24:16 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:16 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":91,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":12},"end":{"line":9,"character":12}},"rangeLength":0,"text":"t"}]}}
2025/01/13 14:24:16 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":91,"diagnostics":[]}}
2025/01/13 14:24:16 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:16 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"157","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:16 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:16 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"157","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:16 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:16 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"158","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:16 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"158","result":{"data":null}}
2025/01/13 14:24:17 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":92,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":13},"end":{"line":9,"character":13}},"rangeLength":0,"text":"y"}]}}
2025/01/13 14:24:17 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":92,"diagnostics":[]}}
2025/01/13 14:24:17 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:17 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"159","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:17 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:17 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"159","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:17 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:17 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"160","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:17 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"160","result":{"data":null}}
2025/01/13 14:24:17 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":93,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":14},"end":{"line":9,"character":14}},"rangeLength":0,"text":" "}]}}
2025/01/13 14:24:17 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":93,"diagnostics":[]}}
2025/01/13 14:24:17 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:17 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"161","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:17 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:17 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"161","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0}]}
2025/01/13 14:24:17 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:17 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"162","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:17 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"162","result":{"data":null}}
2025/01/13 14:24:19 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":94,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":15},"end":{"line":9,"character":15}},"rangeLength":0,"text":"C"}]}}
2025/01/13 14:24:19 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":94,"diagnostics":[]}}
2025/01/13 14:24:19 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:19 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"163","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:19 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:19 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"163","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0}]}
2025/01/13 14:24:19 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:19 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"164","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:19 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"164","result":{"data":null}}
2025/01/13 14:24:20 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:24:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":95,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":15},"end":{"line":9,"character":16}},"rangeLength":1,"text":""}]}}
2025/01/13 14:24:20 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":95,"diagnostics":[]}}
2025/01/13 14:24:20 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:20 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"165","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:20 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:20 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"165","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:20 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:20 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"166","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:20 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"166","result":{"data":null}}
2025/01/13 14:24:20 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":96,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":15},"end":{"line":9,"character":15}},"rangeLength":0,"text":"A"}]}}
2025/01/13 14:24:20 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":96,"diagnostics":[]}}
2025/01/13 14:24:20 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:20 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"167","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:20 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:20 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"167","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0}]}
2025/01/13 14:24:20 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:20 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"168","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:20 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"168","result":{"data":null}}
2025/01/13 14:24:21 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":97,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":16},"end":{"line":9,"character":16}},"rangeLength":0,"text":"p"}]}}
2025/01/13 14:24:21 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":97,"diagnostics":[]}}
2025/01/13 14:24:21 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:21 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"169","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:21 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:21 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"169","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0}]}
2025/01/13 14:24:21 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:21 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"170","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:21 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"170","result":{"data":null}}
2025/01/13 14:24:21 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":98,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":17},"end":{"line":9,"character":17}},"rangeLength":0,"text":"f"}]}}
2025/01/13 14:24:21 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":98,"diagnostics":[]}}
2025/01/13 14:24:21 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:21 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"171","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:21 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:21 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"171","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0}]}
2025/01/13 14:24:21 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:21 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"172","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:21 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"172","result":{"data":null}}
2025/01/13 14:24:21 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":99,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":18},"end":{"line":9,"character":18}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:24:21 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":99,"diagnostics":[]}}
2025/01/13 14:24:21 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:21 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"173","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:21 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:21 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"173","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:21 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:21 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"174","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:21 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"174","result":{"data":null}}
2025/01/13 14:24:21 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":100,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":19},"end":{"line":9,"character":19}},"rangeLength":0,"text":"l"}]}}
2025/01/13 14:24:21 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":100,"diagnostics":[]}}
2025/01/13 14:24:21 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:21 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"175","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:21 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:21 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"175","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:21 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:21 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"176","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:21 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"176","result":{"data":null}}
2025/01/13 14:24:22 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":101,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":20},"end":{"line":9,"character":20}},"rangeLength":0,"text":"s"}]}}
2025/01/13 14:24:22 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":101,"diagnostics":[]}}
2025/01/13 14:24:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:22 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"177","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:22 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:22 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"177","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:22 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:22 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"178","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:22 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"178","result":{"data":null}}
2025/01/13 14:24:22 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":102,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":21},"end":{"line":9,"character":21}},"rangeLength":0,"text":"a"}]}}
2025/01/13 14:24:22 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":102,"diagnostics":[]}}
2025/01/13 14:24:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:22 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"179","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:22 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:22 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"179","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0}]}
2025/01/13 14:24:22 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:22 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"180","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:22 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"180","result":{"data":null}}
2025/01/13 14:24:22 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":103,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":22},"end":{"line":9,"character":22}},"rangeLength":0,"text":"r"}]}}
2025/01/13 14:24:22 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":103,"diagnostics":[]}}
2025/01/13 14:24:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:22 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"181","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:22 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:22 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"181","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:22 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:22 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"182","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:22 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"182","result":{"data":null}}
2025/01/13 14:24:23 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":104,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":22},"end":{"line":9,"character":23}},"rangeLength":1,"text":""}]}}
2025/01/13 14:24:23 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":104,"diagnostics":[]}}
2025/01/13 14:24:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:23 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"183","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:23 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:23 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"183","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:23 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:23 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"184","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:23 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"184","result":{"data":null}}
2025/01/13 14:24:23 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":105,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":22},"end":{"line":9,"character":22}},"rangeLength":0,"text":"g"}]}}
2025/01/13 14:24:23 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":105,"diagnostics":[]}}
2025/01/13 14:24:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:23 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"185","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:23 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:23 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"185","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:23 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:23 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"186","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:23 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"186","result":{"data":null}}
2025/01/13 14:24:23 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":106,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":22},"end":{"line":9,"character":23}},"rangeLength":1,"text":""}]}}
2025/01/13 14:24:23 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":106,"diagnostics":[]}}
2025/01/13 14:24:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:23 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":107,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":22},"end":{"line":9,"character":22}},"rangeLength":0,"text":"f"}]}}
2025/01/13 14:24:23 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":107,"diagnostics":[]}}
2025/01/13 14:24:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:24 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"187","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:24 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:24 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"187","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0}]}
2025/01/13 14:24:24 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:24 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"188","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:24 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"188","result":{"data":null}}
2025/01/13 14:24:24 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":108,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":23},"end":{"line":9,"character":23}},"rangeLength":0,"text":"t"}]}}
2025/01/13 14:24:24 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":108,"diagnostics":[]}}
2025/01/13 14:24:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:24 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"189","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:24 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:24 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"189","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0}]}
2025/01/13 14:24:24 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:24 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"190","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:24 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"190","result":{"data":null}}
2025/01/13 14:24:24 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":109,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":24},"end":{"line":9,"character":24}},"rangeLength":0,"text":" "}]}}
2025/01/13 14:24:24 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":109,"diagnostics":[]}}
2025/01/13 14:24:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:24 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"191","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:24 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:24 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"191","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:24 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:24 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"192","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:24 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"192","result":{"data":null}}
2025/01/13 14:24:25 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":110,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":25},"end":{"line":9,"character":25}},"rangeLength":0,"text":"{"}]}}
2025/01/13 14:24:25 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":110,"diagnostics":[]}}
2025/01/13 14:24:25 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:25 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"193","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:25 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:25 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"193","result":[{"startLine":3,"startCharacter":29,"endLine":10,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:25 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:25 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"194","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:25 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"194","result":{"data":null}}
2025/01/13 14:24:25 util.go:36: Trace | Read Content-Length: 303 from Content-Length: 303
2025/01/13 14:24:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":111,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":26}},"rangeLength":0,"text":"\n        "}]}}
2025/01/13 14:24:25 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":111,"diagnostics":[]}}
2025/01/13 14:24:25 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:25 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"195","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:25 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:25 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"195","result":[{"startLine":3,"startCharacter":29,"endLine":11,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:25 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:25 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"196","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:25 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"196","result":{"data":null}}
2025/01/13 14:24:27 util.go:36: Trace | Read Content-Length: 303 from Content-Length: 303
2025/01/13 14:24:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":112,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":26}},"rangeLength":0,"text":"\n        "}]}}
2025/01/13 14:24:27 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":112,"diagnostics":[]}}
2025/01/13 14:24:27 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:27 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"197","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:27 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:27 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"197","result":[{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:27 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:27 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"198","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:27 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"198","result":{"data":null}}
2025/01/13 14:24:28 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":113,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":8}},"rangeLength":0,"text":"}"}]}}
2025/01/13 14:24:28 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":113,"diagnostics":[]}}
2025/01/13 14:24:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:28 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"199","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:28 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:28 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"199","result":[{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:28 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:28 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"200","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:28 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"200","result":{"data":null}}
2025/01/13 14:24:29 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":114,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":25},"end":{"line":9,"character":25}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:24:29 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":114,"diagnostics":[]}}
2025/01/13 14:24:29 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"201","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:30 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"201","result":[{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:30 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"202","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"202","result":{"data":null}}
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":115,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":26},"end":{"line":9,"character":26}},"rangeLength":0,"text":"x"}]}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":115,"diagnostics":[]}}
2025/01/13 14:24:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"203","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:30 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"203","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0}]}
2025/01/13 14:24:30 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"204","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"204","result":{"data":null}}
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":116,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":27},"end":{"line":9,"character":27}},"rangeLength":0,"text":"t"}]}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":116,"diagnostics":[]}}
2025/01/13 14:24:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"205","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:30 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"205","result":[{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:30 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"206","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"206","result":{"data":null}}
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":117,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":28},"end":{"line":9,"character":28}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":117,"diagnostics":[]}}
2025/01/13 14:24:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"207","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:30 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"207","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0}]}
2025/01/13 14:24:30 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"208","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"208","result":{"data":null}}
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":118,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":29},"end":{"line":9,"character":29}},"rangeLength":0,"text":"n"}]}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":118,"diagnostics":[]}}
2025/01/13 14:24:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"209","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:30 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"209","result":[{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:30 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"210","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"210","result":{"data":null}}
2025/01/13 14:24:30 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:30 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":119,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":30},"end":{"line":9,"character":30}},"rangeLength":0,"text":"d"}]}}
2025/01/13 14:24:30 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:30 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":119,"diagnostics":[]}}
2025/01/13 14:24:30 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:31 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":120,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":31},"end":{"line":9,"character":31}},"rangeLength":0,"text":"s"}]}}
2025/01/13 14:24:31 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":120,"diagnostics":[]}}
2025/01/13 14:24:31 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:31 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"211","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:31 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"211","result":{"data":null}}
2025/01/13 14:24:31 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"212","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:31 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:31 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"212","result":[{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:31 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:31 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":121,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":32},"end":{"line":9,"character":32}},"rangeLength":0,"text":" "}]}}
2025/01/13 14:24:31 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":121,"diagnostics":[]}}
2025/01/13 14:24:31 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:31 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"213","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:31 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:31 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"213","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0}]}
2025/01/13 14:24:31 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:31 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:31 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"214","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:31 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:31 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"214","result":{"data":null}}
2025/01/13 14:24:32 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":122,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":33},"end":{"line":9,"character":33}},"rangeLength":0,"text":"T"}]}}
2025/01/13 14:24:32 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":122,"diagnostics":[]}}
2025/01/13 14:24:32 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:32 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"215","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:32 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:32 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"215","result":[{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:32 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:32 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"216","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:32 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"216","result":{"data":null}}
2025/01/13 14:24:32 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":123,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":34},"end":{"line":9,"character":34}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:24:32 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":123,"diagnostics":[]}}
2025/01/13 14:24:32 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:32 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"217","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:32 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:32 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"217","result":[{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:32 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:32 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:32 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"218","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:32 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:32 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"218","result":{"data":null}}
2025/01/13 14:24:33 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:24:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":124,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":34},"end":{"line":9,"character":35}},"rangeLength":1,"text":""}]}}
2025/01/13 14:24:33 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":124,"diagnostics":[]}}
2025/01/13 14:24:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:33 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"219","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:33 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:33 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"219","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0}]}
2025/01/13 14:24:33 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:33 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"220","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:33 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"220","result":{"data":null}}
2025/01/13 14:24:33 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":125,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":34},"end":{"line":9,"character":34}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:24:33 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":125,"diagnostics":[]}}
2025/01/13 14:24:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:33 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"221","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:33 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:33 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"221","result":[{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:33 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:33 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"222","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:33 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"222","result":{"data":null}}
2025/01/13 14:24:33 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":126,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":35},"end":{"line":9,"character":35}},"rangeLength":0,"text":"t"}]}}
2025/01/13 14:24:33 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":126,"diagnostics":[]}}
2025/01/13 14:24:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:33 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":127,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":36},"end":{"line":9,"character":36}},"rangeLength":0,"text":"r"}]}}
2025/01/13 14:24:33 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":127,"diagnostics":[]}}
2025/01/13 14:24:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:33 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"223","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:33 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:33 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"223","result":[{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:33 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:33 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"224","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:33 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"224","result":{"data":null}}
2025/01/13 14:24:33 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":128,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":37},"end":{"line":9,"character":37}},"rangeLength":0,"text":"a"}]}}
2025/01/13 14:24:33 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":128,"diagnostics":[]}}
2025/01/13 14:24:33 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:34 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"225","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:34 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:34 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"225","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0}]}
2025/01/13 14:24:34 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:34 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"226","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:34 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"226","result":{"data":null}}
2025/01/13 14:24:34 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":129,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":38},"end":{"line":9,"character":38}},"rangeLength":0,"text":"p"}]}}
2025/01/13 14:24:34 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":129,"diagnostics":[]}}
2025/01/13 14:24:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:34 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"227","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:34 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:34 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"227","result":[{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:34 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:34 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"228","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:34 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"228","result":{"data":null}}
2025/01/13 14:24:34 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":130,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":39},"end":{"line":9,"character":39}},"rangeLength":0,"text":"a"}]}}
2025/01/13 14:24:34 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":130,"diagnostics":[]}}
2025/01/13 14:24:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:34 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"229","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:34 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:34 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"229","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0}]}
2025/01/13 14:24:34 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:34 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"230","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:34 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"230","result":{"data":null}}
2025/01/13 14:24:34 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":131,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":40},"end":{"line":9,"character":40}},"rangeLength":0,"text":"c"}]}}
2025/01/13 14:24:34 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":131,"diagnostics":[]}}
2025/01/13 14:24:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:34 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:34 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":132,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":41},"end":{"line":9,"character":41}},"rangeLength":0,"text":"k"}]}}
2025/01/13 14:24:34 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:34 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":132,"diagnostics":[]}}
2025/01/13 14:24:34 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:35 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"231","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:35 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:35 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"231","result":[{"startLine":3,"startCharacter":29,"endLine":12,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:35 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:35 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"232","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:35 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"232","result":{"data":null}}
2025/01/13 14:24:35 util.go:36: Trace | Read Content-Length: 303 from Content-Length: 303
2025/01/13 14:24:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":133,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":9,"character":43},"end":{"line":9,"character":43}},"rangeLength":0,"text":"\n        "}]}}
2025/01/13 14:24:35 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":133,"diagnostics":[]}}
2025/01/13 14:24:35 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:35 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"233","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:35 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:35 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"233","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:35 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:35 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:35 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"234","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:35 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:35 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"234","result":{"data":null}}
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":134,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":8}},"rangeLength":0,"text":"i"}]}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":134,"diagnostics":[]}}
2025/01/13 14:24:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"235","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:37 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"235","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:37 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"236","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"236","result":{"data":null}}
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 294 from Content-Length: 294
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":135,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":9},"end":{"line":10,"character":9}},"rangeLength":0,"text":"d"}]}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":135,"diagnostics":[]}}
2025/01/13 14:24:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"237","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:37 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"237","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0}]}
2025/01/13 14:24:37 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"238","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"238","result":{"data":null}}
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 296 from Content-Length: 296
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":136,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":10},"end":{"line":10,"character":10}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":136,"diagnostics":[]}}
2025/01/13 14:24:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 296 from Content-Length: 296
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":137,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":11},"end":{"line":10,"character":11}},"rangeLength":0,"text":"n"}]}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":137,"diagnostics":[]}}
2025/01/13 14:24:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 296 from Content-Length: 296
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":138,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":12},"end":{"line":10,"character":12}},"rangeLength":0,"text":"t"}]}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":138,"diagnostics":[]}}
2025/01/13 14:24:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 296 from Content-Length: 296
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":139,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":13},"end":{"line":10,"character":13}},"rangeLength":0,"text":"i"}]}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":139,"diagnostics":[]}}
2025/01/13 14:24:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 296 from Content-Length: 296
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":140,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":14},"end":{"line":10,"character":14}},"rangeLength":0,"text":"f"}]}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":140,"diagnostics":[]}}
2025/01/13 14:24:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"239","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:37 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"239","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0}]}
2025/01/13 14:24:37 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"240","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"240","result":{"data":null}}
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 296 from Content-Length: 296
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":141,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":15},"end":{"line":10,"character":15}},"rangeLength":0,"text":"i"}]}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":141,"diagnostics":[]}}
2025/01/13 14:24:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 296 from Content-Length: 296
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":142,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":16},"end":{"line":10,"character":16}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":142,"diagnostics":[]}}
2025/01/13 14:24:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:37 util.go:36: Trace | Read Content-Length: 296 from Content-Length: 296
2025/01/13 14:24:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":143,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":17},"end":{"line":10,"character":17}},"rangeLength":0,"text":"r"}]}}
2025/01/13 14:24:37 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":143,"diagnostics":[]}}
2025/01/13 14:24:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:38 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"241","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:38 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:38 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"241","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0}]}
2025/01/13 14:24:38 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:38 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"242","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:38 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"242","result":{"data":null}}
2025/01/13 14:24:38 util.go:36: Trace | Read Content-Length: 296 from Content-Length: 296
2025/01/13 14:24:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":144,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":18},"end":{"line":10,"character":18}},"rangeLength":0,"text":"("}]}}
2025/01/13 14:24:38 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":144,"diagnostics":[]}}
2025/01/13 14:24:38 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:38 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"243","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:38 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:38 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"243","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:38 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:38 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"244","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:38 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"244","result":{"data":null}}
2025/01/13 14:24:39 util.go:36: Trace | Read Content-Length: 296 from Content-Length: 296
2025/01/13 14:24:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":145,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":19},"end":{"line":10,"character":19}},"rangeLength":0,"text":"i"}]}}
2025/01/13 14:24:39 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":145,"diagnostics":[{"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":20}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:8\nidentifier(i\n^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:24:39 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 48 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 56 92 110 105 100 101 110 116 105 102 105 101 114 40 105 92 110 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:39 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"245","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:39 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:39 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"245","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:24:39 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:39 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"246","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:39 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"246","result":{"data":null}}
2025/01/13 14:24:39 util.go:36: Trace | Read Content-Length: 296 from Content-Length: 296
2025/01/13 14:24:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":146,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":20},"end":{"line":10,"character":20}},"rangeLength":0,"text":")"}]}}
2025/01/13 14:24:39 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":146,"diagnostics":[{"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":21}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:8\nidentifier(i)\n^^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:24:39 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 49 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 56 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:24:39 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"247","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:39 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:39 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"247","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:24:39 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:39 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"248","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:39 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"248","result":{"data":null}}
2025/01/13 14:24:40 util.go:36: Trace | Read Content-Length: 296 from Content-Length: 296
2025/01/13 14:24:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":147,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":21},"end":{"line":10,"character":21}},"rangeLength":0,"text":";"}]}}
2025/01/13 14:24:40 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":147,"diagnostics":[]}}
2025/01/13 14:24:40 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:40 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"249","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:40 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:40 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"249","result":[{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0}]}
2025/01/13 14:24:40 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:40 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"250","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:40 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"250","result":{"data":null}}
2025/01/13 14:24:41 util.go:36: Trace | Read Content-Length: 499 from Content-Length: 499
2025/01/13 14:24:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":148,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":8}},"rangeLength":8,"text":""},{"range":{"start":{"line":8,"character":0},"end":{"line":8,"character":8}},"rangeLength":8,"text":""},{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":12}},"rangeLength":12,"text":""}]}}
2025/01/13 14:24:41 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":148,"diagnostics":[]}}
2025/01/13 14:24:41 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:41 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"251","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:41 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:41 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"251","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:24:41 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:41 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"252","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:41 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"252","result":{"data":null}}
2025/01/13 14:24:42 util.go:36: Trace | Read Content-Length: 297 from Content-Length: 297
2025/01/13 14:24:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":149,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":10,"character":8},"end":{"line":10,"character":8}},"rangeLength":0,"text":"    "}]}}
2025/01/13 14:24:42 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:24:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":149,"diagnostics":[]}}
2025/01/13 14:24:42 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:24:42 util.go:36: Trace | Read Content-Length: 170 from Content-Length: 170
2025/01/13 14:24:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"253","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:42 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:24:42 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:24:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"253","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0}]}
2025/01/13 14:24:42 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:24:42 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:24:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"254","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:24:42 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:24:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"254","result":{"data":null}}
2025/01/13 14:24:54 util.go:36: Trace | Read Content-Length: 206 from Content-Length: 206
2025/01/13 14:24:54 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"255","method":"textDocument/declaration","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"position":{"line":4,"character":16}}}
2025/01/13 14:24:54 server.go:109: INFO  | Handle Method: textDocument/declaration 
2025/01/13 14:24:54 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"255","result":[]}
2025/01/13 14:24:54 util.go:36: Trace | Read Content-Length: 243 from Content-Length: 243
2025/01/13 14:24:54 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"256","method":"textDocument/references","params":{"context":{"includeDeclaration":true},"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"position":{"line":4,"character":16}}}
2025/01/13 14:24:54 server.go:109: INFO  | Handle Method: textDocument/references 
2025/01/13 14:24:54 referenceService.go:91: Trace | Found Nodes for References: [0xc00046ad20 <nil> <nil> 0xc00046ad60]
2025/01/13 14:24:54 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"256","result":[]}
2025/01/13 14:24:54 referenceService.go:102: Trace | Finished References request
2025/01/13 14:24:57 util.go:36: Trace | Read Content-Length: 243 from Content-Length: 243
2025/01/13 14:24:57 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"257","method":"textDocument/references","params":{"context":{"includeDeclaration":true},"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"position":{"line":4,"character":20}}}
2025/01/13 14:24:57 server.go:109: INFO  | Handle Method: textDocument/references 
2025/01/13 14:24:57 referenceService.go:91: Trace | Found Nodes for References: [0xc00046afc0 <nil> <nil> 0xc00046b000]
2025/01/13 14:24:57 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"257","result":[]}
2025/01/13 14:24:57 referenceService.go:102: Trace | Finished References request
2025/01/13 14:25:16 util.go:36: Trace | Read Content-Length: 155 from Content-Length: 155
2025/01/13 14:25:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:25:16 server.go:109: INFO  | Handle Method: textDocument/didClose 
2025/01/13 14:25:21 util.go:36: Trace | Read Content-Length: 62 from Content-Length: 62
2025/01/13 14:25:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"258","method":"shutdown","params":null}
2025/01/13 14:25:21 server.go:93: INFO  | Received Shutdown Request
2025/01/13 14:25:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"258"}
2025/01/13 14:25:21 server.go:80: INFO  | Server Closed
2025/01/13 14:25:21 main.go:32: Server Shutdown
2025/01/13 14:29:35 fileService.go:35: Trace | FileChangeListeners: [0xc0000120f0]
2025/01/13 14:29:36 util.go:36: Trace | Read Content-Length: 3706 from Content-Length: 3706
2025/01/13 14:29:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":193851,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 14:29:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true,"semanticTokensProvider":{"legend":{"tokenTypes":["namespace","type","enum","interface","struct","parameter","variable","property","enumMember","function","comment","keyword","modifier"],"tokenModifiers":["declaration","definition","readonly","deprecated","documentation"]},"full":true}},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 14:29:36 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/13 14:29:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/13 14:29:36 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 14:29:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 14:29:36 server.go:106: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 14:29:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 14:29:36 util.go:36: Trace | Read Content-Length: 430 from Content-Length: 430
2025/01/13 14:29:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand.klein {\n        struct Tetrapack {\n            arg int i;\n\n        }\n\n        entity Apfelsaft extends Tetrapack{\n            identifier(i);\n        }\n\n}"}}}
2025/01/13 14:29:36 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:29:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:29:36 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:29:36 util.go:36: Trace | Read Content-Length: 175 from Content-Length: 175
2025/01/13 14:29:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:29:36 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:29:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":{"data":null}}
2025/01/13 14:29:36 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:29:36 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:29:36 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:29:36 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:29:36 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:29:36 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:31:17 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/13 14:31:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"shutdown","params":null}
2025/01/13 14:31:17 server.go:93: INFO  | Received Shutdown Request
2025/01/13 14:31:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4"}
2025/01/13 14:31:17 server.go:80: INFO  | Server Closed
2025/01/13 14:31:17 main.go:32: Server Shutdown
2025/01/13 14:31:18 fileService.go:35: Trace | FileChangeListeners: [0xc0000be0d8]
2025/01/13 14:31:18 util.go:36: Trace | Read Content-Length: 3706 from Content-Length: 3706
2025/01/13 14:31:18 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":193851,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 14:31:18 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true,"semanticTokensProvider":{"legend":{"tokenTypes":["namespace","type","enum","interface","struct","parameter","variable","property","enumMember","function","comment","keyword","modifier"],"tokenModifiers":["declaration","definition","readonly","deprecated","documentation"]},"full":true}},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 14:31:18 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/13 14:31:18 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/13 14:31:18 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 14:31:18 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 14:31:18 server.go:106: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 14:31:18 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 14:31:18 util.go:36: Trace | Read Content-Length: 430 from Content-Length: 430
2025/01/13 14:31:18 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand.klein {\n        struct Tetrapack {\n            arg int i;\n\n        }\n\n        entity Apfelsaft extends Tetrapack{\n            identifier(i);\n        }\n\n}"}}}
2025/01/13 14:31:18 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:31:18 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:31:18 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:31:19 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:31:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:31:19 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:31:19 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:31:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:31:19 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:31:37 util.go:36: Trace | Read Content-Length: 204 from Content-Length: 204
2025/01/13 14:31:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/declaration","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"position":{"line":9,"character":34}}}
2025/01/13 14:31:37 server.go:109: INFO  | Handle Method: textDocument/declaration 
2025/01/13 14:31:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":[]}
2025/01/13 14:31:37 util.go:36: Trace | Read Content-Length: 241 from Content-Length: 241
2025/01/13 14:31:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/references","params":{"context":{"includeDeclaration":true},"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"position":{"line":9,"character":34}}}
2025/01/13 14:31:37 server.go:109: INFO  | Handle Method: textDocument/references 
2025/01/13 14:31:37 referenceService.go:91: Trace | Found Nodes for References: [0xc0000bb8c0 0xc0000bb920 <nil> 0xc0000bb960]
2025/01/13 14:31:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":[]}
2025/01/13 14:31:37 referenceService.go:102: Trace | Finished References request
2025/01/13 14:31:42 util.go:36: Trace | Read Content-Length: 241 from Content-Length: 241
2025/01/13 14:31:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/references","params":{"context":{"includeDeclaration":true},"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"position":{"line":9,"character":35}}}
2025/01/13 14:31:42 server.go:109: INFO  | Handle Method: textDocument/references 
2025/01/13 14:31:42 referenceService.go:91: Trace | Found Nodes for References: [0xc0000bbc80 0xc0000bbce0 <nil> 0xc0000bbd20]
2025/01/13 14:31:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":[]}
2025/01/13 14:31:42 referenceService.go:102: Trace | Finished References request
2025/01/13 14:31:52 util.go:36: Trace | Read Content-Length: 155 from Content-Length: 155
2025/01/13 14:31:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:31:52 server.go:109: INFO  | Handle Method: textDocument/didClose 
2025/01/13 14:31:53 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 14:31:54 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 14:31:54 server.go:106: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 14:31:54 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 14:31:54 util.go:36: Trace | Read Content-Length: 430 from Content-Length: 430
2025/01/13 14:31:54 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand.klein {\n        struct Tetrapack {\n            arg int i;\n\n        }\n\n        entity Apfelsaft extends Tetrapack{\n            identifier(i);\n        }\n\n}"}}}
2025/01/13 14:31:54 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:31:54 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:31:54 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:31:54 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:31:54 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:31:54 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:31:54 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:31:54 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":[{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:31:54 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:31:54 util.go:36: Trace | Read Content-Length: 175 from Content-Length: 175
2025/01/13 14:31:54 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:31:54 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:31:54 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"data":[3,0,7,11,0]}}
2025/01/13 14:33:23 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/13 14:33:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"shutdown","params":null}
2025/01/13 14:33:23 server.go:93: INFO  | Received Shutdown Request
2025/01/13 14:33:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8"}
2025/01/13 14:33:23 server.go:80: INFO  | Server Closed
2025/01/13 14:33:23 main.go:32: Server Shutdown
2025/01/13 14:33:23 fileService.go:35: Trace | FileChangeListeners: [0xc0000c20d8]
2025/01/13 14:33:24 util.go:36: Trace | Read Content-Length: 3706 from Content-Length: 3706
2025/01/13 14:33:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":193851,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 14:33:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true,"semanticTokensProvider":{"legend":{"tokenTypes":["namespace","type","enum","interface","struct","parameter","variable","property","enumMember","function","comment","keyword","modifier"],"tokenModifiers":["declaration","definition","readonly","deprecated","documentation"]},"full":true}},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 14:33:24 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/13 14:33:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/13 14:33:24 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 14:33:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 14:33:24 server.go:106: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 14:33:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 14:33:24 util.go:36: Trace | Read Content-Length: 430 from Content-Length: 430
2025/01/13 14:33:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand.klein {\n        struct Tetrapack {\n            arg int i;\n\n        }\n\n        entity Apfelsaft extends Tetrapack{\n            identifier(i);\n        }\n\n}"}}}
2025/01/13 14:33:24 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:33:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:33:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:33:24 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:33:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:33:24 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:33:24 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:33:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":[{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:33:24 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:33:25 util.go:36: Trace | Read Content-Length: 155 from Content-Length: 155
2025/01/13 14:33:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:33:25 server.go:109: INFO  | Handle Method: textDocument/didClose 
2025/01/13 14:33:26 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 14:33:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 14:33:26 server.go:106: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 14:33:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 14:33:26 util.go:36: Trace | Read Content-Length: 430 from Content-Length: 430
2025/01/13 14:33:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand.klein {\n        struct Tetrapack {\n            arg int i;\n\n        }\n\n        entity Apfelsaft extends Tetrapack{\n            identifier(i);\n        }\n\n}"}}}
2025/01/13 14:33:26 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:33:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:33:26 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:33:27 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:33:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:33:27 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:33:27 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:33:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:33:27 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:33:27 util.go:36: Trace | Read Content-Length: 175 from Content-Length: 175
2025/01/13 14:33:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:33:27 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:33:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"data":[3,0,7,11,0,1,8,6,11,0,1,12,3,11,0,4,8,6,11,0]}}
2025/01/13 14:34:08 util.go:36: Trace | Read Content-Length: 1166 from Content-Length: 1166
2025/01/13 14:34:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar über Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund {\n\n         }\n    }\n}"}}}
2025/01/13 14:34:08 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:34:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:34:08 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:34:08 util.go:36: Trace | Read Content-Length: 167 from Content-Length: 167
2025/01/13 14:34:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"}}}
2025/01/13 14:34:08 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:34:08 foldingService.go:218: Trace | Found 6 Comment Ranges
2025/01/13 14:34:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":[{"startLine":7,"startCharacter":20,"endLine":10,"endCharacter":8},{"startLine":35,"startCharacter":18,"endLine":53,"endCharacter":4},{"startLine":37,"startCharacter":21,"endLine":38,"endCharacter":8},{"startLine":50,"startCharacter":35,"endLine":52,"endCharacter":8},{"startLine":55,"startCharacter":27,"endLine":57,"endCharacter":9},{"startLine":3,"startCharacter":23,"endLine":59,"endCharacter":0},{"startLine":5,"startCharacter":19,"endLine":32,"endCharacter":4},{"startLine":13,"startCharacter":18,"endLine":16,"endCharacter":8},{"startLine":19,"startCharacter":24,"endLine":24,"endCharacter":8},{"startLine":26,"startCharacter":26,"endLine":28,"endCharacter":8},{"startLine":41,"startCharacter":21,"endLine":49,"endCharacter":8},{"startLine":54,"startCharacter":19,"endLine":58,"endCharacter":4},{"startLine":4,"startCharacter":1,"endLine":4,"endCharacter":21,"kind":"comment"},{"startLine":12,"startCharacter":1,"endLine":12,"endCharacter":20,"kind":"comment"},{"startLine":18,"startCharacter":1,"endLine":18,"endCharacter":24,"kind":"comment"},{"startLine":36,"startCharacter":1,"endLine":36,"endCharacter":25,"kind":"comment"},{"startLine":42,"startCharacter":14,"endLine":43,"endCharacter":20,"kind":"comment"},{"startLine":46,"startCharacter":1,"endLine":46,"endCharacter":20,"kind":"comment"}]}
2025/01/13 14:34:08 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:34:08 util.go:36: Trace | Read Content-Length: 174 from Content-Length: 174
2025/01/13 14:34:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"}}}
2025/01/13 14:34:08 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:34:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"data":[3,0,7,11,0,2,4,7,11,0,2,8,6,11,0,6,8,4,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,13,3,7,11,0,2,8,6,11,0,4,8,6,11,0,3,12,3,11,0,1,12,3,11,0,2,12,3,11,0,3,8,6,11,0,4,4,7,11,0]}}
2025/01/13 14:35:03 util.go:36: Trace | Read Content-Length: 68670 from Content-Length: 68670
2025/01/13 14:35:03 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"smart_city_management\" version 1.0.0\n\npackage de.smart.city {\n\n    // Core infrastructure management\n    package infrastructure {\n\n        struct GeoLocation {\n            arg double latitude;\n            arg double longitude;\n            arg double altitude;\n            arg string addressString;\n            func double calculateDistance(GeoLocation other);\n        }\n\n        enum AssetStatus {\n            OPERATIONAL(_);\n            MAINTENANCE_REQUIRED(_);\n            UNDER_REPAIR(_);\n            DECOMMISSIONED(_);\n            CRITICAL(_);\n        }\n\n        enum MaintenancePriority {\n            arg int level;\n            arg string description;\n            EMERGENCY(_, 1, \"Immediate action required\");\n            HIGH(_, 2, \"Address within 24 hours\");\n            MEDIUM(_, 3, \"Address within 1 week\");\n            LOW(_, 4, \"Schedule during routine maintenance\");\n        }\n\n        entity Asset {\n            arg string assetId;\n            arg string name;\n            ref .GeoLocation location;\n            ref .AssetStatus status;\n            arg date installationDate;\n            arg date lastMaintenanceDate;\n            arg double acquisitionCost;\n            arg int expectedLifespanYears;\n\n            identifier(assetId);\n        }\n    }\n\n    // Transportation system management\n    package transportation {\n\n        enum VehicleType {\n            BUS(_);\n            TRAM(_);\n            SUBWAY(_);\n            MUNICIPAL_VEHICLE(_);\n            EMERGENCY_VEHICLE(_);\n        }\n\n        enum RouteStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            PLANNED(_);\n            CANCELED(_);\n        }\n\n        struct RouteSegment {\n            ref ..infrastructure.GeoLocation startPoint;\n            ref ..infrastructure.GeoLocation endPoint;\n            arg double distance;\n            arg int estimatedTimeMinutes;\n            func double calculateCongestion();\n        }\n\n        entity TransportRoute {\n            arg string routeId;\n            arg string routeName;\n            ref .RouteStatus status;\n            ref .RouteSegment[] segments;\n            arg time firstDepartureTime;\n            arg time lastDepartureTime;\n            arg int frequencyMinutes;\n\n            identifier(routeId);\n        }\n\n        entity Vehicle extends ..infrastructure.Asset {\n            ref .VehicleType type;\n            arg string registrationNumber;\n            arg int capacity;\n            arg double currentFuelLevel;\n            arg int currentPassengerCount;\n            ref .TransportRoute currentRoute;\n\n            identifier(registrationNumber);\n        }\n    }\n\n    // Energy grid management\n    package energy {\n\n        enum EnergySource {\n            SOLAR(_);\n            WIND(_);\n            HYDRO(_);\n            BIOMASS(_);\n            GRID(_);\n        }\n\n        enum ConsumptionPattern {\n            arg string pattern;\n            arg double baselineKwh;\n            RESIDENTIAL(1, \"Home usage\", 10.0);\n            COMMERCIAL(2, \"Business usage\", 50.0);\n            INDUSTRIAL(3, \"Factory usage\", 200.0);\n            PUBLIC(4, \"Municipal usage\", 30.0);\n        }\n\n        entity PowerPlant extends ..infrastructure.Asset {\n            ref .EnergySource source;\n            arg double capacity;\n            arg double currentOutput;\n            arg double efficiency;\n            arg boolean isBackupSource;\n\n            identifier(assetId);\n        }\n\n        entity SmartMeter {\n            arg string meterId;\n            ref .ConsumptionPattern pattern;\n            arg double currentReading;\n            arg double peakDemand;\n            arg datetime lastReadingTime;\n            arg boolean isOnline;\n\n            identifier(meterId);\n        }\n    }\n\n    // Water management system\n    package water {\n\n        enum WaterQuality {\n            arg int level;\n            arg string description;\n            EXCELLENT(_, 1, \"Exceeds standards\");\n            GOOD(_, 2, \"Meets standards\");\n            FAIR(_, 3, \"Requires monitoring\");\n            POOR(_, 4, \"Requires action\");\n            CRITICAL(_, 5, \"Immediate action needed\");\n        }\n\n        entity WaterSource extends ..infrastructure.Asset {\n            arg double capacity;\n            arg double currentLevel;\n            ref .WaterQuality quality;\n            arg double flowRate;\n            arg boolean isActive;\n\n            identifier(assetId);\n        }\n\n        entity WaterTreatmentPlant extends ..infrastructure.Asset {\n            arg double processingCapacity;\n            arg double currentThroughput;\n            arg int treatmentStages;\n            arg boolean isOperating;\n\n            identifier(assetId);\n        }\n    }\n\n    // Waste management\n    package waste {\n\n        enum WasteType {\n            ORGANIC(_);\n            RECYCLABLE(_);\n            HAZARDOUS(_);\n            ELECTRONIC(_);\n            CONSTRUCTION(_);\n        }\n\n        entity WasteCollection {\n            arg string collectionId;\n            ref .WasteType type;\n            ref ..infrastructure.GeoLocation location;\n            arg datetime scheduledTime;\n            arg double estimatedVolume;\n            arg boolean isCompleted;\n\n            identifier(collectionId);\n        }\n\n        entity RecyclingFacility extends ..infrastructure.Asset {\n            ref .WasteType[] acceptedTypes;\n            arg double processingCapacity;\n            arg double currentStorage;\n            arg boolean isAcceptingWaste;\n\n            identifier(assetId);\n        }\n    }\n\n    // Environmental monitoring\n    package environment {\n\n        enum PollutantType {\n            CO_TWO(_);\n            NOX(_);\n            PM_TEN(_);\n            PM_TWENTY_FIVE(_);\n            SO_TWO(_);\n        }\n\n        struct AirQualityReading {\n            ref .PollutantType pollutant;\n            arg double concentration;\n            arg datetime timestamp;\n            arg boolean exceedsLimit;\n            func boolean requiresAlert();\n        }\n\n        entity MonitoringStation extends ..infrastructure.Asset {\n            arg string stationId;\n            ref .AirQualityReading[] readings;\n            arg boolean isCalibrated;\n            arg date lastCalibrationDate;\n\n            identifier(stationId);\n        }\n    }\n\n    // Emergency services management\n    package emergency {\n\n        enum EmergencyType {\n            FIRE(_);\n            MEDICAL(_);\n            POLICE(_);\n            DISASTER(_);\n            TRAFFIC(_);\n        }\n\n        enum ResponsePriority {\n            arg int code;\n            CRITICAL(1, 1);\n            HIGH(2, 2);\n            MEDIUM(3, 3);\n            LOW(4, 4);\n        }\n\n        entity EmergencyIncident {\n            arg string incidentId;\n            ref .EmergencyType type;\n            ref .ResponsePriority priority;\n            ref ..infrastructure.GeoLocation location;\n            arg datetime reportedTime;\n            arg datetime responseTime;\n            arg boolean isActive;\n\n            identifier(incidentId);\n        }\n\n        entity EmergencyTeam {\n            arg string teamId;\n            ref .EmergencyType specialty;\n            arg int memberCount;\n            ref ..infrastructure.GeoLocation currentLocation;\n            arg boolean isAvailable;\n\n            identifier(teamId);\n        }\n    }\n\n    // Smart building management\n    package buildings {\n\n        enum BuildingType {\n            RESIDENTIAL(_);\n            COMMERCIAL(_);\n            INDUSTRIAL(_);\n            GOVERNMENT(_);\n            MIXED_USE(_);\n        }\n\n        enum SecurityLevel {\n            arg int clearance;\n            HIGH(1, 1);\n            MEDIUM(2, 2);\n            LOW(3, 3);\n            PUBLIC(4, 4);\n        }\n\n        entity Building extends ..infrastructure.Asset {\n            ref .BuildingType type;\n            arg int floors;\n            arg double totalArea;\n            arg int occupancy;\n            ref .SecurityLevel securityLevel;\n            arg boolean isSmartEnabled;\n\n            identifier(assetId);\n        }\n\n        entity SmartDevice {\n            arg string deviceId;\n            ref Building building;\n            arg string deviceType;\n            arg boolean isOnline;\n            arg datetime lastPing;\n            arg string firmwareVersion;\n\n            identifier(deviceId);\n        }\n    }\n\n    // Citizen services\n    package citizens {\n\n        enum ServiceType {\n            ADMINISTRATIVE(_);\n            HEALTH(_);\n            EDUCATION(_);\n            RECREATION(_);\n            SOCIAL(_);\n        }\n\n        entity Citizen {\n            arg string citizenId;\n            arg string firstName;\n            arg string lastName;\n            ref ..infrastructure.GeoLocation residence;\n            arg date dateOfBirth;\n            arg string email;\n            arg string phone;\n\n            identifier(citizenId);\n        }\n\n        entity ServiceRequest {\n            arg string requestId;\n            ref .ServiceType type;\n            ref Citizen requester;\n            arg datetime submissionTime;\n            arg string status;\n            arg string description;\n\n            identifier(requestId);\n        }\n    }\n\n    // Data analytics and reporting\n    package analytics {\n\n        enum MetricType {\n            ENVIRONMENTAL(_);\n            TRAFFIC(_);\n            ENERGY(_);\n            SAFETY(_);\n            EFFICIENCY(_);\n        }\n\n        struct AnalyticsReport {\n            arg string reportId;\n            ref .MetricType type;\n            arg datetime generationTime;\n            arg string format;\n            arg boolean isPublic;\n            func void generatePDF();\n        }\n\n        entity DataPoint {\n            arg string dataId;\n            ref .MetricType type;\n            arg double value;\n            arg datetime timestamp;\n            arg string source;\n            arg boolean isVerified;\n\n            identifier(dataId);\n        }\n    }\n\n     // Healthcare management\n    package healthcare {\n            enum FacilityType {\n                HOSPITAL(_);\n                CLINIC(_);\n                PHARMACY(_);\n                LABORATORY(_);\n                NURSING_HOME(_);\n            }\n\n            enum MedicalSpecialty {\n                GENERAL_MEDICINE(_);\n                EMERGENCY(_);\n                PEDIATRICS(_);\n                SURGERY(_);\n                CARDIOLOGY(_);\n            }\n\n            struct PatientHistory {\n                arg string patientId;\n                arg datetime visitDate;\n                arg string diagnosis;\n                arg string treatment;\n                arg string notes;\n                func boolean isUrgent();\n            }\n\n            entity HealthcareFacility extends ..infrastructure.Asset {\n                ref .FacilityType type;\n                arg int bedCapacity;\n                arg int currentOccupancy;\n                arg boolean hasEmergencyUnit;\n                ref .MedicalSpecialty[] specialties;\n\n                identifier(assetId);\n            }\n\n            entity MedicalEquipment extends ..infrastructure.Asset {\n                arg string equipmentType;\n                arg string manufacturer;\n                arg date warrantyExpiry;\n                arg int hoursInUse;\n                arg boolean requiresCalibration;\n\n                identifier(assetId);\n            }\n        }\n\n    // Education system\n    package education {\n        enum InstitutionType {\n            PRIMARY_SCHOOL(_);\n            SECONDARY_SCHOOL(_);\n            UNIVERSITY(_);\n            VOCATIONAL(_);\n            LIBRARY(_);\n        }\n\n        enum CourseLevel {\n            BEGINNER(_);\n            INTERMEDIATE(_);\n            ADVANCED(_);\n            EXPERT(_);\n        }\n\n        entity EducationalInstitution extends ..infrastructure.Asset {\n            ref .InstitutionType type;\n            arg int studentCapacity;\n            arg int staffCount;\n            arg boolean isPublic;\n            arg string accreditationStatus;\n\n            identifier(assetId);\n        }\n\n        entity Course {\n            arg string courseId;\n            ref .CourseLevel level;\n            arg string title;\n            arg int credits;\n            arg int maxEnrollment;\n            arg boolean isOnline;\n\n            identifier(courseId);\n        }\n    }\n\n    // Smart agriculture\n    package agriculture {\n        enum CropType {\n            GRAIN(_);\n            VEGETABLE(_);\n            FRUIT(_);\n            FLOWER(_);\n            HERB(_);\n        }\n\n        enum IrrigationType {\n            DRIP(_);\n            SPRINKLER(_);\n            FLOOD(_);\n            MANUAL(_);\n        }\n\n        entity Farm extends ..infrastructure.Asset {\n            ref .CropType[] crops;\n            arg double area;\n            ref .IrrigationType irrigationType;\n            arg boolean isOrganic;\n            arg date lastHarvestDate;\n\n            identifier(assetId);\n        }\n\n        entity Sensor extends ..infrastructure.Asset {\n            arg string sensorType;\n            arg double readingValue;\n            arg string unit;\n            arg datetime lastReading;\n            arg boolean needsCalibration;\n\n            identifier(assetId);\n        }\n    }\n\n    // Tourism management\n    package tourism {\n        enum AttractionType {\n            HISTORICAL(_);\n            CULTURAL(_);\n            NATURAL(_);\n            RECREATIONAL(_);\n            COMMERCIAL(_);\n        }\n\n        enum SeasonType {\n            PEAK(_);\n            SHOULDER(_);\n            OFF_PEAK(_);\n            SPECIAL(_);\n        }\n\n        entity TouristAttraction extends ..infrastructure.Asset {\n            ref .AttractionType type;\n            arg int dailyVisitorCapacity;\n            arg double entryFee;\n            arg boolean isAccessible;\n            arg time[] openingHours;\n\n            identifier(assetId);\n        }\n\n        entity Event {\n            arg string eventId;\n            ref .SeasonType season;\n            arg string name;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg int expectedAttendance;\n\n            identifier(eventId);\n        }\n    }\n\n    // Smart parking\n    package parking {\n        enum ParkingType {\n            STREET(_);\n            GARAGE(_);\n            LOT(_);\n            PRIVATE(_);\n            SPECIAL(_);\n        }\n\n        enum VehicleSize {\n            COMPACT(_);\n            STANDARD(_);\n            LARGE(_);\n            MOTORCYCLE(_);\n            HANDICAP(_);\n        }\n\n        entity ParkingFacility extends ..infrastructure.Asset {\n            ref .ParkingType type;\n            arg int totalSpaces;\n            arg int availableSpaces;\n            arg double hourlyRate;\n            arg boolean hasChargingStations;\n\n            identifier(assetId);\n        }\n\n        entity ParkingTransaction {\n            arg string transactionId;\n            ref .VehicleSize vehicleSize;\n            arg datetime entryTime;\n            arg datetime exitTime;\n            arg double amount;\n            arg boolean isPaid;\n\n            identifier(transactionId);\n        }\n    }\n\n    // Weather monitoring\n    package weather {\n        enum WeatherCondition {\n            CLEAR(_);\n            CLOUDY(_);\n            RAIN(_);\n            SNOW(_);\n            STORM(_);\n        }\n\n        enum AlertLevel {\n            arg string description;\n            SEVERE(1, \"Immediate action required\");\n            WARNING(2, \"Be prepared\");\n            WATCH(3, \"Be aware\");\n            ADVISORY(4, \"For information\");\n        }\n\n        entity WeatherStation extends ..infrastructure.Asset {\n            arg double temperature;\n            arg double humidity;\n            arg double windSpeed;\n            arg double precipitation;\n            ref .WeatherCondition condition;\n\n            identifier(assetId);\n        }\n\n        entity WeatherAlert {\n            arg string alertId;\n            ref .AlertLevel level;\n            arg string message;\n            arg datetime issueTime;\n            arg datetime expiryTime;\n            arg boolean isActive;\n\n            identifier(alertId);\n        }\n    }\n\n    // Smart grid\n    package smartgrid {\n        enum GridComponent {\n            TRANSFORMER(_);\n            SUBSTATION(_);\n            SWITCHGEAR(_);\n            GENERATOR(_);\n            STORAGE(_);\n        }\n\n        enum LoadProfile {\n            arg double baseLoad;\n            RESIDENTIAL(1, 5.0);\n            COMMERCIAL(2, 20.0);\n            INDUSTRIAL(3, 100.0);\n            MUNICIPAL(4, 50.0);\n        }\n\n        entity GridNode extends ..infrastructure.Asset {\n            ref .GridComponent type;\n            arg double voltage;\n            arg double current;\n            ref .LoadProfile profile;\n            arg boolean isRedundant;\n\n            identifier(assetId);\n        }\n\n        entity PowerFlow {\n            arg string flowId;\n            ref GridNode source;\n            ref GridNode destination;\n            arg double amount;\n            arg datetime timestamp;\n            arg boolean isStable;\n\n            identifier(flowId);\n        }\n    }\n\n    // Urban planning\n    package urbanplanning {\n        enum ZoneType {\n            RESIDENTIAL(_);\n            COMMERCIAL(_);\n            INDUSTRIAL(_);\n            MIXED(_);\n            GREEN_SPACE(_);\n        }\n\n        enum DevelopmentStatus {\n            PROPOSED(_);\n            APPROVED(_);\n            UNDER_CONSTRUCTION(_);\n            COMPLETED(_);\n            SUSPENDED(_);\n        }\n\n        entity Zone extends ..infrastructure.Asset {\n            ref .ZoneType type;\n            arg double area;\n            arg double maxDensity;\n            arg int heightLimit;\n            arg boolean isHistorical;\n\n            identifier(assetId);\n        }\n\n        entity DevelopmentProject {\n            arg string projectId;\n            ref .DevelopmentStatus status;\n            arg string description;\n            arg date startDate;\n            arg date completionDate;\n            arg double budget;\n\n            identifier(projectId);\n        }\n    }\n\n    // Public safety\n    package safety {\n        enum IncidentType {\n            CRIME(_);\n            ACCIDENT(_);\n            FIRE(_);\n            MEDICAL(_);\n            INFRASTRUCTURE(_);\n        }\n\n        enum ResponseUnit {\n            POLICE(_);\n            FIRE(_);\n            AMBULANCE(_);\n            HAZMAT(_);\n            RESCUE(_);\n        }\n\n        entity SafetyIncident {\n            arg string incidentId;\n            ref .IncidentType type;\n            arg datetime reportTime;\n            arg string description;\n            arg boolean requiresEvacuation;\n            ref .ResponseUnit[] requiredUnits;\n\n            identifier(incidentId);\n        }\n\n        entity Evacuation {\n            arg string evacuationId;\n            ref SafetyIncident incident;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg int affectedPopulation;\n            arg boolean isCompleted;\n\n            identifier(evacuationId);\n        }\n    }\n\n    // Communication infrastructure\n    package communication {\n        enum NetworkType {\n            FIBER(_);\n            FIVE_G(_);\n            FOUR_G(_);\n            WIFI(_);\n            EMERGENCY(_);\n        }\n\n        enum Bandwidth {\n            arg int speed;\n            LOW(1, 10);\n            MEDIUM(2, 100);\n            HIGH(3, 1000);\n            ULTRA(4, 10000);\n        }\n\n        entity NetworkNode extends ..infrastructure.Asset {\n            ref .NetworkType type;\n            ref .Bandwidth bandwidth;\n            arg int connectedDevices;\n            arg double uptime;\n            arg boolean isRedundant;\n\n            identifier(assetId);\n        }\n\n        entity DataTransfer {\n            arg string transferId;\n            ref NetworkNode source;\n            ref NetworkNode destination;\n            arg double amount;\n            arg datetime timestamp;\n            arg boolean isEncrypted;\n\n            identifier(transferId);\n        }\n    }\n\n\n    // Cultural facilities management\n    package culture {\n        enum VenueType {\n            MUSEUM(_);\n            THEATER(_);\n            CONCERT_HALL(_);\n            ART_GALLERY(_);\n            AMPHITHEATER(_);\n        }\n\n        enum EventCategory {\n            EXHIBITION(_);\n            PERFORMANCE(_);\n            WORKSHOP(_);\n            SCREENING(_);\n            LECTURE(_);\n        }\n\n        struct TicketInfo {\n            arg double basePrice;\n            arg double discount;\n            arg int availableSeats;\n            arg boolean isRefundable;\n            func double calculateFinalPrice();\n        }\n\n        entity CulturalVenue extends ..infrastructure.Asset {\n            ref .VenueType type;\n            arg int capacity;\n            arg boolean hasAccessibility;\n            arg string[] facilities;\n            arg time[] operatingHours;\n\n            identifier(assetId);\n        }\n\n        entity CulturalEvent {\n            arg string eventId;\n            ref .EventCategory category;\n            ref .TicketInfo ticketing;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string curator;\n\n            identifier(eventId);\n        }\n    }\n\n    // Sports facilities\n    package sports {\n        enum FacilityType {\n            STADIUM(_);\n            GYMNASIUM(_);\n            POOL(_);\n            COURT(_);\n            FIELD(_);\n        }\n\n        enum SportType {\n            FOOTBALL(_);\n            BASKETBALL(_);\n            SWIMMING(_);\n            TENNIS(_);\n            ATHLETICS(_);\n        }\n\n        entity SportsFacility extends ..infrastructure.Asset {\n            ref .FacilityType type;\n            ref .SportType[] supportedSports;\n            arg int spectatorCapacity;\n            arg boolean hasFloodlights;\n            arg boolean isIndoor;\n\n            identifier(assetId);\n        }\n\n        entity Tournament {\n            arg string tournamentId;\n            ref .SportType sport;\n            arg date startDate;\n            arg date endDate;\n            arg int participants;\n            arg string sponsor;\n\n            identifier(tournamentId);\n        }\n    }\n\n    // Waste water management\n    package wastewater {\n        enum TreatmentStage {\n            PRIMARY(_);\n            SECONDARY(_);\n            TERTIARY(_);\n            ADVANCED(_);\n        }\n\n        enum WaterQualityMetric {\n            arg string unit;\n            BOD(1, \"mg/L\");\n            COD(2, \"mg/L\");\n            TSS(3, \"mg/L\");\n            PH(4, \"pH\");\n        }\n\n        entity TreatmentPlant extends ..infrastructure.Asset {\n            ref .TreatmentStage[] stages;\n            arg double dailyCapacity;\n            arg double currentFlow;\n            arg boolean isOperational;\n            arg date lastInspection;\n\n            identifier(assetId);\n        }\n\n        entity QualityTest {\n            arg string testId;\n            ref .WaterQualityMetric metric;\n            arg double value;\n            arg datetime timestamp;\n            arg boolean meetsStandard;\n            arg string analyst;\n\n            identifier(testId);\n        }\n    }\n\n    // Public transit payments\n    package transit_payment {\n        enum PaymentMethod {\n            CARD(_);\n            MOBILE(_);\n            TOKEN(_);\n            CASH(_);\n            SUBSCRIPTION(_);\n        }\n\n        enum FareType {\n            arg double baseRate;\n            SINGLE(1, 2.50);\n            DAY_PASS(2, 8.00);\n            WEEK_PASS(3, 30.00);\n            MONTH_PASS(4, 100.00);\n        }\n\n        entity TransitCard {\n            arg string cardId;\n            ref .PaymentMethod method;\n            ref .FareType fareType;\n            arg double balance;\n            arg date expiryDate;\n            arg boolean isActive;\n\n            identifier(cardId);\n        }\n\n        entity FareTransaction {\n            arg string transactionId;\n            ref TransitCard card;\n            arg datetime timestamp;\n            arg double amount;\n            arg string route;\n            arg boolean isRefunded;\n\n            identifier(transactionId);\n        }\n    }\n\n    // Digital signage\n    package signage {\n        enum SignType {\n            TRAFFIC(_);\n            INFORMATION(_);\n            ADVERTISING(_);\n            EMERGENCY(_);\n            WAYFINDING(_);\n        }\n\n        enum ContentType {\n            TEXT(_);\n            IMAGE(_);\n            VIDEO(_);\n            MIXED(_);\n        }\n\n        entity DigitalSign extends ..infrastructure.Asset {\n            ref .SignType type;\n            ref .ContentType contentType;\n            arg string resolution;\n            arg boolean isInteractive;\n            arg time[] activeHours;\n\n            identifier(assetId);\n        }\n\n        entity SignContent {\n            arg string contentId;\n            ref DigitalSign sign;\n            arg string content;\n            arg datetime startDisplay;\n            arg datetime endDisplay;\n            arg int priority;\n\n            identifier(contentId);\n        }\n    }\n\n    // Noise monitoring\n    package noise {\n        enum NoiseSource {\n            TRAFFIC(_);\n            CONSTRUCTION(_);\n            ENTERTAINMENT(_);\n            INDUSTRIAL(_);\n            URBAN(_);\n        }\n\n        enum NoiseLevel {\n            arg int decibels;\n            LOW(1, 40);\n            MODERATE(2, 60);\n            HIGH(3, 80);\n            DANGEROUS(4, 100);\n        }\n\n        entity NoiseSensor extends ..infrastructure.Asset {\n            ref .NoiseSource sources;\n            ref .NoiseLevel currentLevel;\n            arg double averageReading;\n            arg datetime lastPeak;\n            arg boolean needsCalibration;\n\n            identifier(assetId);\n        }\n\n        entity NoiseComplaint {\n            arg string complaintId;\n            ref .NoiseSource source;\n            arg datetime reportTime;\n            arg string description;\n            arg boolean isResolved;\n            arg string resolution;\n\n            identifier(complaintId);\n        }\n    }\n\n    // Smart lighting\n    package lighting {\n        enum LightType {\n            LED(_);\n            SOLAR(_);\n            HALOGEN(_);\n            SMART(_);\n            EMERGENCY(_);\n        }\n\n        enum BrightnessLevel {\n            arg int percentage;\n            OFF(0, 0);\n            DIM(1, 25);\n            MEDIUM(2, 50);\n            BRIGHT(3, 100);\n        }\n\n        entity StreetLight extends ..infrastructure.Asset {\n            ref .LightType type;\n            ref .BrightnessLevel brightness;\n            arg double energyConsumption;\n            arg boolean hasMotionSensor;\n            arg time[] scheduleOn;\n\n            identifier(assetId);\n        }\n\n        entity LightingZone {\n            arg string zoneId;\n            ref StreetLight[] lights;\n            arg string schedule;\n            arg boolean isDimmed;\n            arg double dailyUsage;\n\n            identifier(zoneId);\n        }\n    }\n\n    // Market management\n    package markets {\n        enum MarketType {\n            FARMERS(_);\n            FLEA(_);\n            FOOD(_);\n            CRAFT(_);\n            NIGHT(_);\n        }\n\n        enum VendorCategory {\n            PRODUCE(_);\n            PREPARED_FOOD(_);\n            CRAFTS(_);\n            SERVICES(_);\n            MIXED(_);\n        }\n\n        entity Market extends ..infrastructure.Asset {\n            ref .MarketType type;\n            arg int stallCapacity;\n            arg string[] operatingDays;\n            arg time openTime;\n            arg time closeTime;\n\n            identifier(assetId);\n        }\n\n        entity Vendor {\n            arg string vendorId;\n            ref .VendorCategory category;\n            ref Market market;\n            arg string products;\n            arg boolean isRegistered;\n            arg date licenseExpiry;\n\n            identifier(vendorId);\n        }\n    }\n\n    // Drone management\n    package drones {\n        enum DroneType {\n            SURVEILLANCE(_);\n            DELIVERY(_);\n            MAINTENANCE(_);\n            EMERGENCY(_);\n            MAPPING(_);\n        }\n\n        enum FlightStatus {\n            GROUNDED(_);\n            FLYING(_);\n            CHARGING(_);\n            MAINTENANCE(_);\n            EMERGENCY(_);\n        }\n\n        entity Drone extends ..infrastructure.Asset {\n            ref .DroneType type;\n            ref .FlightStatus flightStatus;\n            arg double batteryLevel;\n            arg double maxAltitude;\n            arg double range;\n\n            identifier(assetId);\n        }\n\n        entity FlightMission {\n            arg string missionId;\n            ref Drone drone;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string purpose;\n            arg boolean isCompleted;\n\n            identifier(missionId);\n        }\n    }\n\n    // Public furniture\n    package furniture {\n        enum FurnitureType {\n            BENCH(_);\n            BIN(_);\n            SHELTER(_);\n            KIOSK(_);\n            ART(_);\n        }\n\n        enum MaintenanceState {\n            NEW(_);\n            GOOD(_);\n            FAIR(_);\n            POOR(_);\n            REPLACE(_);\n        }\n\n        entity StreetFurniture extends ..infrastructure.Asset {\n            ref .FurnitureType type;\n            ref .MaintenanceState state;\n            arg string material;\n            arg boolean needsRepair;\n\n            identifier(assetId);\n        }\n\n        entity MaintenanceRecord {\n            arg string recordId;\n            ref StreetFurniture furniture;\n            arg date maintenanceDate;\n            arg string work;\n            arg double cost;\n            arg string contractor;\n\n            identifier(recordId);\n        }\n    }\n\n    // Smart restaurant management\n    package restaurants {\n        enum CuisineType {\n            ITALIAN(_);\n            ASIAN(_);\n            AMERICAN(_);\n            MEXICAN(_);\n            FUSION(_);\n        }\n\n        enum FoodSafetyRating {\n            arg string description;\n            A(1, \"Excellent\");\n            B(2, \"Good\");\n            C(3, \"Fair\");\n            D(4, \"Poor\");\n            F(5, \"Failed\");\n        }\n\n        struct MenuSection {\n            arg string name;\n            // TODO []\n            arg string items;\n            // TODO []\n            arg double prices;\n            arg boolean isSpecial;\n            func double getAveragePrice();\n        }\n\n        entity Restaurant extends ..infrastructure.Asset {\n            ref .CuisineType type;\n            ref .FoodSafetyRating rating;\n            arg int seatingCapacity;\n            arg boolean hasDelivery;\n            arg time[] operatingHours;\n\n            identifier(assetId);\n        }\n\n        entity Inspection {\n            arg string inspectionId;\n            ref Restaurant restaurant;\n            arg date inspectionDate;\n            arg string[] violations;\n            arg boolean passed;\n            arg date followupDate;\n\n            identifier(inspectionId);\n        }\n    }\n\n    // Smart retail\n    package retail {\n        enum StoreType {\n            GROCERY(_);\n            CLOTHING(_);\n            ELECTRONICS(_);\n            PHARMACY(_);\n            DEPARTMENT(_);\n        }\n\n        enum CustomerSegment {\n            BUDGET(_);\n            MAINSTREAM(_);\n            PREMIUM(_);\n            LUXURY(_);\n        }\n\n        entity RetailStore extends ..infrastructure.Asset {\n            ref .StoreType type;\n            ref .CustomerSegment segment;\n            arg double floorArea;\n            arg int employeeCount;\n            arg boolean isChainStore;\n\n            identifier(assetId);\n        }\n\n        entity InventoryItem {\n            arg string itemId;\n            ref RetailStore store;\n            arg string name;\n            arg int stockLevel;\n            arg double price;\n            arg boolean isDiscounted;\n\n            identifier(itemId);\n        }\n    }\n\n    // Cemetery management\n    package cemetery {\n        enum PlotType {\n            SINGLE(_);\n            FAMILY(_);\n            MAUSOLEUM(_);\n            COLUMBARIUM(_);\n            MEMORIAL(_);\n        }\n\n        enum MaintenanceSchedule {\n            WEEKLY(_);\n            MONTHLY(_);\n            QUARTERLY(_);\n            ANNUAL(_);\n            AS_NEEDED(_);\n        }\n\n        entity Cemetery extends ..infrastructure.Asset {\n            ref .PlotType[] availableTypes;\n            arg double totalArea;\n            arg int totalPlots;\n            arg int availablePlots;\n            arg boolean hasChapel;\n\n            identifier(assetId);\n        }\n\n        entity Plot {\n            arg string plotId;\n            ref .PlotType type;\n            ref .MaintenanceSchedule schedule;\n            arg date lastMaintenance;\n            arg boolean isOccupied;\n            arg string owner;\n\n            identifier(plotId);\n        }\n    }\n\n    // Smart postal service\n    package postal {\n        enum MailType {\n            LETTER(_);\n            PACKAGE(_);\n            EXPRESS(_);\n            REGISTERED(_);\n            BULK(_);\n        }\n\n        enum DeliveryStatus {\n            RECEIVED(_);\n            SORTING(_);\n            IN_TRANSIT(_);\n            OUT_FOR_DELIVERY(_);\n            DELIVERED(_);\n        }\n\n        entity PostOffice extends ..infrastructure.Asset {\n            arg int counterCount;\n            arg int staffCount;\n            arg boolean hasAutomation;\n            arg time[] serviceHours;\n            arg double storageCapacity;\n\n            identifier(assetId);\n        }\n\n        entity Shipment {\n            arg string trackingId;\n            ref .MailType type;\n            ref .DeliveryStatus status;\n            arg datetime receivedTime;\n            arg datetime estimatedDelivery;\n            arg boolean isInsured;\n\n            identifier(trackingId);\n        }\n    }\n\n    // Public art\n    package public_art {\n        enum ArtType {\n            SCULPTURE(_);\n            MURAL(_);\n            INSTALLATION(_);\n            INTERACTIVE(_);\n            TEMPORARY(_);\n        }\n\n        enum ArtistType {\n            LOCAL(_);\n            NATIONAL(_);\n            INTERNATIONAL(_);\n            STUDENT(_);\n            COLLECTIVE(_);\n        }\n\n        entity Artwork extends ..infrastructure.Asset {\n            ref .ArtType type;\n            ref .ArtistType artistType;\n            arg boolean requiresRestoration;\n            arg string materials;\n\n            identifier(assetId);\n        }\n\n        entity ArtEvent {\n            arg string eventId;\n            ref Artwork artwork;\n            arg string eventType;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg int attendees;\n\n            identifier(eventId);\n        }\n    }\n\n    // Smart elevators\n    package elevators {\n        enum ElevatorType {\n            PASSENGER(_);\n            FREIGHT(_);\n            SERVICE(_);\n            PANORAMIC(_);\n            EMERGENCY(_);\n        }\n\n        enum OperationalStatus {\n            OPERATIONAL(_);\n            MAINTENANCE(_);\n            OUT_OF_SERVICE(_);\n            INSPECTION(_);\n            EMERGENCY(_);\n        }\n\n        entity Elevator extends ..infrastructure.Asset {\n            ref .ElevatorType type;\n            ref .OperationalStatus operationalStatus;\n            arg int capacity;\n            arg int currentFloor;\n            arg int totalFloors;\n\n            identifier(assetId);\n        }\n\n        entity MaintenanceLog {\n            arg string logId;\n            ref Elevator elevator;\n            arg datetime serviceTime;\n            arg string technician;\n            arg string work;\n            arg boolean resolved;\n\n            identifier(logId);\n        }\n    }\n\n    // Climate action\n    package climate {\n        enum EmissionSource {\n            TRANSPORT(_);\n            BUILDINGS(_);\n            INDUSTRY(_);\n            WASTE(_);\n            ENERGY(_);\n        }\n\n        enum MitigationStrategy {\n            REDUCTION(_);\n            OFFSET(_);\n            ADAPTATION(_);\n            PREVENTION(_);\n            INNOVATION(_);\n        }\n\n        entity EmissionReport {\n            arg string reportId;\n            ref .EmissionSource source;\n            arg double amount;\n            arg string unit;\n            arg date measurementDate;\n            arg boolean verified;\n\n            identifier(reportId);\n        }\n\n        entity ClimateProject {\n            arg string projectId;\n            ref .MitigationStrategy strategy;\n            arg string description;\n            arg date startDate;\n            arg double budget;\n            arg boolean isActive;\n\n            identifier(projectId);\n        }\n    }\n\n    // Snow removal\n    package snow_removal {\n        enum PriorityLevel {\n            EMERGENCY(_);\n            PRIMARY(_);\n            SECONDARY(_);\n            RESIDENTIAL(_);\n            SIDEWALK(_);\n        }\n\n        enum TreatmentType {\n            PLOW(_);\n            SALT(_);\n            SAND(_);\n            CHEMICAL(_);\n            MANUAL(_);\n        }\n\n        entity SnowRoute {\n            arg string routeId;\n            ref .PriorityLevel priority;\n            arg double length;\n            arg int estimatedTime;\n            arg boolean isCleared;\n            arg datetime lastCleared;\n\n            identifier(routeId);\n        }\n\n        entity TreatmentOperation {\n            arg string operationId;\n            ref .TreatmentType type;\n            ref SnowRoute route;\n            arg datetime startTime;\n            arg datetime completionTime;\n            arg double materialUsed;\n\n            identifier(operationId);\n        }\n    }\n\n    // Urban wildlife\n    package wildlife {\n        enum SpeciesType {\n            BIRD(_);\n            MAMMAL(_);\n            REPTILE(_);\n            AMPHIBIAN(_);\n            INSECT(_);\n        }\n\n        enum HabitatType {\n            PARK(_);\n            WATERWAY(_);\n            URBAN(_);\n            PROTECTED(_);\n            CORRIDOR(_);\n        }\n\n        entity WildlifeZone extends ..infrastructure.Asset {\n            ref .HabitatType type;\n            arg double area;\n            ref .SpeciesType[] presentSpecies;\n            arg boolean isProtected;\n            arg date lastSurvey;\n\n            identifier(assetId);\n        }\n\n        entity WildlifeIncident {\n            arg string incidentId;\n            ref .SpeciesType species;\n            arg datetime reportTime;\n            arg string description;\n            arg boolean requiresAction;\n            arg string resolution;\n\n            identifier(incidentId);\n        }\n    }\n\n    // Public bathrooms\n    package bathrooms {\n        enum BathroomType {\n            PERMANENT(_);\n            PORTABLE(_);\n            AUTOMATED(_);\n            ACCESSIBLE(_);\n            FAMILY(_);\n        }\n\n        enum CleaningStatus {\n            CLEAN(_);\n            NEEDS_CLEANING(_);\n            IN_PROGRESS(_);\n            OUT_OF_SERVICE(_);\n            EMERGENCY(_);\n        }\n\n        entity PublicBathroom extends ..infrastructure.Asset {\n            ref .BathroomType type;\n            ref .CleaningStatus cleaningStatus;\n            arg boolean isOccupied;\n            arg datetime lastCleaning;\n            arg boolean hasChangingTable;\n\n            identifier(assetId);\n        }\n\n        entity MaintenanceTicket {\n            arg string ticketId;\n            ref PublicBathroom bathroom;\n            arg string issue;\n            arg datetime reportTime;\n            arg boolean isUrgent;\n            arg boolean resolved;\n\n            identifier(ticketId);\n        }\n    }\n\n    // Smart Manufacturing Hub Management\n    package manufacturing {\n        enum ProductionLineType {\n            ASSEMBLY(_);\n            PACKAGING(_);\n            TESTING(_);\n            MACHINING(_);\n            FINISHING(_);\n            CHEMICAL_PROCESSING(_);\n            FOOD_PROCESSING(_);\n            ELECTRONICS(_);\n            AUTOMOTIVE(_);\n            PHARMACEUTICAL(_);\n        }\n\n        enum QualityStandard {\n            arg string code;\n            arg int level;\n            ISO_NINE_THOUSAND_ONE(1, \"ISO-9001\", 1);\n            ISO_FOURTEEN_THOUSAND_ONE(2, \"ISO-14001\", 1);\n            GMP(3, \"GMP\", 2);\n            HACCP(4, \"HACCP\", 2);\n            SIX_SIGMA(5, \"6σ\", 3);\n        }\n\n        enum MachineStatus {\n            RUNNING(_);\n            IDLE(_);\n            MAINTENANCE(_);\n            ERROR(_);\n            OFFLINE(_);\n            CALIBRATING(_);\n            WARMING_UP(_);\n            COOLING_DOWN(_);\n            EMERGENCY_STOP(_);\n            STANDBY(_);\n        }\n\n        struct ProductionMetrics {\n            arg int targetOutput;\n            arg int actualOutput;\n            arg double efficiency;\n            arg int defectRate;\n            arg double energyConsumption;\n            arg double materialWaste;\n            func double calculateOEE();\n            func boolean isOnTarget();\n            func double getVariance();\n        }\n\n        struct MaintenanceSchedule {\n            arg date lastMaintenance;\n            arg date nextMaintenance;\n            arg int frequency;\n            // TODO []\n            arg string tasks;\n            arg string responsible;\n            func boolean isOverdue();\n        }\n\n        entity ManufacturingPlant extends ..infrastructure.Asset {\n            ref .ProductionLineType[] productionTypes;\n            ref .QualityStandard[] certifications;\n            arg int employeeCount;\n            arg double productionCapacity;\n            arg boolean isTwentyFourSeven;\n            arg string[] safetyProtocols;\n            arg double totalArea;\n            arg int shiftCount;\n\n            identifier(assetId);\n        }\n\n        entity ProductionLine {\n            arg string lineId;\n            ref .ProductionLineType type;\n            ref .MachineStatus status;\n            ref .ProductionMetrics metrics;\n            arg int workerCount;\n            arg double outputRate;\n            arg string currentProduct;\n            arg datetime lastStartup;\n\n            identifier(lineId);\n        }\n\n        entity Machine {\n            arg string machineId;\n            ref .MachineStatus status;\n            ref .MaintenanceSchedule maintenance;\n            arg string manufacturer;\n            arg string model;\n            arg date installationDate;\n            arg double powerConsumption;\n            arg string[] capabilities;\n\n            identifier(machineId);\n        }\n\n        entity QualityCheck {\n            arg string checkId;\n            ref ProductionLine line;\n            arg datetime timestamp;\n            arg string inspector;\n            arg string[] parameters;\n            arg boolean passed;\n            arg string[] defects;\n            arg string action;\n\n            identifier(checkId);\n        }\n\n        entity MaterialInventory {\n            arg string inventoryId;\n            arg string materialType;\n            arg double quantity;\n            arg string unit;\n            arg date expiryDate;\n            arg string supplier;\n            arg string storageLocation;\n            arg boolean hazardous;\n\n            identifier(inventoryId);\n        }\n\n    }\n\n    // Advanced Healthcare Management\n    package healthcare_extended {\n        enum MedicalDepartment {\n            EMERGENCY(_);\n            SURGERY(_);\n            PEDIATRICS(_);\n            CARDIOLOGY(_);\n            NEUROLOGY(_);\n            ORTHOPEDICS(_);\n            ONCOLOGY(_);\n            RADIOLOGY(_);\n            ICU(_);\n            PHARMACY(_);\n        }\n\n        enum PatientStatus {\n            ADMITTED(_);\n            OUTPATIENT(_);\n            CRITICAL(_);\n            STABLE(_);\n            DISCHARGED(_);\n            TRANSFERRED(_);\n            QUARANTINE(_);\n            OBSERVATION(_);\n            RECOVERY(_);\n            EMERGENCY(_);\n        }\n\n        enum TreatmentType {\n            MEDICATION(_);\n            SURGERY(_);\n            THERAPY(_);\n            DIAGNOSTIC(_);\n            PREVENTIVE(_);\n            EMERGENCY(_);\n            PALLIATIVE(_);\n            REHABILITATION(_);\n            ALTERNATIVE(_);\n            EXPERIMENTAL(_);\n        }\n\n        struct VitalSigns {\n            arg double temperature;\n            arg int heartRate;\n            arg int bloodPressureSystolic;\n            arg int bloodPressureDiastolic;\n            arg int respiratoryRate;\n            arg double oxygenSaturation;\n            func boolean isNormal();\n            func string getStatus();\n        }\n\n        entity Patient {\n            arg string patientId;\n            ref .PatientStatus status;\n            ref .MedicalDepartment department;\n            ref .VitalSigns vitals;\n            arg string[] allergies;\n            arg string[] medications;\n            arg string bloodType;\n            arg date admissionDate;\n\n            identifier(patientId);\n        }\n\n        entity Treatment {\n            arg string treatmentId;\n            ref .TreatmentType type;\n            ref Patient patient;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string provider;\n            arg string notes;\n            arg boolean completed;\n\n            identifier(treatmentId);\n        }\n\n    }\n\n    // Smart Education Extended\n    package education_extended {\n        enum CourseType {\n            LECTURE(_);\n            SEMINAR(_);\n            LABORATORY(_);\n            WORKSHOP(_);\n            ONLINE(_);\n            HYBRID(_);\n            FIELD_WORK(_);\n            RESEARCH(_);\n            PRACTICUM(_);\n            THESIS(_);\n        }\n    }\n\n    // Smart Library Management\n    package library {\n        enum LibraryResourceType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIOBOOK(_);\n            JOURNAL(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n            MULTIMEDIA(_);\n            RESEARCH_PAPER(_);\n            ARCHIVE(_);\n            SPECIAL_COLLECTION(_);\n        }\n\n        enum MembershipLevel {\n            arg int maxBorrows;\n            arg int durationDays;\n            BASIC(1, 3, 14);\n            STANDARD(2, 5, 21);\n            PREMIUM(3, 10, 30);\n            RESEARCHER(4, 15, 45);\n            INSTITUTIONAL(5, 20, 60);\n        }\n\n        struct LoanPolicy {\n            arg int maxRenewals;\n            arg double lateFeePerDay;\n            arg int gracePeriod;\n            arg boolean allowsReservation;\n            func double calculateLateFee(int daysOverdue);\n        }\n\n        entity LibraryBranch extends ..infrastructure.Asset {\n            arg string branchName;\n            arg int capacity;\n            arg int computerStations;\n            arg boolean hasStudyRooms;\n            arg time[] operatingHours;\n            arg string[] facilities;\n\n            identifier(assetId);\n        }\n\n        entity LibraryResource {\n            arg string resourceId;\n            ref .LibraryResourceType type;\n            arg string title;\n            arg string[] authors;\n            arg date publicationDate;\n            arg string publisher;\n            arg string location;\n            arg boolean isAvailable;\n\n            identifier(resourceId);\n        }\n\n        entity LibraryMember {\n            arg string memberId;\n            ref .MembershipLevel level;\n            arg string name;\n            arg string email;\n            arg date joinDate;\n            arg date membershipExpiry;\n            arg boolean isActive;\n            arg int currentBorrows;\n\n            identifier(memberId);\n        }\n\n        entity LoanTransaction {\n            arg string loanId;\n            ref LibraryMember member;\n            ref LibraryResource resource;\n            arg datetime borrowDate;\n            arg datetime dueDate;\n            arg datetime returnDate;\n            arg boolean isOverdue;\n            arg double fineAmount;\n\n            identifier(loanId);\n        }\n\n        entity StudyRoom {\n            arg string roomId;\n            ref LibraryBranch branch;\n            arg int capacity;\n            arg boolean hasProjector;\n            arg boolean hasWhiteboard;\n            arg boolean isOccupied;\n            arg datetime[] reservations;\n\n            identifier(roomId);\n        }\n    }\n\n    // Pet and Animal Management\n    package animal_management {\n        enum PetType {\n            DOG(_);\n            CAT(_);\n            BIRD(_);\n            FISH(_);\n            REPTILE(_);\n            SMALL_MAMMAL(_);\n            EXOTIC(_);\n            FARM_ANIMAL(_);\n            WILDLIFE(_);\n            SERVICE_ANIMAL(_);\n        }\n\n        enum LicenseStatus {\n            ACTIVE(_);\n            EXPIRED(_);\n            PENDING(_);\n            REVOKED(_);\n            TEMPORARY(_);\n        }\n\n        struct VaccinationRecord {\n            arg string vaccineName;\n            arg date administeredDate;\n            arg date expiryDate;\n            arg string veterinarian;\n            func boolean isValid();\n        }\n\n        entity Pet {\n            arg string petId;\n            ref .PetType type;\n            arg string name;\n            arg string breed;\n            arg date birthDate;\n            ref .LicenseStatus licenseStatus;\n            arg string ownerName;\n            arg string microchipId;\n\n            identifier(petId);\n        }\n\n        entity VeterinaryClinic extends ..infrastructure.Asset {\n            arg string clinicName;\n            arg string[] services;\n            arg boolean emergencyTwentyFourHour;\n            arg int capacity;\n            arg string[] specialists;\n            arg boolean hasLaboratory;\n\n            identifier(assetId);\n        }\n\n        entity AnimalControl {\n            arg string caseId;\n            ref .PetType animalType;\n            arg datetime reportTime;\n            arg string incidentType;\n            arg string location;\n            arg boolean resolved;\n            arg string resolution;\n\n            identifier(caseId);\n        }\n\n        entity PetLicense {\n            arg string licenseId;\n            ref Pet pet;\n            ref .LicenseStatus status;\n            arg date issueDate;\n            arg date expiryDate;\n            arg double fee;\n            arg boolean rabiesVaccinated;\n\n            identifier(licenseId);\n        }\n\n        entity AnimalShelter extends ..infrastructure.Asset {\n            arg string shelterName;\n            arg int capacity;\n            arg int currentOccupancy;\n            arg boolean acceptsStrays;\n            arg boolean providesVetCare;\n            arg string[] services;\n\n            identifier(assetId);\n        }\n    }\n\n    // Film and Media Production Management\n    package media_production {\n        enum ProductionType {\n            FILM(_);\n            TV(_);\n            COMMERCIAL(_);\n            DOCUMENTARY(_);\n            MUSIC_VIDEO(_);\n            PHOTOSHOOT(_);\n            LIVE_EVENT(_);\n            STUDENT_FILM(_);\n            NEWS(_);\n            DIGITAL_CONTENT(_);\n        }\n\n        enum PermitStatus {\n            PENDING(_);\n            APPROVED(_);\n            DENIED(_);\n            MODIFIED(_);\n            EXPIRED(_);\n        }\n\n        struct LocationRequirements {\n            arg boolean needsPowerSupply;\n            arg boolean needsParking;\n            arg boolean needsTrafficControl;\n            arg boolean needsSecurityPresence;\n            func boolean checkCompliance();\n        }\n\n        entity FilmPermit {\n            arg string permitId;\n            ref .ProductionType type;\n            ref .PermitStatus status;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string location;\n            arg int crewSize;\n            arg string[] equipment;\n\n            identifier(permitId);\n        }\n\n        entity FilmLocation extends ..infrastructure.Asset {\n            arg string locationName;\n            arg string[] features;\n            arg boolean isIndoor;\n            arg double dailyRate;\n            arg int maxOccupancy;\n            arg boolean hasParking;\n\n            identifier(assetId);\n        }\n\n        entity ProductionCrew {\n            arg string crewId;\n            ref FilmPermit permit;\n            arg string productionCompany;\n            arg string contactPerson;\n            arg string[] vehicles;\n            arg string[] specialNeeds;\n\n            identifier(crewId);\n        }\n\n        entity ImpactNotification {\n            arg string notificationId;\n            ref FilmPermit permit;\n            arg datetime noticeTime;\n            arg string[] affectedAreas;\n            arg string[] mitigation;\n            arg boolean requiresEvacuation;\n\n            identifier(notificationId);\n        }\n\n        entity Equipment {\n            arg string equipmentId;\n            arg string type;\n            arg string specifications;\n            arg boolean requiresPermit;\n            arg double powerRequirement;\n            arg string[] restrictions;\n\n            identifier(equipmentId);\n        }\n    }\n\n    // Scientific Research Facility Management\n    package research_facilities {\n        // Abstract base structures for research management\n        struct ResearchMetadata {\n            // TODO []\n            arg string keywords;\n            // TODO []\n            arg string classifications;\n            arg string methodology;\n            arg date startDate;\n            arg date endDate;\n            func boolean isActive();\n            // TODO [] return\n            func string getCollaborators();\n            func double calculateProgress();\n        }\n\n        struct EquipmentSpecification {\n            arg double precision;\n            arg double accuracy;\n            // TODO []\n            arg string calibrationRequirements;\n            // TODO []\n            arg string operatingConditions;\n            arg datetime lastVerification;\n            func boolean needsCalibration();\n            func boolean meetsStandards();\n        }\n\n        // Detailed categorization enums\n        enum ResearchDomain {\n            arg string field;\n            arg int complexityLevel;\n            QUANTUM_PHYSICS(1, \"Quantum Mechanics\", 5);\n            MOLECULAR_BIOLOGY(2, \"Molecular Studies\", 4);\n            NEUROSCIENCE(3, \"Brain Research\", 5);\n            CLIMATE_SCIENCE(4, \"Climate Studies\", 4);\n            MATERIALS_SCIENCE(5, \"Materials Research\", 3);\n            COMPUTER_SCIENCE(6, \"Computing\", 4);\n            PSYCHOLOGY(7, \"Behavioral Studies\", 3);\n            GENETICS(8, \"Genetic Research\", 5);\n            ROBOTICS(9, \"Robotics Research\", 4);\n            NANOTECHNOLOGY(10, \"Nano Research\", 5);\n        }\n\n        enum ExperimentalPhase {\n            DESIGN(_);\n            SETUP(_);\n            DATA_COLLECTION(_);\n            ANALYSIS(_);\n            VERIFICATION(_);\n            PEER_REVIEW(_);\n            PUBLICATION(_);\n            REPLICATION(_);\n            ARCHIVAL(_);\n            EXTENSION(_);\n        }\n\n        enum DataClassification {\n            arg int securityLevel;\n            arg string retentionPeriod;\n            PUBLIC(1, 0, \"1Y\");\n            CONFIDENTIAL(2, 1, \"5Y\");\n            RESTRICTED(3, 2, \"10Y\");\n            CLASSIFIED(4, 3, \"25Y\");\n            TOP_SECRET(5, 4, \"50Y\");\n        }\n\n        // Core research facility entities\n        entity Laboratory extends ..infrastructure.Asset {\n            // TODO []\n            ref .ResearchDomain domains;\n            ref .DataClassification securityLevel;\n            // TODO []\n            arg string specializations;\n            arg double totalArea;\n            arg int workstationCount;\n            arg boolean hasCleanRoom;\n            // TODO []\n            arg string safetyProtocols;\n            // TODO []\n            arg string certifications;\n\n            identifier(assetId);\n        }\n\n        entity Experiment {\n            arg string experimentId;\n            ref .ExperimentalPhase phase;\n            ref .ResearchMetadata metadata;\n            ref Laboratory location;\n            arg datetime scheduledStart;\n            arg datetime scheduledEnd;\n            // TODO []\n            arg string prerequisites;\n            arg string dependencies;\n            arg boolean hasEthicalApproval;\n\n            identifier(experimentId);\n        }\n\n        entity ResearchEquipment extends ..infrastructure.Asset {\n            ref .EquipmentSpecification specs;\n            arg string manufacturer;\n            arg string model;\n            arg string serialNumber;\n            arg date purchaseDate;\n            arg date warrantyExpiry;\n            arg datetime lastCalibration;\n            arg string[] supportedExperiments;\n            arg boolean requiresSpecialTraining;\n\n            identifier(assetId);\n        }\n\n        // Specialized monitoring and control entities\n        entity EnvironmentalControl {\n            arg string controlId;\n            ref Laboratory lab;\n            arg double temperature;\n            arg double humidity;\n            arg double pressure;\n            arg double[] gasLevels;\n            arg double particleCount;\n            arg string[] alerts;\n            arg boolean withinSpecs;\n\n            identifier(controlId);\n        }\n\n        entity DataCollection {\n            arg string datasetId;\n            ref Experiment experiment;\n            ref .DataClassification classification;\n            arg datetime collectionStart;\n            arg datetime collectionEnd;\n            arg double sampleSize;\n            arg string format;\n            arg string[] validationRules;\n            arg boolean isBackedUp;\n\n            identifier(datasetId);\n        }\n\n        // Research safety and compliance\n        entity SafetyProtocol {\n            arg string protocolId;\n            ref Laboratory lab;\n            arg string hazardType;\n            arg string[] precautions;\n            arg string[] emergencyProcedures;\n            arg date lastReview;\n            arg string[] authorizedPersonnel;\n            arg boolean requiresTraining;\n\n            identifier(protocolId);\n        }\n\n        entity ComplianceAudit {\n            arg string auditId;\n            ref Laboratory lab;\n            ref SafetyProtocol[] protocols;\n            arg date auditDate;\n            arg string auditor;\n            arg string[] findings;\n            arg string[] recommendations;\n            arg boolean passed;\n\n            identifier(auditId);\n        }\n\n        // Scheduling and resource management\n        entity ResourceSchedule {\n            arg string scheduleId;\n            ref ResearchEquipment equipment;\n            ref Experiment[] experiments;\n            arg datetime[] reservedTimes;\n            arg string[] users;\n            arg boolean hasConflicts;\n            // TODO []\n            arg string maintenanceWindows;\n            arg boolean isOptimized;\n\n            identifier(scheduleId);\n        }\n\n        entity MaintenanceLog {\n            arg string logId;\n            ref ResearchEquipment equipment;\n            arg datetime maintenanceTime;\n            arg string technician;\n            arg string[] tasks;\n            arg string[] replacedParts;\n            arg double cost;\n            arg boolean requiresFollowup;\n\n            identifier(logId);\n        }\n\n        // Research collaboration and access control\n        entity AccessCredential {\n            arg string credentialId;\n            ref Laboratory lab;\n            ref .DataClassification clearanceLevel;\n            arg string holderName;\n            arg string[] authorizedAreas;\n            arg datetime validFrom;\n            arg datetime validUntil;\n            arg boolean isActive;\n\n            identifier(credentialId);\n        }\n    }\n\n\n    // Financial Technology Infrastructure\n    package fintech {\n        // Core financial interfaces\n        interface Transactional {\n            func boolean validate();\n            func string generateHash();\n            func boolean verifySignature(string signature);\n            func void logTransaction();\n            func double calculateFees();\n        }\n\n        interface Auditable {\n            // TODO []\n            func string getAuditTrail();\n            func void addAuditEntry(string entry);\n            func boolean isCompliant();\n            func date getLastAuditDate();\n            func string getAuditor();\n        }\n\n        interface Secureable {\n            func boolean encrypt();\n            func boolean decrypt();\n            // TODO []\n            func string getAccessRoles();\n            func boolean hasPermission(string role);\n            func void revokeAccess(string userId);\n        }\n\n        interface RiskAssessable {\n            func int getRiskScore();\n            // TODO []\n            func string getRiskFactors();\n            func boolean isHighRisk();\n            func void updateRiskProfile();\n            // TODO []\n            func string getMitigationStrategies();\n        }\n\n        // Complex financial data structures\n        struct TransactionMetadata implements Auditable, Secureable {\n            arg datetime timestamp;\n            arg string originatorId;\n            arg string beneficiaryId;\n            arg double amount;\n            arg string currency;\n            arg string purpose;\n            func boolean validate();\n        }\n\n        struct RiskProfile implements RiskAssessable {\n            arg int creditScore;\n            arg double defaultProbability;\n            // TODO []\n            arg string riskIndicators;\n            arg date lastAssessment;\n        }\n\n        // Detailed enumerations\n        enum TransactionType {\n            arg string category;\n            arg double feePercentage;\n            PAYMENT(1, \"Payment\", 0.1);\n            TRANSFER(2, \"Transfer\", 0.2);\n            EXCHANGE(3, \"Currency Exchange\", 0.3);\n            INVESTMENT(4, \"Investment\", 0.4);\n            LOAN(5, \"Loan Disbursement\", 0.5);\n        }\n\n        enum SecurityLevel {\n            arg int clearance;\n            arg string protocol;\n            BASIC(1, 1, \"TLS\");\n            ENHANCED(2, 2, \"TLS+2FA\");\n            ADVANCED(3, 3, \"TLS+2FA+Biometric\");\n            MAXIMUM(4, 4, \"TLS+2FA+Biometric+Hardware\");\n        }\n\n        // Core financial entities\n        entity FinancialInstitution extends ..infrastructure.Asset implements Auditable, Secureable {\n            arg string institutionId;\n            arg string[] licenses;\n            ref .SecurityLevel securityLevel;\n            arg string[] supportedCurrencies;\n            arg boolean isActive;\n\n            identifier(institutionId);\n        }\n\n        entity FinancialAccount implements Transactional, Auditable, Secureable {\n            arg string accountId;\n            ref FinancialInstitution institution;\n            arg string accountType;\n            arg double balance;\n            arg string currency;\n            arg boolean isFrozen;\n            arg date openedDate;\n\n            identifier(accountId);\n        }\n\n        entity Transaction implements Transactional, Auditable, RiskAssessable {\n            arg string transactionId;\n            ref .TransactionType type;\n            ref .TransactionMetadata metadata;\n            ref FinancialAccount source;\n            ref FinancialAccount destination;\n            arg boolean isProcessed;\n            arg string status;\n\n            identifier(transactionId);\n        }\n\n        // Specialized monitoring entities\n        entity FraudDetection implements RiskAssessable, Secureable {\n            arg string detectionId;\n            ref Transaction transaction;\n            ref .RiskProfile risk;\n            arg string[] anomalyIndicators;\n            arg boolean requiresReview;\n            arg string resolution;\n\n            identifier(detectionId);\n        }\n\n        entity ComplianceCheck implements Auditable, RiskAssessable {\n            arg string checkId;\n            ref Transaction transaction;\n            arg string[] regulations;\n            arg boolean passedKYC;\n            arg boolean passedAML;\n            arg string[] violations;\n\n            identifier(checkId);\n        }\n\n        // Regulatory reporting\n        entity RegulatoryReport implements Auditable, Secureable {\n            arg string reportId;\n            ref FinancialInstitution institution;\n            arg string reportType;\n            arg date reportingPeriod;\n            arg boolean submitted;\n            arg string[] findings;\n\n            identifier(reportId);\n        }\n\n        // Security infrastructure\n        entity SecurityIncident implements Auditable, RiskAssessable {\n            arg string incidentId;\n            ref .SecurityLevel impactLevel;\n            arg datetime detectionTime;\n            arg string description;\n            arg boolean resolved;\n            arg string[] affectedSystems;\n\n            identifier(incidentId);\n        }\n\n        // Interface implementations for audit logging\n        entity AuditLog implements Auditable {\n            arg string logId;\n            ref Transaction transaction;\n            arg datetime timestamp;\n            arg string action;\n            arg string performedBy;\n            arg string details;\n\n            identifier(logId);\n        }\n\n        // Risk management\n        entity RiskAssessment implements RiskAssessable, Auditable {\n            arg string assessmentId;\n            ref FinancialInstitution institution;\n            ref .RiskProfile profile;\n            arg date assessmentDate;\n            arg string[] findings;\n            arg string[] recommendations;\n\n            identifier(assessmentId);\n        }\n\n        // Complex authentication system\n        entity AuthenticationSystem implements Secureable {\n            arg string systemId;\n            ref .SecurityLevel level;\n            arg string[] supportedMethods;\n            arg string[] activeTokens;\n            arg boolean multiFactorEnabled;\n            arg string[] blockedIPs;\n\n            identifier(systemId);\n        }\n    }\n}"}}}
2025/01/13 14:35:03 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:35:03 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:35:03 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 114 105 101 115 105 103 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:35:04 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:35:04 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf"}}}
2025/01/13 14:35:04 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:35:04 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":{"data":[3,0,7,11,0,3,4,7,11,0,2,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,4,11,0,8,8,4,11,0,1,12,3,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,4,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,4,11,0,1,12,3,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,1,12,3,11,0,1,12,3,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,12,4,11,0,8,12,4,11,0,8,12,6,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,1,16,4,11,0,3,12,6,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,5,12,6,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,8,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,7,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,1,12,3,11,0,8,8,6,11,0,1,12,3,11,0,2,12,3,11,0,2,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,13,8,4,11,0,1,12,3,11,0,1,12,3,11,0,8,8,4,11,0,13,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,1,12,4,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,2,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,2,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,8,4,7,11,0,1,8,4,11,0,13,8,4,11,0,13,8,4,11,0,13,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,8,4,7,11,0,1,8,4,11,0,15,4,7,11,0,1,8,4,11,0,13,8,4,11,0,1,12,3,11,0,1,12,3,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,13,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,13,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,6,11,0,2,12,3,11,0,2,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,2,12,4,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,2,12,3,11,0,2,12,3,11,0,1,12,3,11,0,1,12,4,11,0,1,12,4,11,0,4,8,4,11,0,1,12,3,11,0,1,12,3,11,0,13,8,4,11,0,13,8,4,11,0,1,12,3,11,0,1,12,3,11,0,9,8,6,11,0,2,12,3,11,0,1,12,3,11,0,2,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,2,12,3,11,0,2,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,2,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,2,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,8,4,7,11,0,3,12,4,11,0,1,12,4,11,0,1,12,4,11,0,1,12,4,11,0,1,12,4,11,0,5,12,4,11,0,1,12,4,11,0,1,12,4,11,0,1,12,4,11,0,1,12,4,11,0,4,12,4,11,0,1,12,4,11,0,2,12,4,11,0,1,12,4,11,0,1,12,4,11,0,4,12,4,11,0,2,12,4,11,0,1,12,4,11,0,1,12,4,11,0,2,12,4,11,0,4,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,2,12,3,11,0,1,12,3,11,0,4,8,4,11,0,1,12,3,11,0,1,12,3,11,0,8,8,4,11,0,1,12,3,11,0,1,12,3,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,2,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0]}}
2025/01/13 14:35:04 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:35:04 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf"}}}
2025/01/13 14:35:04 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:35:04 foldingService.go:218: Trace | Found 84 Comment Ranges
2025/01/13 14:35:04 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":[{"startLine":276,"startCharacter":23,"endLine":315,"endCharacter":4},{"startLine":1015,"startCharacter":59,"endLine":1023,"endCharacter":8},{"startLine":1326,"startCharacter":20,"endLine":1363,"endCharacter":4},{"startLine":175,"startCharacter":24,"endLine":181,"endCharacter":8},{"startLine":1761,"startCharacter":28,"endLine":1772,"endCharacter":8},{"startLine":2379,"startCharacter":30,"endLine":2387,"endCharacter":8},{"startLine":294,"startCharacter":56,"endLine":303,"endCharacter":8},{"startLine":305,"startCharacter":28,"endLine":314,"endCharacter":8},{"startLine":183,"startCharacter":32,"endLine":192,"endCharacter":8},{"startLine":791,"startCharacter":21,"endLine":836,"endCharacter":4},{"startLine":1313,"startCharacter":21,"endLine":1322,"endCharacter":8},{"startLine":1862,"startCharacter":61,"endLine":1871,"endCharacter":8},{"startLine":2493,"startCharacter":68,"endLine":2502,"endCharacter":8},{"startLine":100,"startCharacter":27,"endLine":106,"endCharacter":8},{"startLine":1422,"startCharacter":56,"endLine":1430,"endCharacter":8},{"startLine":1528,"startCharacter":26,"endLine":1534,"endCharacter":8},{"startLine":1679,"startCharacter":31,"endLine":1690,"endCharacter":8},{"startLine":935,"startCharacter":28,"endLine":944,"endCharacter":8},{"startLine":1956,"startCharacter":20,"endLine":1967,"endCharacter":8},{"startLine":2206,"startCharacter":65,"endLine":2218,"endCharacter":8},{"startLine":355,"startCharacter":25,"endLine":361,"endCharacter":8},{"startLine":1039,"startCharacter":24,"endLine":1045,"endCharacter":8},{"startLine":1104,"startCharacter":23,"endLine":1113,"endCharacter":8},{"startLine":1445,"startCharacter":21,"endLine":1483,"endCharacter":4},{"startLine":589,"startCharacter":21,"endLine":626,"endCharacter":4},{"startLine":646,"startCharacter":56,"endLine":654,"endCharacter":8},{"startLine":669,"startCharacter":27,"endLine":706,"endCharacter":4},{"startLine":1287,"startCharacter":23,"endLine":1293,"endCharacter":8},{"startLine":117,"startCharacter":58,"endLine":125,"endCharacter":8},{"startLine":234,"startCharacter":23,"endLine":273,"endCharacter":4},{"startLine":459,"startCharacter":23,"endLine":468,"endCharacter":8},{"startLine":536,"startCharacter":22,"endLine":545,"endCharacter":8},{"startLine":1980,"startCharacter":30,"endLine":1990,"endCharacter":8},{"startLine":1343,"startCharacter":58,"endLine":1351,"endCharacter":8},{"startLine":488,"startCharacter":52,"endLine":496,"endCharacter":8},{"startLine":526,"startCharacter":65,"endLine":534,"endCharacter":8},{"startLine":709,"startCharacter":20,"endLine":747,"endCharacter":4},{"startLine":826,"startCharacter":30,"endLine":835,"endCharacter":8},{"startLine":670,"startCharacter":23,"endLine":676,"endCharacter":8},{"startLine":1886,"startCharacter":30,"endLine":1897,"endCharacter":8},{"startLine":606,"startCharacter":62,"endLine":614,"endCharacter":8},{"startLine":816,"startCharacter":61,"endLine":824,"endCharacter":8},{"startLine":1166,"startCharacter":31,"endLine":1172,"endCharacter":8},{"startLine":127,"startCharacter":27,"endLine":136,"endCharacter":8},{"startLine":442,"startCharacter":26,"endLine":447,"endCharacter":8},{"startLine":919,"startCharacter":28,"endLine":925,"endCharacter":8},{"startLine":1567,"startCharacter":23,"endLine":1604,"endCharacter":4},{"startLine":85,"startCharacter":55,"endLine":94,"endCharacter":8},{"startLine":472,"startCharacter":25,"endLine":507,"endCharacter":4},{"startLine":751,"startCharacter":26,"endLine":757,"endCharacter":8},{"startLine":2039,"startCharacter":37,"endLine":2045,"endCharacter":8},{"startLine":630,"startCharacter":28,"endLine":636,"endCharacter":8},{"startLine":999,"startCharacter":26,"endLine":1005,"endCharacter":8},{"startLine":1263,"startCharacter":59,"endLine":1271,"endCharacter":8},{"startLine":1774,"startCharacter":27,"endLine":1783,"endCharacter":8},{"startLine":839,"startCharacter":20,"endLine":876,"endCharacter":4},{"startLine":1234,"startCharacter":27,"endLine":1243,"endCharacter":8},{"startLine":848,"startCharacter":24,"endLine":854,"endCharacter":8},{"startLine":1473,"startCharacter":31,"endLine":1482,"endCharacter":8},{"startLine":1656,"startCharacter":36,"endLine":1664,"endCharacter":8},{"startLine":1815,"startCharacter":25,"endLine":1826,"endCharacter":8},{"startLine":24,"startCharacter":34,"endLine":31,"endCharacter":8},{"startLine":152,"startCharacter":59,"endLine":160,"endCharacter":8},{"startLine":558,"startCharacter":26,"endLine":564,"endCharacter":8},{"startLine":686,"startCharacter":52,"endLine":694,"endCharacter":8},{"startLine":1830,"startCharacter":21,"endLine":1923,"endCharacter":4},{"startLine":2291,"startCharacter":31,"endLine":2302,"endCharacter":8},{"startLine":16,"startCharacter":26,"endLine":22,"endCharacter":8},{"startLine":887,"startCharacter":33,"endLine":893,"endCharacter":8},{"startLine":1392,"startCharacter":25,"endLine":1401,"endCharacter":8},{"startLine":1576,"startCharacter":29,"endLine":1582,"endCharacter":8},{"startLine":1584,"startCharacter":62,"endLine":1592,"endCharacter":8},{"startLine":2163,"startCharacter":33,"endLine":2171,"endCharacter":8},{"startLine":140,"startCharacter":19,"endLine":170,"endCharacter":4},{"startLine":402,"startCharacter":35,"endLine":409,"endCharacter":12},{"startLine":1065,"startCharacter":29,"endLine":1073,"endCharacter":8},{"startLine":1335,"startCharacter":29,"endLine":1341,"endCharacter":8},{"startLine":549,"startCharacter":21,"endLine":586,"endCharacter":4},{"startLine":800,"startCharacter":28,"endLine":806,"endCharacter":8},{"startLine":1007,"startCharacter":25,"endLine":1013,"endCharacter":8},{"startLine":1831,"startCharacter":34,"endLine":1842,"endCharacter":8},{"startLine":2399,"startCharacter":101,"endLine":2407,"endCharacter":8},{"startLine":737,"startCharacter":27,"endLine":746,"endCharacter":8},{"startLine":1134,"startCharacter":53,"endLine":1142,"endCharacter":8},{"startLine":1286,"startCharacter":22,"endLine":1323,"endCharacter":4},{"startLine":1718,"startCharacter":34,"endLine":1729,"endCharacter":8},{"startLine":975,"startCharacter":59,"endLine":983,"endCharacter":8},{"startLine":2235,"startCharacter":31,"endLine":2247,"endCharacter":8},{"startLine":194,"startCharacter":65,"endLine":201,"endCharacter":8},{"startLine":252,"startCharacter":34,"endLine":262,"endCharacter":8},{"startLine":519,"startCharacter":25,"endLine":524,"endCharacter":8},{"startLine":777,"startCharacter":29,"endLine":786,"endCharacter":8},{"startLine":1055,"startCharacter":59,"endLine":1063,"endCharacter":8},{"startLine":1969,"startCharacter":64,"endLine":1978,"endCharacter":8},{"startLine":2082,"startCharacter":35,"endLine":2091,"endCharacter":8},{"startLine":2277,"startCharacter":33,"endLine":2289,"endCharacter":8},{"startLine":2389,"startCharacter":28,"endLine":2396,"endCharacter":8},{"startLine":449,"startCharacter":70,"endLine":457,"endCharacter":8},{"startLine":759,"startCharacter":24,"endLine":765,"endCharacter":8},{"startLine":1462,"startCharacter":31,"endLine":1471,"endCharacter":8},{"startLine":1798,"startCharacter":26,"endLine":1809,"endCharacter":8},{"startLine":1405,"startCharacter":23,"endLine":1442,"endCharacter":4},{"startLine":1621,"startCharacter":30,"endLine":1629,"endCharacter":8},{"startLine":1844,"startCharacter":30,"endLine":1852,"endCharacter":8},{"startLine":33,"startCharacter":22,"endLine":44,"endCharacter":8},{"startLine":223,"startCharacter":65,"endLine":230,"endCharacter":8},{"startLine":1248,"startCharacter":24,"endLine":1254,"endCharacter":8},{"startLine":1273,"startCharacter":30,"endLine":1282,"endCharacter":8},{"startLine":205,"startCharacter":25,"endLine":231,"endCharacter":4},{"startLine":1503,"startCharacter":26,"endLine":1512,"endCharacter":8},{"startLine":2505,"startCharacter":59,"endLine":2514,"endCharacter":8},{"startLine":638,"startCharacter":26,"endLine":644,"endCharacter":8},{"startLine":767,"startCharacter":59,"endLine":775,"endCharacter":8},{"startLine":998,"startCharacter":19,"endLine":1035,"endCharacter":4},{"startLine":2135,"startCharacter":29,"endLine":2148,"endCharacter":8},{"startLine":750,"startCharacter":27,"endLine":787,"endCharacter":4},{"startLine":1594,"startCharacter":34,"endLine":1603,"endCharacter":8},{"startLine":1608,"startCharacter":33,"endLine":1619,"endCharacter":8},{"startLine":2305,"startCharacter":33,"endLine":2316,"endCharacter":8},{"startLine":576,"startCharacter":35,"endLine":585,"endCharacter":8},{"startLine":1948,"startCharacter":34,"endLine":1954,"endCharacter":8},{"startLine":2331,"startCharacter":29,"endLine":2338,"endCharacter":8},{"startLine":6,"startCharacter":28,"endLine":45,"endCharacter":4},{"startLine":394,"startCharacter":35,"endLine":400,"endCharacter":12},{"startLine":1544,"startCharacter":60,"endLine":1552,"endCharacter":8},{"startLine":2106,"startCharacter":33,"endLine":2317,"endCharacter":4},{"startLine":2221,"startCharacter":37,"endLine":2233,"endCharacter":8},{"startLine":2457,"startCharacter":66,"endLine":2466,"endCharacter":8},{"startLine":215,"startCharacter":34,"endLine":221,"endCharacter":8},{"startLine":840,"startCharacter":27,"endLine":846,"endCharacter":8},{"startLine":2031,"startCharacter":27,"endLine":2037,"endCharacter":8},{"startLine":2093,"startCharacter":26,"endLine":2102,"endCharacter":8},{"startLine":1353,"startCharacter":25,"endLine":1362,"endCharacter":8},{"startLine":1414,"startCharacter":32,"endLine":1420,"endCharacter":8},{"startLine":1495,"startCharacter":28,"endLine":1501,"endCharacter":8},{"startLine":244,"startCharacter":31,"endLine":250,"endCharacter":8},{"startLine":866,"startCharacter":27,"endLine":875,"endCharacter":8},{"startLine":927,"startCharacter":23,"endLine":933,"endCharacter":8},{"startLine":1197,"startCharacter":26,"endLine":1203,"endCharacter":8},{"startLine":1666,"startCharacter":66,"endLine":1677,"endCharacter":8},{"startLine":2349,"startCharacter":34,"endLine":2357,"endCharacter":8},{"startLine":2360,"startCharacter":69,"endLine":2368,"endCharacter":8},{"startLine":58,"startCharacter":26,"endLine":63,"endCharacter":8},{"startLine":421,"startCharacter":68,"endLine":429,"endCharacter":12},{"startLine":1446,"startCharacter":29,"endLine":1452,"endCharacter":8},{"startLine":1117,"startCharacter":20,"endLine":1154,"endCharacter":4},{"startLine":1432,"startCharacter":31,"endLine":1441,"endCharacter":8},{"startLine":2445,"startCharacter":69,"endLine":2454,"endCharacter":8},{"startLine":108,"startCharacter":33,"endLine":115,"endCharacter":8},{"startLine":162,"startCharacter":67,"endLine":169,"endCharacter":8},{"startLine":411,"startCharacter":70,"endLine":419,"endCharacter":12},{"startLine":550,"startCharacter":26,"endLine":556,"endCharacter":8},{"startLine":2047,"startCharacter":27,"endLine":2058,"endCharacter":8},{"startLine":2370,"startCharacter":54,"endLine":2376,"endCharacter":8},{"startLine":207,"startCharacter":28,"endLine":213,"endCharacter":8},{"startLine":434,"startCharacter":30,"endLine":440,"endCharacter":8},{"startLine":566,"startCharacter":63,"endLine":574,"endCharacter":8},{"startLine":678,"startCharacter":32,"endLine":684,"endCharacter":8},{"startLine":340,"startCharacter":31,"endLine":349,"endCharacter":8},{"startLine":726,"startCharacter":31,"endLine":735,"endCharacter":8},{"startLine":1367,"startCharacter":22,"endLine":1373,"endCharacter":8},{"startLine":318,"startCharacter":22,"endLine":350,"endCharacter":4},{"startLine":656,"startCharacter":26,"endLine":665,"endCharacter":8},{"startLine":1025,"startCharacter":31,"endLine":1034,"endCharacter":8},{"startLine":1303,"startCharacter":56,"endLine":1311,"endCharacter":8},{"startLine":1631,"startCharacter":28,"endLine":1642,"endCharacter":8},{"startLine":1899,"startCharacter":32,"endLine":1910,"endCharacter":8},{"startLine":598,"startCharacter":25,"endLine":604,"endCharacter":8},{"startLine":1174,"startCharacter":63,"endLine":1181,"endCharacter":8},{"startLine":1327,"startCharacter":23,"endLine":1333,"endCharacter":8},{"startLine":1383,"startCharacter":55,"endLine":1390,"endCharacter":8},{"startLine":50,"startCharacter":26,"endLine":56,"endCharacter":8},{"startLine":73,"startCharacter":31,"endLine":83,"endCharacter":8},{"startLine":363,"startCharacter":32,"endLine":370,"endCharacter":8},{"startLine":1077,"startCharacter":21,"endLine":1114,"endCharacter":4},{"startLine":1940,"startCharacter":28,"endLine":1946,"endCharacter":8},{"startLine":2434,"startCharacter":69,"endLine":2443,"endCharacter":8},{"startLine":3,"startCharacter":23,"endLine":2516,"endCharacter":0},{"startLine":328,"startCharacter":24,"endLine":338,"endCharacter":8},{"startLine":918,"startCharacter":29,"endLine":956,"endCharacter":4},{"startLine":1366,"startCharacter":24,"endLine":1402,"endCharacter":4},{"startLine":1094,"startCharacter":54,"endLine":1102,"endCharacter":8},{"startLine":1527,"startCharacter":22,"endLine":1564,"endCharacter":4},{"startLine":2060,"startCharacter":60,"endLine":2069,"endCharacter":8},{"startLine":2421,"startCharacter":80,"endLine":2431,"endCharacter":8},{"startLine":48,"startCharacter":28,"endLine":95,"endCharacter":4},{"startLine":98,"startCharacter":20,"endLine":137,"endCharacter":4},{"startLine":481,"startCharacter":29,"endLine":486,"endCharacter":8},{"startLine":1038,"startCharacter":22,"endLine":1074,"endCharacter":4},{"startLine":1514,"startCharacter":35,"endLine":1523,"endCharacter":8},{"startLine":2150,"startCharacter":32,"endLine":2161,"endCharacter":8},{"startLine":1486,"startCharacter":26,"endLine":1524,"endCharacter":4},{"startLine":1734,"startCharacter":33,"endLine":1811,"endCharacter":4},{"startLine":1814,"startCharacter":32,"endLine":1827,"endCharacter":4},{"startLine":2108,"startCharacter":33,"endLine":2120,"endCharacter":8},{"startLine":718,"startCharacter":27,"endLine":724,"endCharacter":8},{"startLine":1183,"startCharacter":34,"endLine":1192,"endCharacter":8},{"startLine":1205,"startCharacter":31,"endLine":1212,"endCharacter":8},{"startLine":1214,"startCharacter":28,"endLine":1222,"endCharacter":8},{"startLine":498,"startCharacter":54,"endLine":506,"endCharacter":8},{"startLine":1126,"startCharacter":27,"endLine":1132,"endCharacter":8},{"startLine":1157,"startCharacter":23,"endLine":1193,"endCharacter":4},{"startLine":2017,"startCharacter":30,"endLine":2103,"endCharacter":4},{"startLine":1927,"startCharacter":22,"endLine":1938,"endCharacter":8},{"startLine":2323,"startCharacter":33,"endLine":2329,"endCharacter":8},{"startLine":2481,"startCharacter":46,"endLine":2490,"endCharacter":8},{"startLine":372,"startCharacter":26,"endLine":381,"endCharacter":8},{"startLine":473,"startCharacter":23,"endLine":479,"endCharacter":8},{"startLine":1144,"startCharacter":30,"endLine":1153,"endCharacter":8},{"startLine":1705,"startCharacter":29,"endLine":1716,"endCharacter":8},{"startLine":1536,"startCharacter":26,"endLine":1542,"endCharacter":8},{"startLine":1748,"startCharacter":28,"endLine":1759,"endCharacter":8},{"startLine":2018,"startCharacter":29,"endLine":2029,"endCharacter":8},{"startLine":616,"startCharacter":29,"endLine":625,"endCharacter":8},{"startLine":710,"startCharacter":27,"endLine":716,"endCharacter":8},{"startLine":792,"startCharacter":24,"endLine":798,"endCharacter":8},{"startLine":959,"startCharacter":21,"endLine":995,"endCharacter":4},{"startLine":1047,"startCharacter":30,"endLine":1053,"endCharacter":8},{"startLine":1854,"startCharacter":27,"endLine":1860,"endCharacter":8},{"startLine":1873,"startCharacter":32,"endLine":1884,"endCharacter":8},{"startLine":65,"startCharacter":29,"endLine":71,"endCharacter":8},{"startLine":510,"startCharacter":21,"endLine":546,"endCharacter":4},{"startLine":1375,"startCharacter":25,"endLine":1381,"endCharacter":8},{"startLine":173,"startCharacter":19,"endLine":202,"endCharacter":4},{"startLine":985,"startCharacter":28,"endLine":994,"endCharacter":8},{"startLine":1078,"startCharacter":25,"endLine":1084,"endCharacter":8},{"startLine":2263,"startCharacter":32,"endLine":2274,"endCharacter":8},{"startLine":880,"startCharacter":29,"endLine":885,"endCharacter":8},{"startLine":960,"startCharacter":23,"endLine":966,"endCharacter":8},{"startLine":1568,"startCharacter":27,"endLine":1574,"endCharacter":8},{"startLine":1607,"startCharacter":27,"endLine":1731,"endCharacter":4},{"startLine":142,"startCharacter":27,"endLine":150,"endCharacter":8},{"startLine":286,"startCharacter":28,"endLine":292,"endCharacter":8},{"startLine":385,"startCharacter":24,"endLine":430,"endCharacter":8},{"startLine":629,"startCharacter":23,"endLine":666,"endCharacter":4},{"startLine":1912,"startCharacter":26,"endLine":1922,"endCharacter":8},{"startLine":2004,"startCharacter":61,"endLine":2013,"endCharacter":8},{"startLine":2071,"startCharacter":31,"endLine":2080,"endCharacter":8},{"startLine":2409,"startCharacter":81,"endLine":2419,"endCharacter":8},{"startLine":856,"startCharacter":62,"endLine":864,"endCharacter":8},{"startLine":895,"startCharacter":62,"endLine":903,"endCharacter":8},{"startLine":1692,"startCharacter":24,"endLine":1703,"endCharacter":8},{"startLine":1785,"startCharacter":24,"endLine":1796,"endCharacter":8},{"startLine":2174,"startCharacter":58,"endLine":2189,"endCharacter":8},{"startLine":2250,"startCharacter":31,"endLine":2261,"endCharacter":8},{"startLine":2321,"startCharacter":21,"endLine":2515,"endCharacter":4},{"startLine":2340,"startCharacter":30,"endLine":2347,"endCharacter":8},{"startLine":8,"startCharacter":28,"endLine":14,"endCharacter":8},{"startLine":905,"startCharacter":28,"endLine":914,"endCharacter":8},{"startLine":1992,"startCharacter":27,"endLine":2002,"endCharacter":8},{"startLine":264,"startCharacter":30,"endLine":272,"endCharacter":8},{"startLine":696,"startCharacter":35,"endLine":705,"endCharacter":8},{"startLine":879,"startCharacter":24,"endLine":915,"endCharacter":4},{"startLine":2469,"startCharacter":70,"endLine":2478,"endCharacter":8},{"startLine":1158,"startCharacter":28,"endLine":1164,"endCharacter":8},{"startLine":1487,"startCharacter":28,"endLine":1493,"endCharacter":8},{"startLine":386,"startCharacter":31,"endLine":392,"endCharacter":12},{"startLine":1295,"startCharacter":34,"endLine":1301,"endCharacter":8},{"startLine":1454,"startCharacter":33,"endLine":1460,"endCharacter":8},{"startLine":1554,"startCharacter":33,"endLine":1563,"endCharacter":8},{"startLine":1644,"startCharacter":34,"endLine":1654,"endCharacter":8},{"startLine":1735,"startCharacter":32,"endLine":1746,"endCharacter":8},{"startLine":590,"startCharacter":31,"endLine":596,"endCharacter":8},{"startLine":808,"startCharacter":27,"endLine":814,"endCharacter":8},{"startLine":946,"startCharacter":32,"endLine":955,"endCharacter":8},{"startLine":1224,"startCharacter":58,"endLine":1232,"endCharacter":8},{"startLine":968,"startCharacter":26,"endLine":973,"endCharacter":8},{"startLine":1118,"startCharacter":24,"endLine":1124,"endCharacter":8},{"startLine":1256,"startCharacter":30,"endLine":1261,"endCharacter":8},{"startLine":1926,"startCharacter":31,"endLine":2014,"endCharacter":4},{"startLine":2122,"startCharacter":39,"endLine":2132,"endCharacter":8},{"startLine":2191,"startCharacter":27,"endLine":2204,"endCharacter":8},{"startLine":320,"startCharacter":26,"endLine":326,"endCharacter":8},{"startLine":353,"startCharacter":23,"endLine":382,"endCharacter":4},{"startLine":1196,"startCharacter":25,"endLine":1244,"endCharacter":4},{"startLine":1406,"startCharacter":27,"endLine":1412,"endCharacter":8},{"startLine":1086,"startCharacter":29,"endLine":1092,"endCharacter":8},{"startLine":1247,"startCharacter":20,"endLine":1283,"endCharacter":4},{"startLine":236,"startCharacter":28,"endLine":242,"endCharacter":8},{"startLine":278,"startCharacter":27,"endLine":284,"endCharacter":8},{"startLine":433,"startCharacter":23,"endLine":469,"endCharacter":4},{"startLine":511,"startCharacter":29,"endLine":517,"endCharacter":8},{"startLine":5,"startCharacter":1,"endLine":5,"endCharacter":33,"kind":"comment"},{"startLine":47,"startCharacter":1,"endLine":47,"endCharacter":35,"kind":"comment"},{"startLine":97,"startCharacter":1,"endLine":97,"endCharacter":25,"kind":"comment"},{"startLine":139,"startCharacter":1,"endLine":139,"endCharacter":26,"kind":"comment"},{"startLine":172,"startCharacter":1,"endLine":172,"endCharacter":19,"kind":"comment"},{"startLine":204,"startCharacter":1,"endLine":204,"endCharacter":27,"kind":"comment"},{"startLine":233,"startCharacter":1,"endLine":233,"endCharacter":32,"kind":"comment"},{"startLine":275,"startCharacter":1,"endLine":275,"endCharacter":28,"kind":"comment"},{"startLine":317,"startCharacter":1,"endLine":317,"endCharacter":19,"kind":"comment"},{"startLine":352,"startCharacter":1,"endLine":352,"endCharacter":31,"kind":"comment"},{"startLine":384,"startCharacter":1,"endLine":384,"endCharacter":24,"kind":"comment"},{"startLine":432,"startCharacter":1,"endLine":432,"endCharacter":19,"kind":"comment"},{"startLine":471,"startCharacter":1,"endLine":471,"endCharacter":20,"kind":"comment"},{"startLine":509,"startCharacter":1,"endLine":509,"endCharacter":21,"kind":"comment"},{"startLine":548,"startCharacter":1,"endLine":548,"endCharacter":16,"kind":"comment"},{"startLine":588,"startCharacter":1,"endLine":588,"endCharacter":21,"kind":"comment"},{"startLine":628,"startCharacter":1,"endLine":628,"endCharacter":13,"kind":"comment"},{"startLine":668,"startCharacter":1,"endLine":668,"endCharacter":17,"kind":"comment"},{"startLine":708,"startCharacter":1,"endLine":708,"endCharacter":16,"kind":"comment"},{"startLine":749,"startCharacter":1,"endLine":749,"endCharacter":31,"kind":"comment"},{"startLine":790,"startCharacter":1,"endLine":790,"endCharacter":33,"kind":"comment"},{"startLine":838,"startCharacter":1,"endLine":838,"endCharacter":20,"kind":"comment"},{"startLine":878,"startCharacter":1,"endLine":878,"endCharacter":25,"kind":"comment"},{"startLine":917,"startCharacter":1,"endLine":917,"endCharacter":26,"kind":"comment"},{"startLine":958,"startCharacter":1,"endLine":958,"endCharacter":18,"kind":"comment"},{"startLine":997,"startCharacter":1,"endLine":997,"endCharacter":19,"kind":"comment"},{"startLine":1037,"startCharacter":1,"endLine":1037,"endCharacter":17,"kind":"comment"},{"startLine":1076,"startCharacter":1,"endLine":1076,"endCharacter":20,"kind":"comment"},{"startLine":1116,"startCharacter":1,"endLine":1116,"endCharacter":19,"kind":"comment"},{"startLine":1156,"startCharacter":1,"endLine":1156,"endCharacter":19,"kind":"comment"},{"startLine":1195,"startCharacter":1,"endLine":1195,"endCharacter":30,"kind":"comment"},{"startLine":1216,"startCharacter":1,"endLine":1216,"endCharacter":10,"kind":"comment"},{"startLine":1218,"startCharacter":1,"endLine":1218,"endCharacter":10,"kind":"comment"},{"startLine":1246,"startCharacter":1,"endLine":1246,"endCharacter":15,"kind":"comment"},{"startLine":1285,"startCharacter":1,"endLine":1285,"endCharacter":22,"kind":"comment"},{"startLine":1325,"startCharacter":1,"endLine":1325,"endCharacter":23,"kind":"comment"},{"startLine":1365,"startCharacter":1,"endLine":1365,"endCharacter":13,"kind":"comment"},{"startLine":1404,"startCharacter":1,"endLine":1404,"endCharacter":18,"kind":"comment"},{"startLine":1444,"startCharacter":1,"endLine":1444,"endCharacter":17,"kind":"comment"},{"startLine":1485,"startCharacter":1,"endLine":1485,"endCharacter":15,"kind":"comment"},{"startLine":1526,"startCharacter":1,"endLine":1526,"endCharacter":17,"kind":"comment"},{"startLine":1566,"startCharacter":1,"endLine":1566,"endCharacter":19,"kind":"comment"},{"startLine":1606,"startCharacter":1,"endLine":1606,"endCharacter":37,"kind":"comment"},{"startLine":1660,"startCharacter":1,"endLine":1660,"endCharacter":10,"kind":"comment"},{"startLine":1733,"startCharacter":1,"endLine":1733,"endCharacter":33,"kind":"comment"},{"startLine":1813,"startCharacter":1,"endLine":1813,"endCharacter":27,"kind":"comment"},{"startLine":1829,"startCharacter":1,"endLine":1829,"endCharacter":27,"kind":"comment"},{"startLine":1925,"startCharacter":1,"endLine":1925,"endCharacter":28,"kind":"comment"},{"startLine":2016,"startCharacter":1,"endLine":2016,"endCharacter":39,"kind":"comment"},{"startLine":2105,"startCharacter":1,"endLine":2105,"endCharacter":42,"kind":"comment"},{"startLine":2107,"startCharacter":1,"endLine":2107,"endCharacter":51,"kind":"comment"},{"startLine":2109,"startCharacter":1,"endLine":2109,"endCharacter":10,"kind":"comment"},{"startLine":2111,"startCharacter":1,"endLine":2111,"endCharacter":10,"kind":"comment"},{"startLine":2117,"startCharacter":1,"endLine":2117,"endCharacter":17,"kind":"comment"},{"startLine":2125,"startCharacter":1,"endLine":2125,"endCharacter":10,"kind":"comment"},{"startLine":2127,"startCharacter":1,"endLine":2127,"endCharacter":10,"kind":"comment"},{"startLine":2134,"startCharacter":1,"endLine":2134,"endCharacter":32,"kind":"comment"},{"startLine":2173,"startCharacter":1,"endLine":2173,"endCharacter":34,"kind":"comment"},{"startLine":2175,"startCharacter":1,"endLine":2175,"endCharacter":10,"kind":"comment"},{"startLine":2178,"startCharacter":1,"endLine":2178,"endCharacter":10,"kind":"comment"},{"startLine":2183,"startCharacter":1,"endLine":2183,"endCharacter":10,"kind":"comment"},{"startLine":2185,"startCharacter":1,"endLine":2185,"endCharacter":10,"kind":"comment"},{"startLine":2198,"startCharacter":1,"endLine":2198,"endCharacter":10,"kind":"comment"},{"startLine":2220,"startCharacter":1,"endLine":2220,"endCharacter":46,"kind":"comment"},{"startLine":2249,"startCharacter":1,"endLine":2249,"endCharacter":33,"kind":"comment"},{"startLine":2276,"startCharacter":1,"endLine":2276,"endCharacter":37,"kind":"comment"},{"startLine":2284,"startCharacter":1,"endLine":2284,"endCharacter":10,"kind":"comment"},{"startLine":2304,"startCharacter":1,"endLine":2304,"endCharacter":44,"kind":"comment"},{"startLine":2320,"startCharacter":1,"endLine":2320,"endCharacter":38,"kind":"comment"},{"startLine":2322,"startCharacter":1,"endLine":2322,"endCharacter":28,"kind":"comment"},{"startLine":2332,"startCharacter":1,"endLine":2332,"endCharacter":10,"kind":"comment"},{"startLine":2343,"startCharacter":1,"endLine":2343,"endCharacter":10,"kind":"comment"},{"startLine":2351,"startCharacter":1,"endLine":2351,"endCharacter":10,"kind":"comment"},{"startLine":2355,"startCharacter":1,"endLine":2355,"endCharacter":10,"kind":"comment"},{"startLine":2359,"startCharacter":1,"endLine":2359,"endCharacter":36,"kind":"comment"},{"startLine":2373,"startCharacter":1,"endLine":2373,"endCharacter":10,"kind":"comment"},{"startLine":2378,"startCharacter":1,"endLine":2378,"endCharacter":24,"kind":"comment"},{"startLine":2398,"startCharacter":1,"endLine":2398,"endCharacter":26,"kind":"comment"},{"startLine":2433,"startCharacter":1,"endLine":2433,"endCharacter":34,"kind":"comment"},{"startLine":2456,"startCharacter":1,"endLine":2456,"endCharacter":23,"kind":"comment"},{"startLine":2468,"startCharacter":1,"endLine":2468,"endCharacter":26,"kind":"comment"},{"startLine":2480,"startCharacter":1,"endLine":2480,"endCharacter":46,"kind":"comment"},{"startLine":2492,"startCharacter":1,"endLine":2492,"endCharacter":18,"kind":"comment"},{"startLine":2504,"startCharacter":1,"endLine":2504,"endCharacter":32,"kind":"comment"}]}
2025/01/13 14:35:04 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:35:41 util.go:36: Trace | Read Content-Length: 46690 from Content-Length: 46690
2025/01/13 14:35:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf"},"contentChanges":[{"range":{"start":{"line":78,"character":16},"end":{"line":1867,"character":16}},"rangeLength":44502,"text":"datetime firstDepartureTime;\n            arg datetime lastDepartureTime;\n            arg int frequencyMinutes;\n\n            identifier(routeId);\n        }\n\n        entity Vehicle extends ..infrastructure.Asset {\n            ref .VehicleType type;\n            arg string registrationNumber;\n            arg int capacity;\n            arg double currentFuelLevel;\n            arg int currentPassengerCount;\n            ref .TransportRoute currentRoute;\n\n            identifier(registrationNumber);\n        }\n    }\n\n    // Energy grid management\n    package energy {\n\n        enum EnergySource {\n            SOLAR(_);\n            WIND(_);\n            HYDRO(_);\n            BIOMASS(_);\n            GRID(_);\n        }\n\n        enum ConsumptionPattern {\n            arg string pattern;\n            arg double baselineKwh;\n            RESIDENTIAL(1, \"Home usage\", 10.0);\n            COMMERCIAL(2, \"Business usage\", 50.0);\n            INDUSTRIAL(3, \"Factory usage\", 200.0);\n            PUBLIC(4, \"Municipal usage\", 30.0);\n        }\n\n        entity PowerPlant extends ..infrastructure.Asset {\n            ref .EnergySource source;\n            arg double capacity;\n            arg double currentOutput;\n            arg double efficiency;\n            arg boolean isBackupSource;\n\n            identifier(assetId);\n        }\n\n        entity SmartMeter {\n            arg string meterId;\n            ref .ConsumptionPattern pattern;\n            arg double currentReading;\n            arg double peakDemand;\n            arg datetime lastReadingTime;\n            arg boolean isOnline;\n\n            identifier(meterId);\n        }\n    }\n\n    // Water management system\n    package water {\n\n        enum WaterQuality {\n            arg int level;\n            arg string description;\n            EXCELLENT(_, 1, \"Exceeds standards\");\n            GOOD(_, 2, \"Meets standards\");\n            FAIR(_, 3, \"Requires monitoring\");\n            POOR(_, 4, \"Requires action\");\n            CRITICAL(_, 5, \"Immediate action needed\");\n        }\n\n        entity WaterSource extends ..infrastructure.Asset {\n            arg double capacity;\n            arg double currentLevel;\n            ref .WaterQuality quality;\n            arg double flowRate;\n            arg boolean isActive;\n\n            identifier(assetId);\n        }\n\n        entity WaterTreatmentPlant extends ..infrastructure.Asset {\n            arg double processingCapacity;\n            arg double currentThroughput;\n            arg int treatmentStages;\n            arg boolean isOperating;\n\n            identifier(assetId);\n        }\n    }\n\n    // Waste management\n    package waste {\n\n        enum WasteType {\n            ORGANIC(_);\n            RECYCLABLE(_);\n            HAZARDOUS(_);\n            ELECTRONIC(_);\n            CONSTRUCTION(_);\n        }\n\n        entity WasteCollection {\n            arg string collectionId;\n            ref .WasteType type;\n            ref ..infrastructure.GeoLocation location;\n            arg datetime scheduledTime;\n            arg double estimatedVolume;\n            arg boolean isCompleted;\n\n            identifier(collectionId);\n        }\n\n        entity RecyclingFacility extends ..infrastructure.Asset {\n            ref .WasteType[] acceptedTypes;\n            arg double processingCapacity;\n            arg double currentStorage;\n            arg boolean isAcceptingWaste;\n\n            identifier(assetId);\n        }\n    }\n\n    // Environmental monitoring\n    package environment {\n\n        enum PollutantType {\n            CO_TWO(_);\n            NOX(_);\n            PM_TEN(_);\n            PM_TWENTY_FIVE(_);\n            SO_TWO(_);\n        }\n\n        struct AirQualityReading {\n            ref .PollutantType pollutant;\n            arg double concentration;\n            arg datetime timestamp;\n            arg boolean exceedsLimit;\n            func boolean requiresAlert();\n        }\n\n        entity MonitoringStation extends ..infrastructure.Asset {\n            arg string stationId;\n            ref .AirQualityReading[] readings;\n            arg boolean isCalibrated;\n            arg date lastCalibrationDate;\n\n            identifier(stationId);\n        }\n    }\n\n    // Emergency services management\n    package emergency {\n\n        enum EmergencyType {\n            FIRE(_);\n            MEDICAL(_);\n            POLICE(_);\n            DISASTER(_);\n            TRAFFIC(_);\n        }\n\n        enum ResponsePriority {\n            arg int code;\n            CRITICAL(1, 1);\n            HIGH(2, 2);\n            MEDIUM(3, 3);\n            LOW(4, 4);\n        }\n\n        entity EmergencyIncident {\n            arg string incidentId;\n            ref .EmergencyType type;\n            ref .ResponsePriority priority;\n            ref ..infrastructure.GeoLocation location;\n            arg datetime reportedTime;\n            arg datetime responseTime;\n            arg boolean isActive;\n\n            identifier(incidentId);\n        }\n\n        entity EmergencyTeam {\n            arg string teamId;\n            ref .EmergencyType specialty;\n            arg int memberCount;\n            ref ..infrastructure.GeoLocation currentLocation;\n            arg boolean isAvailable;\n\n            identifier(teamId);\n        }\n    }\n\n    // Smart building management\n    package buildings {\n\n        enum BuildingType {\n            RESIDENTIAL(_);\n            COMMERCIAL(_);\n            INDUSTRIAL(_);\n            GOVERNMENT(_);\n            MIXED_USE(_);\n        }\n\n        enum SecurityLevel {\n            arg int clearance;\n            HIGH(1, 1);\n            MEDIUM(2, 2);\n            LOW(3, 3);\n            PUBLIC(4, 4);\n        }\n\n        entity Building extends ..infrastructure.Asset {\n            ref .BuildingType type;\n            arg int floors;\n            arg double totalArea;\n            arg int occupancy;\n            ref .SecurityLevel securityLevel;\n            arg boolean isSmartEnabled;\n\n            identifier(assetId);\n        }\n\n        entity SmartDevice {\n            arg string deviceId;\n            ref Building building;\n            arg string deviceType;\n            arg boolean isOnline;\n            arg datetime lastPing;\n            arg string firmwareVersion;\n\n            identifier(deviceId);\n        }\n    }\n\n    // Citizen services\n    package citizens {\n\n        enum ServiceType {\n            ADMINISTRATIVE(_);\n            HEALTH(_);\n            EDUCATION(_);\n            RECREATION(_);\n            SOCIAL(_);\n        }\n\n        entity Citizen {\n            arg string citizenId;\n            arg string firstName;\n            arg string lastName;\n            ref ..infrastructure.GeoLocation residence;\n            arg date dateOfBirth;\n            arg string email;\n            arg string phone;\n\n            identifier(citizenId);\n        }\n\n        entity ServiceRequest {\n            arg string requestId;\n            ref .ServiceType type;\n            ref Citizen requester;\n            arg datetime submissionTime;\n            arg string status;\n            arg string description;\n\n            identifier(requestId);\n        }\n    }\n\n    // Data analytics and reporting\n    package analytics {\n\n        enum MetricType {\n            ENVIRONMENTAL(_);\n            TRAFFIC(_);\n            ENERGY(_);\n            SAFETY(_);\n            EFFICIENCY(_);\n        }\n\n        struct AnalyticsReport {\n            arg string reportId;\n            ref .MetricType type;\n            arg datetime generationTime;\n            arg string format;\n            arg boolean isPublic;\n            func void generatePDF();\n        }\n\n        entity DataPoint {\n            arg string dataId;\n            ref .MetricType type;\n            arg double value;\n            arg datetime timestamp;\n            arg string source;\n            arg boolean isVerified;\n\n            identifier(dataId);\n        }\n    }\n\n     // Healthcare management\n    package healthcare {\n            enum FacilityType {\n                HOSPITAL(_);\n                CLINIC(_);\n                PHARMACY(_);\n                LABORATORY(_);\n                NURSING_HOME(_);\n            }\n\n            enum MedicalSpecialty {\n                GENERAL_MEDICINE(_);\n                EMERGENCY(_);\n                PEDIATRICS(_);\n                SURGERY(_);\n                CARDIOLOGY(_);\n            }\n\n            struct PatientHistory {\n                arg string patientId;\n                arg datetime visitDate;\n                arg string diagnosis;\n                arg string treatment;\n                arg string notes;\n                func boolean isUrgent();\n            }\n\n            entity HealthcareFacility extends ..infrastructure.Asset {\n                ref .FacilityType type;\n                arg int bedCapacity;\n                arg int currentOccupancy;\n                arg boolean hasEmergencyUnit;\n                ref .MedicalSpecialty[] specialties;\n\n                identifier(assetId);\n            }\n\n            entity MedicalEquipment extends ..infrastructure.Asset {\n                arg string equipmentType;\n                arg string manufacturer;\n                arg date warrantyExpiry;\n                arg int hoursInUse;\n                arg boolean requiresCalibration;\n\n                identifier(assetId);\n            }\n        }\n\n    // Education system\n    package education {\n        enum InstitutionType {\n            PRIMARY_SCHOOL(_);\n            SECONDARY_SCHOOL(_);\n            UNIVERSITY(_);\n            VOCATIONAL(_);\n            LIBRARY(_);\n        }\n\n        enum CourseLevel {\n            BEGINNER(_);\n            INTERMEDIATE(_);\n            ADVANCED(_);\n            EXPERT(_);\n        }\n\n        entity EducationalInstitution extends ..infrastructure.Asset {\n            ref .InstitutionType type;\n            arg int studentCapacity;\n            arg int staffCount;\n            arg boolean isPublic;\n            arg string accreditationStatus;\n\n            identifier(assetId);\n        }\n\n        entity Course {\n            arg string courseId;\n            ref .CourseLevel level;\n            arg string title;\n            arg int credits;\n            arg int maxEnrollment;\n            arg boolean isOnline;\n\n            identifier(courseId);\n        }\n    }\n\n    // Smart agriculture\n    package agriculture {\n        enum CropType {\n            GRAIN(_);\n            VEGETABLE(_);\n            FRUIT(_);\n            FLOWER(_);\n            HERB(_);\n        }\n\n        enum IrrigationType {\n            DRIP(_);\n            SPRINKLER(_);\n            FLOOD(_);\n            MANUAL(_);\n        }\n\n        entity Farm extends ..infrastructure.Asset {\n            ref .CropType[] crops;\n            arg double area;\n            ref .IrrigationType irrigationType;\n            arg boolean isOrganic;\n            arg date lastHarvestDate;\n\n            identifier(assetId);\n        }\n\n        entity Sensor extends ..infrastructure.Asset {\n            arg string sensorType;\n            arg double readingValue;\n            arg string unit;\n            arg datetime lastReading;\n            arg boolean needsCalibration;\n\n            identifier(assetId);\n        }\n    }\n\n    // Tourism management\n    package tourism {\n        enum AttractionType {\n            HISTORICAL(_);\n            CULTURAL(_);\n            NATURAL(_);\n            RECREATIONAL(_);\n            COMMERCIAL(_);\n        }\n\n        enum SeasonType {\n            PEAK(_);\n            SHOULDER(_);\n            OFF_PEAK(_);\n            SPECIAL(_);\n        }\n\n        entity TouristAttraction extends ..infrastructure.Asset {\n            ref .AttractionType type;\n            arg int dailyVisitorCapacity;\n            arg double entryFee;\n            arg boolean isAccessible;\n            arg datetime[] openingHours;\n\n            identifier(assetId);\n        }\n\n        entity Event {\n            arg string eventId;\n            ref .SeasonType season;\n            arg string name;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg int expectedAttendance;\n\n            identifier(eventId);\n        }\n    }\n\n    // Smart parking\n    package parking {\n        enum ParkingType {\n            STREET(_);\n            GARAGE(_);\n            LOT(_);\n            PRIVATE(_);\n            SPECIAL(_);\n        }\n\n        enum VehicleSize {\n            COMPACT(_);\n            STANDARD(_);\n            LARGE(_);\n            MOTORCYCLE(_);\n            HANDICAP(_);\n        }\n\n        entity ParkingFacility extends ..infrastructure.Asset {\n            ref .ParkingType type;\n            arg int totalSpaces;\n            arg int availableSpaces;\n            arg double hourlyRate;\n            arg boolean hasChargingStations;\n\n            identifier(assetId);\n        }\n\n        entity ParkingTransaction {\n            arg string transactionId;\n            ref .VehicleSize vehicleSize;\n            arg datetime entryTime;\n            arg datetime exitTime;\n            arg double amount;\n            arg boolean isPaid;\n\n            identifier(transactionId);\n        }\n    }\n\n    // Weather monitoring\n    package weather {\n        enum WeatherCondition {\n            CLEAR(_);\n            CLOUDY(_);\n            RAIN(_);\n            SNOW(_);\n            STORM(_);\n        }\n\n        enum AlertLevel {\n            arg string description;\n            SEVERE(1, \"Immediate action required\");\n            WARNING(2, \"Be prepared\");\n            WATCH(3, \"Be aware\");\n            ADVISORY(4, \"For information\");\n        }\n\n        entity WeatherStation extends ..infrastructure.Asset {\n            arg double temperature;\n            arg double humidity;\n            arg double windSpeed;\n            arg double precipitation;\n            ref .WeatherCondition condition;\n\n            identifier(assetId);\n        }\n\n        entity WeatherAlert {\n            arg string alertId;\n            ref .AlertLevel level;\n            arg string message;\n            arg datetime issueTime;\n            arg datetime expiryTime;\n            arg boolean isActive;\n\n            identifier(alertId);\n        }\n    }\n\n    // Smart grid\n    package smartgrid {\n        enum GridComponent {\n            TRANSFORMER(_);\n            SUBSTATION(_);\n            SWITCHGEAR(_);\n            GENERATOR(_);\n            STORAGE(_);\n        }\n\n        enum LoadProfile {\n            arg double baseLoad;\n            RESIDENTIAL(1, 5.0);\n            COMMERCIAL(2, 20.0);\n            INDUSTRIAL(3, 100.0);\n            MUNICIPAL(4, 50.0);\n        }\n\n        entity GridNode extends ..infrastructure.Asset {\n            ref .GridComponent type;\n            arg double voltage;\n            arg double current;\n            ref .LoadProfile profile;\n            arg boolean isRedundant;\n\n            identifier(assetId);\n        }\n\n        entity PowerFlow {\n            arg string flowId;\n            ref GridNode source;\n            ref GridNode destination;\n            arg double amount;\n            arg datetime timestamp;\n            arg boolean isStable;\n\n            identifier(flowId);\n        }\n    }\n\n    // Urban planning\n    package urbanplanning {\n        enum ZoneType {\n            RESIDENTIAL(_);\n            COMMERCIAL(_);\n            INDUSTRIAL(_);\n            MIXED(_);\n            GREEN_SPACE(_);\n        }\n\n        enum DevelopmentStatus {\n            PROPOSED(_);\n            APPROVED(_);\n            UNDER_CONSTRUCTION(_);\n            COMPLETED(_);\n            SUSPENDED(_);\n        }\n\n        entity Zone extends ..infrastructure.Asset {\n            ref .ZoneType type;\n            arg double area;\n            arg double maxDensity;\n            arg int heightLimit;\n            arg boolean isHistorical;\n\n            identifier(assetId);\n        }\n\n        entity DevelopmentProject {\n            arg string projectId;\n            ref .DevelopmentStatus status;\n            arg string description;\n            arg date startDate;\n            arg date completionDate;\n            arg double budget;\n\n            identifier(projectId);\n        }\n    }\n\n    // Public safety\n    package safety {\n        enum IncidentType {\n            CRIME(_);\n            ACCIDENT(_);\n            FIRE(_);\n            MEDICAL(_);\n            INFRASTRUCTURE(_);\n        }\n\n        enum ResponseUnit {\n            POLICE(_);\n            FIRE(_);\n            AMBULANCE(_);\n            HAZMAT(_);\n            RESCUE(_);\n        }\n\n        entity SafetyIncident {\n            arg string incidentId;\n            ref .IncidentType type;\n            arg datetime reportTime;\n            arg string description;\n            arg boolean requiresEvacuation;\n            ref .ResponseUnit[] requiredUnits;\n\n            identifier(incidentId);\n        }\n\n        entity Evacuation {\n            arg string evacuationId;\n            ref SafetyIncident incident;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg int affectedPopulation;\n            arg boolean isCompleted;\n\n            identifier(evacuationId);\n        }\n    }\n\n    // Communication infrastructure\n    package communication {\n        enum NetworkType {\n            FIBER(_);\n            FIVE_G(_);\n            FOUR_G(_);\n            WIFI(_);\n            EMERGENCY(_);\n        }\n\n        enum Bandwidth {\n            arg int speed;\n            LOW(1, 10);\n            MEDIUM(2, 100);\n            HIGH(3, 1000);\n            ULTRA(4, 10000);\n        }\n\n        entity NetworkNode extends ..infrastructure.Asset {\n            ref .NetworkType type;\n            ref .Bandwidth bandwidth;\n            arg int connectedDevices;\n            arg double uptime;\n            arg boolean isRedundant;\n\n            identifier(assetId);\n        }\n\n        entity DataTransfer {\n            arg string transferId;\n            ref NetworkNode source;\n            ref NetworkNode destination;\n            arg double amount;\n            arg datetime timestamp;\n            arg boolean isEncrypted;\n\n            identifier(transferId);\n        }\n    }\n\n\n    // Cultural facilities management\n    package culture {\n        enum VenueType {\n            MUSEUM(_);\n            THEATER(_);\n            CONCERT_HALL(_);\n            ART_GALLERY(_);\n            AMPHITHEATER(_);\n        }\n\n        enum EventCategory {\n            EXHIBITION(_);\n            PERFORMANCE(_);\n            WORKSHOP(_);\n            SCREENING(_);\n            LECTURE(_);\n        }\n\n        struct TicketInfo {\n            arg double basePrice;\n            arg double discount;\n            arg int availableSeats;\n            arg boolean isRefundable;\n            func double calculateFinalPrice();\n        }\n\n        entity CulturalVenue extends ..infrastructure.Asset {\n            ref .VenueType type;\n            arg int capacity;\n            arg boolean hasAccessibility;\n            arg string[] facilities;\n            arg datetime[] operatingHours;\n\n            identifier(assetId);\n        }\n\n        entity CulturalEvent {\n            arg string eventId;\n            ref .EventCategory category;\n            ref .TicketInfo ticketing;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string curator;\n\n            identifier(eventId);\n        }\n    }\n\n    // Sports facilities\n    package sports {\n        enum FacilityType {\n            STADIUM(_);\n            GYMNASIUM(_);\n            POOL(_);\n            COURT(_);\n            FIELD(_);\n        }\n\n        enum SportType {\n            FOOTBALL(_);\n            BASKETBALL(_);\n            SWIMMING(_);\n            TENNIS(_);\n            ATHLETICS(_);\n        }\n\n        entity SportsFacility extends ..infrastructure.Asset {\n            ref .FacilityType type;\n            ref .SportType[] supportedSports;\n            arg int spectatorCapacity;\n            arg boolean hasFloodlights;\n            arg boolean isIndoor;\n\n            identifier(assetId);\n        }\n\n        entity Tournament {\n            arg string tournamentId;\n            ref .SportType sport;\n            arg date startDate;\n            arg date endDate;\n            arg int participants;\n            arg string sponsor;\n\n            identifier(tournamentId);\n        }\n    }\n\n    // Waste water management\n    package wastewater {\n        enum TreatmentStage {\n            PRIMARY(_);\n            SECONDARY(_);\n            TERTIARY(_);\n            ADVANCED(_);\n        }\n\n        enum WaterQualityMetric {\n            arg string unit;\n            BOD(1, \"mg/L\");\n            COD(2, \"mg/L\");\n            TSS(3, \"mg/L\");\n            PH(4, \"pH\");\n        }\n\n        entity TreatmentPlant extends ..infrastructure.Asset {\n            ref .TreatmentStage[] stages;\n            arg double dailyCapacity;\n            arg double currentFlow;\n            arg boolean isOperational;\n            arg date lastInspection;\n\n            identifier(assetId);\n        }\n\n        entity QualityTest {\n            arg string testId;\n            ref .WaterQualityMetric metric;\n            arg double value;\n            arg datetime timestamp;\n            arg boolean meetsStandard;\n            arg string analyst;\n\n            identifier(testId);\n        }\n    }\n\n    // Public transit payments\n    package transit_payment {\n        enum PaymentMethod {\n            CARD(_);\n            MOBILE(_);\n            TOKEN(_);\n            CASH(_);\n            SUBSCRIPTION(_);\n        }\n\n        enum FareType {\n            arg double baseRate;\n            SINGLE(1, 2.50);\n            DAY_PASS(2, 8.00);\n            WEEK_PASS(3, 30.00);\n            MONTH_PASS(4, 100.00);\n        }\n\n        entity TransitCard {\n            arg string cardId;\n            ref .PaymentMethod method;\n            ref .FareType fareType;\n            arg double balance;\n            arg date expiryDate;\n            arg boolean isActive;\n\n            identifier(cardId);\n        }\n\n        entity FareTransaction {\n            arg string transactionId;\n            ref TransitCard card;\n            arg datetime timestamp;\n            arg double amount;\n            arg string route;\n            arg boolean isRefunded;\n\n            identifier(transactionId);\n        }\n    }\n\n    // Digital signage\n    package signage {\n        enum SignType {\n            TRAFFIC(_);\n            INFORMATION(_);\n            ADVERTISING(_);\n            EMERGENCY(_);\n            WAYFINDING(_);\n        }\n\n        enum ContentType {\n            TEXT(_);\n            IMAGE(_);\n            VIDEO(_);\n            MIXED(_);\n        }\n\n        entity DigitalSign extends ..infrastructure.Asset {\n            ref .SignType type;\n            ref .ContentType contentType;\n            arg string resolution;\n            arg boolean isInteractive;\n            arg datetime[] activeHours;\n\n            identifier(assetId);\n        }\n\n        entity SignContent {\n            arg string contentId;\n            ref DigitalSign sign;\n            arg string content;\n            arg datetime startDisplay;\n            arg datetime endDisplay;\n            arg int priority;\n\n            identifier(contentId);\n        }\n    }\n\n    // Noise monitoring\n    package noise {\n        enum NoiseSource {\n            TRAFFIC(_);\n            CONSTRUCTION(_);\n            ENTERTAINMENT(_);\n            INDUSTRIAL(_);\n            URBAN(_);\n        }\n\n        enum NoiseLevel {\n            arg int decibels;\n            LOW(1, 40);\n            MODERATE(2, 60);\n            HIGH(3, 80);\n            DANGEROUS(4, 100);\n        }\n\n        entity NoiseSensor extends ..infrastructure.Asset {\n            ref .NoiseSource sources;\n            ref .NoiseLevel currentLevel;\n            arg double averageReading;\n            arg datetime lastPeak;\n            arg boolean needsCalibration;\n\n            identifier(assetId);\n        }\n\n        entity NoiseComplaint {\n            arg string complaintId;\n            ref .NoiseSource source;\n            arg datetime reportTime;\n            arg string description;\n            arg boolean isResolved;\n            arg string resolution;\n\n            identifier(complaintId);\n        }\n    }\n\n    // Smart lighting\n    package lighting {\n        enum LightType {\n            LED(_);\n            SOLAR(_);\n            HALOGEN(_);\n            SMART(_);\n            EMERGENCY(_);\n        }\n\n        enum BrightnessLevel {\n            arg int percentage;\n            OFF(0, 0);\n            DIM(1, 25);\n            MEDIUM(2, 50);\n            BRIGHT(3, 100);\n        }\n\n        entity StreetLight extends ..infrastructure.Asset {\n            ref .LightType type;\n            ref .BrightnessLevel brightness;\n            arg double energyConsumption;\n            arg boolean hasMotionSensor;\n            arg datetime[] scheduleOn;\n\n            identifier(assetId);\n        }\n\n        entity LightingZone {\n            arg string zoneId;\n            ref StreetLight[] lights;\n            arg string schedule;\n            arg boolean isDimmed;\n            arg double dailyUsage;\n\n            identifier(zoneId);\n        }\n    }\n\n    // Market management\n    package markets {\n        enum MarketType {\n            FARMERS(_);\n            FLEA(_);\n            FOOD(_);\n            CRAFT(_);\n            NIGHT(_);\n        }\n\n        enum VendorCategory {\n            PRODUCE(_);\n            PREPARED_FOOD(_);\n            CRAFTS(_);\n            SERVICES(_);\n            MIXED(_);\n        }\n\n        entity Market extends ..infrastructure.Asset {\n            ref .MarketType type;\n            arg int stallCapacity;\n            arg string[] operatingDays;\n            arg datetime openTime;\n            arg datetime closeTime;\n\n            identifier(assetId);\n        }\n\n        entity Vendor {\n            arg string vendorId;\n            ref .VendorCategory category;\n            ref Market market;\n            arg string products;\n            arg boolean isRegistered;\n            arg date licenseExpiry;\n\n            identifier(vendorId);\n        }\n    }\n\n    // Drone management\n    package drones {\n        enum DroneType {\n            SURVEILLANCE(_);\n            DELIVERY(_);\n            MAINTENANCE(_);\n            EMERGENCY(_);\n            MAPPING(_);\n        }\n\n        enum FlightStatus {\n            GROUNDED(_);\n            FLYING(_);\n            CHARGING(_);\n            MAINTENANCE(_);\n            EMERGENCY(_);\n        }\n\n        entity Drone extends ..infrastructure.Asset {\n            ref .DroneType type;\n            ref .FlightStatus flightStatus;\n            arg double batteryLevel;\n            arg double maxAltitude;\n            arg double range;\n\n            identifier(assetId);\n        }\n\n        entity FlightMission {\n            arg string missionId;\n            ref Drone drone;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string purpose;\n            arg boolean isCompleted;\n\n            identifier(missionId);\n        }\n    }\n\n    // Public furniture\n    package furniture {\n        enum FurnitureType {\n            BENCH(_);\n            BIN(_);\n            SHELTER(_);\n            KIOSK(_);\n            ART(_);\n        }\n\n        enum MaintenanceState {\n            NEW(_);\n            GOOD(_);\n            FAIR(_);\n            POOR(_);\n            REPLACE(_);\n        }\n\n        entity StreetFurniture extends ..infrastructure.Asset {\n            ref .FurnitureType type;\n            ref .MaintenanceState state;\n            arg string material;\n            arg boolean needsRepair;\n\n            identifier(assetId);\n        }\n\n        entity MaintenanceRecord {\n            arg string recordId;\n            ref StreetFurniture furniture;\n            arg date maintenanceDate;\n            arg string work;\n            arg double cost;\n            arg string contractor;\n\n            identifier(recordId);\n        }\n    }\n\n    // Smart restaurant management\n    package restaurants {\n        enum CuisineType {\n            ITALIAN(_);\n            ASIAN(_);\n            AMERICAN(_);\n            MEXICAN(_);\n            FUSION(_);\n        }\n\n        enum FoodSafetyRating {\n            arg string description;\n            A(1, \"Excellent\");\n            B(2, \"Good\");\n            C(3, \"Fair\");\n            D(4, \"Poor\");\n            F(5, \"Failed\");\n        }\n\n        struct MenuSection {\n            arg string name;\n            // TODO []\n            arg string items;\n            // TODO []\n            arg double prices;\n            arg boolean isSpecial;\n            func double getAveragePrice();\n        }\n\n        entity Restaurant extends ..infrastructure.Asset {\n            ref .CuisineType type;\n            ref .FoodSafetyRating rating;\n            arg int seatingCapacity;\n            arg boolean hasDelivery;\n            arg datetime[] operatingHours;\n\n            identifier(assetId);\n        }\n\n        entity Inspection {\n            arg string inspectionId;\n            ref Restaurant restaurant;\n            arg date inspectionDate;\n            arg string[] violations;\n            arg boolean passed;\n            arg date followupDate;\n\n            identifier(inspectionId);\n        }\n    }\n\n    // Smart retail\n    package retail {\n        enum StoreType {\n            GROCERY(_);\n            CLOTHING(_);\n            ELECTRONICS(_);\n            PHARMACY(_);\n            DEPARTMENT(_);\n        }\n\n        enum CustomerSegment {\n            BUDGET(_);\n            MAINSTREAM(_);\n            PREMIUM(_);\n            LUXURY(_);\n        }\n\n        entity RetailStore extends ..infrastructure.Asset {\n            ref .StoreType type;\n            ref .CustomerSegment segment;\n            arg double floorArea;\n            arg int employeeCount;\n            arg boolean isChainStore;\n\n            identifier(assetId);\n        }\n\n        entity InventoryItem {\n            arg string itemId;\n            ref RetailStore store;\n            arg string name;\n            arg int stockLevel;\n            arg double price;\n            arg boolean isDiscounted;\n\n            identifier(itemId);\n        }\n    }\n\n    // Cemetery management\n    package cemetery {\n        enum PlotType {\n            SINGLE(_);\n            FAMILY(_);\n            MAUSOLEUM(_);\n            COLUMBARIUM(_);\n            MEMORIAL(_);\n        }\n\n        enum MaintenanceSchedule {\n            WEEKLY(_);\n            MONTHLY(_);\n            QUARTERLY(_);\n            ANNUAL(_);\n            AS_NEEDED(_);\n        }\n\n        entity Cemetery extends ..infrastructure.Asset {\n            ref .PlotType[] availableTypes;\n            arg double totalArea;\n            arg int totalPlots;\n            arg int availablePlots;\n            arg boolean hasChapel;\n\n            identifier(assetId);\n        }\n\n        entity Plot {\n            arg string plotId;\n            ref .PlotType type;\n            ref .MaintenanceSchedule schedule;\n            arg date lastMaintenance;\n            arg boolean isOccupied;\n            arg string owner;\n\n            identifier(plotId);\n        }\n    }\n\n    // Smart postal service\n    package postal {\n        enum MailType {\n            LETTER(_);\n            PACKAGE(_);\n            EXPRESS(_);\n            REGISTERED(_);\n            BULK(_);\n        }\n\n        enum DeliveryStatus {\n            RECEIVED(_);\n            SORTING(_);\n            IN_TRANSIT(_);\n            OUT_FOR_DELIVERY(_);\n            DELIVERED(_);\n        }\n\n        entity PostOffice extends ..infrastructure.Asset {\n            arg int counterCount;\n            arg int staffCount;\n            arg boolean hasAutomation;\n            arg datetime[] serviceHours;\n            arg double storageCapacity;\n\n            identifier(assetId);\n        }\n\n        entity Shipment {\n            arg string trackingId;\n            ref .MailType type;\n            ref .DeliveryStatus status;\n            arg datetime receivedTime;\n            arg datetime estimatedDelivery;\n            arg boolean isInsured;\n\n            identifier(trackingId);\n        }\n    }\n\n    // Public art\n    package public_art {\n        enum ArtType {\n            SCULPTURE(_);\n            MURAL(_);\n            INSTALLATION(_);\n            INTERACTIVE(_);\n            TEMPORARY(_);\n        }\n\n        enum ArtistType {\n            LOCAL(_);\n            NATIONAL(_);\n            INTERNATIONAL(_);\n            STUDENT(_);\n            COLLECTIVE(_);\n        }\n\n        entity Artwork extends ..infrastructure.Asset {\n            ref .ArtType type;\n            ref .ArtistType artistType;\n            arg boolean requiresRestoration;\n            arg string materials;\n\n            identifier(assetId);\n        }\n\n        entity ArtEvent {\n            arg string eventId;\n            ref Artwork artwork;\n            arg string eventType;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg int attendees;\n\n            identifier(eventId);\n        }\n    }\n\n    // Smart elevators\n    package elevators {\n        enum ElevatorType {\n            PASSENGER(_);\n            FREIGHT(_);\n            SERVICE(_);\n            PANORAMIC(_);\n            EMERGENCY(_);\n        }\n\n        enum OperationalStatus {\n            OPERATIONAL(_);\n            MAINTENANCE(_);\n            OUT_OF_SERVICE(_);\n            INSPECTION(_);\n            EMERGENCY(_);\n        }\n\n        entity Elevator extends ..infrastructure.Asset {\n            ref .ElevatorType type;\n            ref .OperationalStatus operationalStatus;\n            arg int capacity;\n            arg int currentFloor;\n            arg int totalFloors;\n\n            identifier(assetId);\n        }\n\n        entity MaintenanceLog {\n            arg string logId;\n            ref Elevator elevator;\n            arg datetime serviceTime;\n            arg string technician;\n            arg string work;\n            arg boolean resolved;\n\n            identifier(logId);\n        }\n    }\n\n    // Climate action\n    package climate {\n        enum EmissionSource {\n            TRANSPORT(_);\n            BUILDINGS(_);\n            INDUSTRY(_);\n            WASTE(_);\n            ENERGY(_);\n        }\n\n        enum MitigationStrategy {\n            REDUCTION(_);\n            OFFSET(_);\n            ADAPTATION(_);\n            PREVENTION(_);\n            INNOVATION(_);\n        }\n\n        entity EmissionReport {\n            arg string reportId;\n            ref .EmissionSource source;\n            arg double amount;\n            arg string unit;\n            arg date measurementDate;\n            arg boolean verified;\n\n            identifier(reportId);\n        }\n\n        entity ClimateProject {\n            arg string projectId;\n            ref .MitigationStrategy strategy;\n            arg string description;\n            arg date startDate;\n            arg double budget;\n            arg boolean isActive;\n\n            identifier(projectId);\n        }\n    }\n\n    // Snow removal\n    package snow_removal {\n        enum PriorityLevel {\n            EMERGENCY(_);\n            PRIMARY(_);\n            SECONDARY(_);\n            RESIDENTIAL(_);\n            SIDEWALK(_);\n        }\n\n        enum TreatmentType {\n            PLOW(_);\n            SALT(_);\n            SAND(_);\n            CHEMICAL(_);\n            MANUAL(_);\n        }\n\n        entity SnowRoute {\n            arg string routeId;\n            ref .PriorityLevel priority;\n            arg double length;\n            arg int estimatedTime;\n            arg boolean isCleared;\n            arg datetime lastCleared;\n\n            identifier(routeId);\n        }\n\n        entity TreatmentOperation {\n            arg string operationId;\n            ref .TreatmentType type;\n            ref SnowRoute route;\n            arg datetime startTime;\n            arg datetime completionTime;\n            arg double materialUsed;\n\n            identifier(operationId);\n        }\n    }\n\n    // Urban wildlife\n    package wildlife {\n        enum SpeciesType {\n            BIRD(_);\n            MAMMAL(_);\n            REPTILE(_);\n            AMPHIBIAN(_);\n            INSECT(_);\n        }\n\n        enum HabitatType {\n            PARK(_);\n            WATERWAY(_);\n            URBAN(_);\n            PROTECTED(_);\n            CORRIDOR(_);\n        }\n\n        entity WildlifeZone extends ..infrastructure.Asset {\n            ref .HabitatType type;\n            arg double area;\n            ref .SpeciesType[] presentSpecies;\n            arg boolean isProtected;\n            arg date lastSurvey;\n\n            identifier(assetId);\n        }\n\n        entity WildlifeIncident {\n            arg string incidentId;\n            ref .SpeciesType species;\n            arg datetime reportTime;\n            arg string description;\n            arg boolean requiresAction;\n            arg string resolution;\n\n            identifier(incidentId);\n        }\n    }\n\n    // Public bathrooms\n    package bathrooms {\n        enum BathroomType {\n            PERMANENT(_);\n            PORTABLE(_);\n            AUTOMATED(_);\n            ACCESSIBLE(_);\n            FAMILY(_);\n        }\n\n        enum CleaningStatus {\n            CLEAN(_);\n            NEEDS_CLEANING(_);\n            IN_PROGRESS(_);\n            OUT_OF_SERVICE(_);\n            EMERGENCY(_);\n        }\n\n        entity PublicBathroom extends ..infrastructure.Asset {\n            ref .BathroomType type;\n            ref .CleaningStatus cleaningStatus;\n            arg boolean isOccupied;\n            arg datetime lastCleaning;\n            arg boolean hasChangingTable;\n\n            identifier(assetId);\n        }\n\n        entity MaintenanceTicket {\n            arg string ticketId;\n            ref PublicBathroom bathroom;\n            arg string issue;\n            arg datetime reportTime;\n            arg boolean isUrgent;\n            arg boolean resolved;\n\n            identifier(ticketId);\n        }\n    }\n\n    // Smart Manufacturing Hub Management\n    package manufacturing {\n        enum ProductionLineType {\n            ASSEMBLY(_);\n            PACKAGING(_);\n            TESTING(_);\n            MACHINING(_);\n            FINISHING(_);\n            CHEMICAL_PROCESSING(_);\n            FOOD_PROCESSING(_);\n            ELECTRONICS(_);\n            AUTOMOTIVE(_);\n            PHARMACEUTICAL(_);\n        }\n\n        enum QualityStandard {\n            arg string code;\n            arg int level;\n            ISO_NINE_THOUSAND_ONE(1, \"ISO-9001\", 1);\n            ISO_FOURTEEN_THOUSAND_ONE(2, \"ISO-14001\", 1);\n            GMP(3, \"GMP\", 2);\n            HACCP(4, \"HACCP\", 2);\n            SIX_SIGMA(5, \"6σ\", 3);\n        }\n\n        enum MachineStatus {\n            RUNNING(_);\n            IDLE(_);\n            MAINTENANCE(_);\n            ERROR(_);\n            OFFLINE(_);\n            CALIBRATING(_);\n            WARMING_UP(_);\n            COOLING_DOWN(_);\n            EMERGENCY_STOP(_);\n            STANDBY(_);\n        }\n\n        struct ProductionMetrics {\n            arg int targetOutput;\n            arg int actualOutput;\n            arg double efficiency;\n            arg int defectRate;\n            arg double energyConsumption;\n            arg double materialWaste;\n            func double calculateOEE();\n            func boolean isOnTarget();\n            func double getVariance();\n        }\n\n        struct MaintenanceSchedule {\n            arg date lastMaintenance;\n            arg date nextMaintenance;\n            arg int frequency;\n            // TODO []\n            arg string tasks;\n            arg string responsible;\n            func boolean isOverdue();\n        }\n\n        entity ManufacturingPlant extends ..infrastructure.Asset {\n            ref .ProductionLineType[] productionTypes;\n            ref .QualityStandard[] certifications;\n            arg int employeeCount;\n            arg double productionCapacity;\n            arg boolean isTwentyFourSeven;\n            arg string[] safetyProtocols;\n            arg double totalArea;\n            arg int shiftCount;\n\n            identifier(assetId);\n        }\n\n        entity ProductionLine {\n            arg string lineId;\n            ref .ProductionLineType type;\n            ref .MachineStatus status;\n            ref .ProductionMetrics metrics;\n            arg int workerCount;\n            arg double outputRate;\n            arg string currentProduct;\n            arg datetime lastStartup;\n\n            identifier(lineId);\n        }\n\n        entity Machine {\n            arg string machineId;\n            ref .MachineStatus status;\n            ref .MaintenanceSchedule maintenance;\n            arg string manufacturer;\n            arg string model;\n            arg date installationDate;\n            arg double powerConsumption;\n            arg string[] capabilities;\n\n            identifier(machineId);\n        }\n\n        entity QualityCheck {\n            arg string checkId;\n            ref ProductionLine line;\n            arg datetime timestamp;\n            arg string inspector;\n            arg string[] parameters;\n            arg boolean passed;\n            arg string[] defects;\n            arg string action;\n\n            identifier(checkId);\n        }\n\n        entity MaterialInventory {\n            arg string inventoryId;\n            arg string materialType;\n            arg double quantity;\n            arg string unit;\n            arg date expiryDate;\n            arg string supplier;\n            arg string storageLocation;\n            arg boolean hazardous;\n\n            identifier(inventoryId);\n        }\n\n    }\n\n    // Advanced Healthcare Management\n    package healthcare_extended {\n        enum MedicalDepartment {\n            EMERGENCY(_);\n            SURGERY(_);\n            PEDIATRICS(_);\n            CARDIOLOGY(_);\n            NEUROLOGY(_);\n            ORTHOPEDICS(_);\n            ONCOLOGY(_);\n            RADIOLOGY(_);\n            ICU(_);\n            PHARMACY(_);\n        }\n\n        enum PatientStatus {\n            ADMITTED(_);\n            OUTPATIENT(_);\n            CRITICAL(_);\n            STABLE(_);\n            DISCHARGED(_);\n            TRANSFERRED(_);\n            QUARANTINE(_);\n            OBSERVATION(_);\n            RECOVERY(_);\n            EMERGENCY(_);\n        }\n\n        enum TreatmentType {\n            MEDICATION(_);\n            SURGERY(_);\n            THERAPY(_);\n            DIAGNOSTIC(_);\n            PREVENTIVE(_);\n            EMERGENCY(_);\n            PALLIATIVE(_);\n            REHABILITATION(_);\n            ALTERNATIVE(_);\n            EXPERIMENTAL(_);\n        }\n\n        struct VitalSigns {\n            arg double temperature;\n            arg int heartRate;\n            arg int bloodPressureSystolic;\n            arg int bloodPressureDiastolic;\n            arg int respiratoryRate;\n            arg double oxygenSaturation;\n            func boolean isNormal();\n            func string getStatus();\n        }\n\n        entity Patient {\n            arg string patientId;\n            ref .PatientStatus status;\n            ref .MedicalDepartment department;\n            ref .VitalSigns vitals;\n            arg string[] allergies;\n            arg string[] medications;\n            arg string bloodType;\n            arg date admissionDate;\n\n            identifier(patientId);\n        }\n\n        entity Treatment {\n            arg string treatmentId;\n            ref .TreatmentType type;\n            ref Patient patient;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string provider;\n            arg string notes;\n            arg boolean completed;\n\n            identifier(treatmentId);\n        }\n\n    }\n\n    // Smart Education Extended\n    package education_extended {\n        enum CourseType {\n            LECTURE(_);\n            SEMINAR(_);\n            LABORATORY(_);\n            WORKSHOP(_);\n            ONLINE(_);\n            HYBRID(_);\n            FIELD_WORK(_);\n            RESEARCH(_);\n            PRACTICUM(_);\n            THESIS(_);\n        }\n    }\n\n    // Smart Library Management\n    package library {\n        enum LibraryResourceType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIOBOOK(_);\n            JOURNAL(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n            MULTIMEDIA(_);\n            RESEARCH_PAPER(_);\n            ARCHIVE(_);\n            SPECIAL_COLLECTION(_);\n        }\n\n        enum MembershipLevel {\n            arg int maxBorrows;\n            arg int durationDays;\n            BASIC(1, 3, 14);\n            STANDARD(2, 5, 21);\n            PREMIUM(3, 10, 30);\n            RESEARCHER(4, 15, 45);\n            INSTITUTIONAL(5, 20, 60);\n        }\n\n        struct LoanPolicy {\n            arg int maxRenewals;\n            arg double lateFeePerDay;\n            arg int gracePeriod;\n            arg boolean allowsReservation;\n            func double calculateLateFee(int daysOverdue);\n        }\n\n        entity LibraryBranch extends ..infrastructure.Asset {\n            arg string branchName;\n            arg int capacity;\n            arg int computerStations;\n            arg boolean hasStudyRooms;\n            arg date"}]}}
2025/01/13 14:35:41 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:35:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf","version":2,"diagnostics":[]}}
2025/01/13 14:35:41 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 114 105 101 115 105 103 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:35:41 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:35:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf"}}}
2025/01/13 14:35:41 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:35:41 foldingService.go:218: Trace | Found 84 Comment Ranges
2025/01/13 14:35:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":[{"startLine":276,"startCharacter":23,"endLine":315,"endCharacter":4},{"startLine":678,"startCharacter":32,"endLine":684,"endCharacter":8},{"startLine":737,"startCharacter":27,"endLine":746,"endCharacter":8},{"startLine":1047,"startCharacter":30,"endLine":1053,"endCharacter":8},{"startLine":1248,"startCharacter":24,"endLine":1254,"endCharacter":8},{"startLine":1594,"startCharacter":34,"endLine":1603,"endCharacter":8},{"startLine":1980,"startCharacter":30,"endLine":1990,"endCharacter":8},{"startLine":108,"startCharacter":33,"endLine":115,"endCharacter":8},{"startLine":1554,"startCharacter":33,"endLine":1563,"endCharacter":8},{"startLine":1692,"startCharacter":24,"endLine":1703,"endCharacter":8},{"startLine":1718,"startCharacter":34,"endLine":1729,"endCharacter":8},{"startLine":215,"startCharacter":34,"endLine":221,"endCharacter":8},{"startLine":1038,"startCharacter":22,"endLine":1074,"endCharacter":4},{"startLine":1118,"startCharacter":24,"endLine":1124,"endCharacter":8},{"startLine":1126,"startCharacter":27,"endLine":1132,"endCharacter":8},{"startLine":1432,"startCharacter":31,"endLine":1441,"endCharacter":8},{"startLine":1462,"startCharacter":31,"endLine":1471,"endCharacter":8},{"startLine":385,"startCharacter":24,"endLine":430,"endCharacter":8},{"startLine":2360,"startCharacter":69,"endLine":2368,"endCharacter":8},{"startLine":2389,"startCharacter":28,"endLine":2396,"endCharacter":8},{"startLine":286,"startCharacter":28,"endLine":292,"endCharacter":8},{"startLine":751,"startCharacter":26,"endLine":757,"endCharacter":8},{"startLine":935,"startCharacter":28,"endLine":944,"endCharacter":8},{"startLine":1224,"startCharacter":58,"endLine":1232,"endCharacter":8},{"startLine":2221,"startCharacter":37,"endLine":2233,"endCharacter":8},{"startLine":2291,"startCharacter":31,"endLine":2302,"endCharacter":8},{"startLine":264,"startCharacter":30,"endLine":272,"endCharacter":8},{"startLine":481,"startCharacter":29,"endLine":486,"endCharacter":8},{"startLine":630,"startCharacter":28,"endLine":636,"endCharacter":8},{"startLine":1025,"startCharacter":31,"endLine":1034,"endCharacter":8},{"startLine":1065,"startCharacter":29,"endLine":1073,"endCharacter":8},{"startLine":1406,"startCharacter":27,"endLine":1412,"endCharacter":8},{"startLine":848,"startCharacter":24,"endLine":854,"endCharacter":8},{"startLine":968,"startCharacter":26,"endLine":973,"endCharacter":8},{"startLine":1196,"startCharacter":25,"endLine":1244,"endCharacter":4},{"startLine":1445,"startCharacter":21,"endLine":1483,"endCharacter":4},{"startLine":2122,"startCharacter":39,"endLine":2132,"endCharacter":8},{"startLine":449,"startCharacter":70,"endLine":457,"endCharacter":8},{"startLine":558,"startCharacter":26,"endLine":564,"endCharacter":8},{"startLine":918,"startCharacter":29,"endLine":956,"endCharacter":4},{"startLine":1705,"startCharacter":29,"endLine":1716,"endCharacter":8},{"startLine":2457,"startCharacter":66,"endLine":2466,"endCharacter":8},{"startLine":194,"startCharacter":65,"endLine":201,"endCharacter":8},{"startLine":511,"startCharacter":29,"endLine":517,"endCharacter":8},{"startLine":616,"startCharacter":29,"endLine":625,"endCharacter":8},{"startLine":670,"startCharacter":23,"endLine":676,"endCharacter":8},{"startLine":1366,"startCharacter":24,"endLine":1402,"endCharacter":4},{"startLine":1528,"startCharacter":26,"endLine":1534,"endCharacter":8},{"startLine":2481,"startCharacter":46,"endLine":2490,"endCharacter":8},{"startLine":173,"startCharacter":19,"endLine":202,"endCharacter":4},{"startLine":236,"startCharacter":28,"endLine":242,"endCharacter":8},{"startLine":826,"startCharacter":30,"endLine":835,"endCharacter":8},{"startLine":1077,"startCharacter":21,"endLine":1114,"endCharacter":4},{"startLine":1166,"startCharacter":31,"endLine":1172,"endCharacter":8},{"startLine":1940,"startCharacter":28,"endLine":1946,"endCharacter":8},{"startLine":320,"startCharacter":26,"endLine":326,"endCharacter":8},{"startLine":960,"startCharacter":23,"endLine":966,"endCharacter":8},{"startLine":1486,"startCharacter":26,"endLine":1524,"endCharacter":4},{"startLine":1039,"startCharacter":24,"endLine":1045,"endCharacter":8},{"startLine":1631,"startCharacter":28,"endLine":1642,"endCharacter":8},{"startLine":1948,"startCharacter":34,"endLine":1954,"endCharacter":8},{"startLine":2004,"startCharacter":61,"endLine":2013,"endCharacter":8},{"startLine":1367,"startCharacter":22,"endLine":1373,"endCharacter":8},{"startLine":1473,"startCharacter":31,"endLine":1482,"endCharacter":8},{"startLine":2434,"startCharacter":69,"endLine":2443,"endCharacter":8},{"startLine":50,"startCharacter":26,"endLine":56,"endCharacter":8},{"startLine":142,"startCharacter":27,"endLine":150,"endCharacter":8},{"startLine":421,"startCharacter":68,"endLine":429,"endCharacter":12},{"startLine":459,"startCharacter":23,"endLine":468,"endCharacter":8},{"startLine":1536,"startCharacter":26,"endLine":1542,"endCharacter":8},{"startLine":2163,"startCharacter":33,"endLine":2171,"endCharacter":8},{"startLine":402,"startCharacter":35,"endLine":409,"endCharacter":12},{"startLine":442,"startCharacter":26,"endLine":447,"endCharacter":8},{"startLine":959,"startCharacter":21,"endLine":995,"endCharacter":4},{"startLine":975,"startCharacter":59,"endLine":983,"endCharacter":8},{"startLine":1487,"startCharacter":28,"endLine":1493,"endCharacter":8},{"startLine":1992,"startCharacter":27,"endLine":2002,"endCharacter":8},{"startLine":2263,"startCharacter":32,"endLine":2274,"endCharacter":8},{"startLine":205,"startCharacter":25,"endLine":231,"endCharacter":4},{"startLine":1335,"startCharacter":29,"endLine":1341,"endCharacter":8},{"startLine":1405,"startCharacter":23,"endLine":1442,"endCharacter":4},{"startLine":433,"startCharacter":23,"endLine":469,"endCharacter":4},{"startLine":589,"startCharacter":21,"endLine":626,"endCharacter":4},{"startLine":1157,"startCharacter":23,"endLine":1193,"endCharacter":4},{"startLine":1205,"startCharacter":31,"endLine":1212,"endCharacter":8},{"startLine":2174,"startCharacter":58,"endLine":2189,"endCharacter":8},{"startLine":183,"startCharacter":32,"endLine":192,"endCharacter":8},{"startLine":340,"startCharacter":31,"endLine":349,"endCharacter":8},{"startLine":550,"startCharacter":26,"endLine":556,"endCharacter":8},{"startLine":777,"startCharacter":29,"endLine":786,"endCharacter":8},{"startLine":880,"startCharacter":29,"endLine":885,"endCharacter":8},{"startLine":1263,"startCharacter":59,"endLine":1271,"endCharacter":8},{"startLine":2060,"startCharacter":60,"endLine":2069,"endCharacter":8},{"startLine":48,"startCharacter":28,"endLine":95,"endCharacter":4},{"startLine":1666,"startCharacter":66,"endLine":1677,"endCharacter":8},{"startLine":1815,"startCharacter":25,"endLine":1826,"endCharacter":8},{"startLine":2379,"startCharacter":30,"endLine":2387,"endCharacter":8},{"startLine":234,"startCharacter":23,"endLine":273,"endCharacter":4},{"startLine":252,"startCharacter":34,"endLine":262,"endCharacter":8},{"startLine":278,"startCharacter":27,"endLine":284,"endCharacter":8},{"startLine":127,"startCharacter":27,"endLine":136,"endCharacter":8},{"startLine":927,"startCharacter":23,"endLine":933,"endCharacter":8},{"startLine":1078,"startCharacter":25,"endLine":1084,"endCharacter":8},{"startLine":1327,"startCharacter":23,"endLine":1333,"endCharacter":8},{"startLine":2340,"startCharacter":30,"endLine":2347,"endCharacter":8},{"startLine":536,"startCharacter":22,"endLine":545,"endCharacter":8},{"startLine":791,"startCharacter":21,"endLine":836,"endCharacter":4},{"startLine":1454,"startCharacter":33,"endLine":1460,"endCharacter":8},{"startLine":1584,"startCharacter":62,"endLine":1592,"endCharacter":8},{"startLine":1761,"startCharacter":28,"endLine":1772,"endCharacter":8},{"startLine":65,"startCharacter":29,"endLine":71,"endCharacter":8},{"startLine":709,"startCharacter":20,"endLine":747,"endCharacter":4},{"startLine":710,"startCharacter":27,"endLine":716,"endCharacter":8},{"startLine":856,"startCharacter":62,"endLine":864,"endCharacter":8},{"startLine":999,"startCharacter":26,"endLine":1005,"endCharacter":8},{"startLine":1158,"startCharacter":28,"endLine":1164,"endCharacter":8},{"startLine":1326,"startCharacter":20,"endLine":1363,"endCharacter":4},{"startLine":792,"startCharacter":24,"endLine":798,"endCharacter":8},{"startLine":998,"startCharacter":19,"endLine":1035,"endCharacter":4},{"startLine":1117,"startCharacter":20,"endLine":1154,"endCharacter":4},{"startLine":1303,"startCharacter":56,"endLine":1311,"endCharacter":8},{"startLine":2445,"startCharacter":69,"endLine":2454,"endCharacter":8},{"startLine":328,"startCharacter":24,"endLine":338,"endCharacter":8},{"startLine":1392,"startCharacter":25,"endLine":1401,"endCharacter":8},{"startLine":16,"startCharacter":26,"endLine":22,"endCharacter":8},{"startLine":488,"startCharacter":52,"endLine":496,"endCharacter":8},{"startLine":759,"startCharacter":24,"endLine":765,"endCharacter":8},{"startLine":2191,"startCharacter":27,"endLine":2204,"endCharacter":8},{"startLine":549,"startCharacter":21,"endLine":586,"endCharacter":4},{"startLine":566,"startCharacter":63,"endLine":574,"endCharacter":8},{"startLine":656,"startCharacter":26,"endLine":665,"endCharacter":8},{"startLine":1568,"startCharacter":27,"endLine":1574,"endCharacter":8},{"startLine":2106,"startCharacter":33,"endLine":2317,"endCharacter":4},{"startLine":1774,"startCharacter":27,"endLine":1783,"endCharacter":8},{"startLine":2031,"startCharacter":27,"endLine":2037,"endCharacter":8},{"startLine":2399,"startCharacter":101,"endLine":2407,"endCharacter":8},{"startLine":2409,"startCharacter":81,"endLine":2419,"endCharacter":8},{"startLine":1927,"startCharacter":22,"endLine":1938,"endCharacter":8},{"startLine":117,"startCharacter":58,"endLine":125,"endCharacter":8},{"startLine":411,"startCharacter":70,"endLine":419,"endCharacter":12},{"startLine":1814,"startCharacter":32,"endLine":1827,"endCharacter":4},{"startLine":2071,"startCharacter":31,"endLine":2080,"endCharacter":8},{"startLine":85,"startCharacter":55,"endLine":94,"endCharacter":8},{"startLine":1286,"startCharacter":22,"endLine":1323,"endCharacter":4},{"startLine":1383,"startCharacter":55,"endLine":1390,"endCharacter":8},{"startLine":2017,"startCharacter":30,"endLine":2103,"endCharacter":4},{"startLine":1854,"startCharacter":27,"endLine":1860,"endCharacter":8},{"startLine":353,"startCharacter":23,"endLine":382,"endCharacter":4},{"startLine":472,"startCharacter":25,"endLine":507,"endCharacter":4},{"startLine":498,"startCharacter":54,"endLine":506,"endCharacter":8},{"startLine":646,"startCharacter":56,"endLine":654,"endCharacter":8},{"startLine":1055,"startCharacter":59,"endLine":1063,"endCharacter":8},{"startLine":1104,"startCharacter":23,"endLine":1113,"endCharacter":8},{"startLine":1273,"startCharacter":30,"endLine":1282,"endCharacter":8},{"startLine":2018,"startCharacter":29,"endLine":2029,"endCharacter":8},{"startLine":2505,"startCharacter":59,"endLine":2514,"endCharacter":8},{"startLine":207,"startCharacter":28,"endLine":213,"endCharacter":8},{"startLine":223,"startCharacter":65,"endLine":230,"endCharacter":8},{"startLine":394,"startCharacter":35,"endLine":400,"endCharacter":12},{"startLine":946,"startCharacter":32,"endLine":955,"endCharacter":8},{"startLine":1214,"startCharacter":28,"endLine":1222,"endCharacter":8},{"startLine":2093,"startCharacter":26,"endLine":2102,"endCharacter":8},{"startLine":840,"startCharacter":27,"endLine":846,"endCharacter":8},{"startLine":1086,"startCharacter":29,"endLine":1092,"endCharacter":8},{"startLine":1608,"startCharacter":33,"endLine":1619,"endCharacter":8},{"startLine":98,"startCharacter":20,"endLine":137,"endCharacter":4},{"startLine":100,"startCharacter":27,"endLine":106,"endCharacter":8},{"startLine":590,"startCharacter":31,"endLine":596,"endCharacter":8},{"startLine":1375,"startCharacter":25,"endLine":1381,"endCharacter":8},{"startLine":1886,"startCharacter":30,"endLine":1897,"endCharacter":8},{"startLine":8,"startCharacter":28,"endLine":14,"endCharacter":8},{"startLine":355,"startCharacter":25,"endLine":361,"endCharacter":8},{"startLine":887,"startCharacter":33,"endLine":893,"endCharacter":8},{"startLine":1830,"startCharacter":21,"endLine":1923,"endCharacter":4},{"startLine":1831,"startCharacter":34,"endLine":1842,"endCharacter":8},{"startLine":318,"startCharacter":22,"endLine":350,"endCharacter":4},{"startLine":696,"startCharacter":35,"endLine":705,"endCharacter":8},{"startLine":1544,"startCharacter":60,"endLine":1552,"endCharacter":8},{"startLine":73,"startCharacter":31,"endLine":83,"endCharacter":8},{"startLine":175,"startCharacter":24,"endLine":181,"endCharacter":8},{"startLine":305,"startCharacter":28,"endLine":314,"endCharacter":8},{"startLine":434,"startCharacter":30,"endLine":440,"endCharacter":8},{"startLine":1313,"startCharacter":21,"endLine":1322,"endCharacter":8},{"startLine":24,"startCharacter":34,"endLine":31,"endCharacter":8},{"startLine":244,"startCharacter":31,"endLine":250,"endCharacter":8},{"startLine":1007,"startCharacter":25,"endLine":1013,"endCharacter":8},{"startLine":1015,"startCharacter":59,"endLine":1023,"endCharacter":8},{"startLine":1197,"startCharacter":26,"endLine":1203,"endCharacter":8},{"startLine":1873,"startCharacter":32,"endLine":1884,"endCharacter":8},{"startLine":2305,"startCharacter":33,"endLine":2316,"endCharacter":8},{"startLine":638,"startCharacter":26,"endLine":644,"endCharacter":8},{"startLine":2047,"startCharacter":27,"endLine":2058,"endCharacter":8},{"startLine":2370,"startCharacter":54,"endLine":2376,"endCharacter":8},{"startLine":598,"startCharacter":25,"endLine":604,"endCharacter":8},{"startLine":800,"startCharacter":28,"endLine":806,"endCharacter":8},{"startLine":1183,"startCharacter":34,"endLine":1192,"endCharacter":8},{"startLine":1798,"startCharacter":26,"endLine":1809,"endCharacter":8},{"startLine":669,"startCharacter":27,"endLine":706,"endCharacter":4},{"startLine":1514,"startCharacter":35,"endLine":1523,"endCharacter":8},{"startLine":1644,"startCharacter":34,"endLine":1654,"endCharacter":8},{"startLine":1844,"startCharacter":30,"endLine":1852,"endCharacter":8},{"startLine":2135,"startCharacter":29,"endLine":2148,"endCharacter":8},{"startLine":1094,"startCharacter":54,"endLine":1102,"endCharacter":8},{"startLine":1899,"startCharacter":32,"endLine":1910,"endCharacter":8},{"startLine":519,"startCharacter":25,"endLine":524,"endCharacter":8},{"startLine":2250,"startCharacter":31,"endLine":2261,"endCharacter":8},{"startLine":576,"startCharacter":35,"endLine":585,"endCharacter":8},{"startLine":816,"startCharacter":61,"endLine":824,"endCharacter":8},{"startLine":1247,"startCharacter":20,"endLine":1283,"endCharacter":4},{"startLine":1295,"startCharacter":34,"endLine":1301,"endCharacter":8},{"startLine":1343,"startCharacter":58,"endLine":1351,"endCharacter":8},{"startLine":1679,"startCharacter":31,"endLine":1690,"endCharacter":8},{"startLine":3,"startCharacter":23,"endLine":2516,"endCharacter":0},{"startLine":372,"startCharacter":26,"endLine":381,"endCharacter":8},{"startLine":1956,"startCharacter":20,"endLine":1967,"endCharacter":8},{"startLine":2469,"startCharacter":70,"endLine":2478,"endCharacter":8},{"startLine":2493,"startCharacter":68,"endLine":2502,"endCharacter":8},{"startLine":294,"startCharacter":56,"endLine":303,"endCharacter":8},{"startLine":386,"startCharacter":31,"endLine":392,"endCharacter":12},{"startLine":629,"startCharacter":23,"endLine":666,"endCharacter":4},{"startLine":985,"startCharacter":28,"endLine":994,"endCharacter":8},{"startLine":1607,"startCharacter":27,"endLine":1731,"endCharacter":4},{"startLine":1748,"startCharacter":28,"endLine":1759,"endCharacter":8},{"startLine":2421,"startCharacter":80,"endLine":2431,"endCharacter":8},{"startLine":526,"startCharacter":65,"endLine":534,"endCharacter":8},{"startLine":718,"startCharacter":27,"endLine":724,"endCharacter":8},{"startLine":919,"startCharacter":28,"endLine":925,"endCharacter":8},{"startLine":1422,"startCharacter":56,"endLine":1430,"endCharacter":8},{"startLine":162,"startCharacter":67,"endLine":169,"endCharacter":8},{"startLine":606,"startCharacter":62,"endLine":614,"endCharacter":8},{"startLine":1656,"startCharacter":36,"endLine":1664,"endCharacter":8},{"startLine":1912,"startCharacter":26,"endLine":1922,"endCharacter":8},{"startLine":510,"startCharacter":21,"endLine":546,"endCharacter":4},{"startLine":808,"startCharacter":27,"endLine":814,"endCharacter":8},{"startLine":1567,"startCharacter":23,"endLine":1604,"endCharacter":4},{"startLine":1862,"startCharacter":61,"endLine":1871,"endCharacter":8},{"startLine":866,"startCharacter":27,"endLine":875,"endCharacter":8},{"startLine":1144,"startCharacter":30,"endLine":1153,"endCharacter":8},{"startLine":1174,"startCharacter":63,"endLine":1181,"endCharacter":8},{"startLine":1621,"startCharacter":30,"endLine":1629,"endCharacter":8},{"startLine":1735,"startCharacter":32,"endLine":1746,"endCharacter":8},{"startLine":140,"startCharacter":19,"endLine":170,"endCharacter":4},{"startLine":363,"startCharacter":32,"endLine":370,"endCharacter":8},{"startLine":905,"startCharacter":28,"endLine":914,"endCharacter":8},{"startLine":1446,"startCharacter":29,"endLine":1452,"endCharacter":8},{"startLine":1495,"startCharacter":28,"endLine":1501,"endCharacter":8},{"startLine":2321,"startCharacter":21,"endLine":2515,"endCharacter":4},{"startLine":750,"startCharacter":27,"endLine":787,"endCharacter":4},{"startLine":839,"startCharacter":20,"endLine":876,"endCharacter":4},{"startLine":2082,"startCharacter":35,"endLine":2091,"endCharacter":8},{"startLine":2331,"startCharacter":29,"endLine":2338,"endCharacter":8},{"startLine":473,"startCharacter":23,"endLine":479,"endCharacter":8},{"startLine":767,"startCharacter":59,"endLine":775,"endCharacter":8},{"startLine":1256,"startCharacter":30,"endLine":1261,"endCharacter":8},{"startLine":1287,"startCharacter":23,"endLine":1293,"endCharacter":8},{"startLine":1734,"startCharacter":33,"endLine":1811,"endCharacter":4},{"startLine":2206,"startCharacter":65,"endLine":2218,"endCharacter":8},{"startLine":2323,"startCharacter":33,"endLine":2329,"endCharacter":8},{"startLine":686,"startCharacter":52,"endLine":694,"endCharacter":8},{"startLine":879,"startCharacter":24,"endLine":915,"endCharacter":4},{"startLine":1134,"startCharacter":53,"endLine":1142,"endCharacter":8},{"startLine":1353,"startCharacter":25,"endLine":1362,"endCharacter":8},{"startLine":6,"startCharacter":28,"endLine":45,"endCharacter":4},{"startLine":1503,"startCharacter":26,"endLine":1512,"endCharacter":8},{"startLine":1527,"startCharacter":22,"endLine":1564,"endCharacter":4},{"startLine":2039,"startCharacter":37,"endLine":2045,"endCharacter":8},{"startLine":2235,"startCharacter":31,"endLine":2247,"endCharacter":8},{"startLine":2277,"startCharacter":33,"endLine":2289,"endCharacter":8},{"startLine":58,"startCharacter":26,"endLine":63,"endCharacter":8},{"startLine":152,"startCharacter":59,"endLine":160,"endCharacter":8},{"startLine":1414,"startCharacter":32,"endLine":1420,"endCharacter":8},{"startLine":1576,"startCharacter":29,"endLine":1582,"endCharacter":8},{"startLine":1926,"startCharacter":31,"endLine":2014,"endCharacter":4},{"startLine":2150,"startCharacter":32,"endLine":2161,"endCharacter":8},{"startLine":2349,"startCharacter":34,"endLine":2357,"endCharacter":8},{"startLine":33,"startCharacter":22,"endLine":44,"endCharacter":8},{"startLine":726,"startCharacter":31,"endLine":735,"endCharacter":8},{"startLine":895,"startCharacter":62,"endLine":903,"endCharacter":8},{"startLine":1234,"startCharacter":27,"endLine":1243,"endCharacter":8},{"startLine":1785,"startCharacter":24,"endLine":1796,"endCharacter":8},{"startLine":1969,"startCharacter":64,"endLine":1978,"endCharacter":8},{"startLine":2108,"startCharacter":33,"endLine":2120,"endCharacter":8},{"startLine":5,"startCharacter":1,"endLine":5,"endCharacter":33,"kind":"comment"},{"startLine":47,"startCharacter":1,"endLine":47,"endCharacter":35,"kind":"comment"},{"startLine":97,"startCharacter":1,"endLine":97,"endCharacter":25,"kind":"comment"},{"startLine":139,"startCharacter":1,"endLine":139,"endCharacter":26,"kind":"comment"},{"startLine":172,"startCharacter":1,"endLine":172,"endCharacter":19,"kind":"comment"},{"startLine":204,"startCharacter":1,"endLine":204,"endCharacter":27,"kind":"comment"},{"startLine":233,"startCharacter":1,"endLine":233,"endCharacter":32,"kind":"comment"},{"startLine":275,"startCharacter":1,"endLine":275,"endCharacter":28,"kind":"comment"},{"startLine":317,"startCharacter":1,"endLine":317,"endCharacter":19,"kind":"comment"},{"startLine":352,"startCharacter":1,"endLine":352,"endCharacter":31,"kind":"comment"},{"startLine":384,"startCharacter":1,"endLine":384,"endCharacter":24,"kind":"comment"},{"startLine":432,"startCharacter":1,"endLine":432,"endCharacter":19,"kind":"comment"},{"startLine":471,"startCharacter":1,"endLine":471,"endCharacter":20,"kind":"comment"},{"startLine":509,"startCharacter":1,"endLine":509,"endCharacter":21,"kind":"comment"},{"startLine":548,"startCharacter":1,"endLine":548,"endCharacter":16,"kind":"comment"},{"startLine":588,"startCharacter":1,"endLine":588,"endCharacter":21,"kind":"comment"},{"startLine":628,"startCharacter":1,"endLine":628,"endCharacter":13,"kind":"comment"},{"startLine":668,"startCharacter":1,"endLine":668,"endCharacter":17,"kind":"comment"},{"startLine":708,"startCharacter":1,"endLine":708,"endCharacter":16,"kind":"comment"},{"startLine":749,"startCharacter":1,"endLine":749,"endCharacter":31,"kind":"comment"},{"startLine":790,"startCharacter":1,"endLine":790,"endCharacter":33,"kind":"comment"},{"startLine":838,"startCharacter":1,"endLine":838,"endCharacter":20,"kind":"comment"},{"startLine":878,"startCharacter":1,"endLine":878,"endCharacter":25,"kind":"comment"},{"startLine":917,"startCharacter":1,"endLine":917,"endCharacter":26,"kind":"comment"},{"startLine":958,"startCharacter":1,"endLine":958,"endCharacter":18,"kind":"comment"},{"startLine":997,"startCharacter":1,"endLine":997,"endCharacter":19,"kind":"comment"},{"startLine":1037,"startCharacter":1,"endLine":1037,"endCharacter":17,"kind":"comment"},{"startLine":1076,"startCharacter":1,"endLine":1076,"endCharacter":20,"kind":"comment"},{"startLine":1116,"startCharacter":1,"endLine":1116,"endCharacter":19,"kind":"comment"},{"startLine":1156,"startCharacter":1,"endLine":1156,"endCharacter":19,"kind":"comment"},{"startLine":1195,"startCharacter":1,"endLine":1195,"endCharacter":30,"kind":"comment"},{"startLine":1216,"startCharacter":1,"endLine":1216,"endCharacter":10,"kind":"comment"},{"startLine":1218,"startCharacter":1,"endLine":1218,"endCharacter":10,"kind":"comment"},{"startLine":1246,"startCharacter":1,"endLine":1246,"endCharacter":15,"kind":"comment"},{"startLine":1285,"startCharacter":1,"endLine":1285,"endCharacter":22,"kind":"comment"},{"startLine":1325,"startCharacter":1,"endLine":1325,"endCharacter":23,"kind":"comment"},{"startLine":1365,"startCharacter":1,"endLine":1365,"endCharacter":13,"kind":"comment"},{"startLine":1404,"startCharacter":1,"endLine":1404,"endCharacter":18,"kind":"comment"},{"startLine":1444,"startCharacter":1,"endLine":1444,"endCharacter":17,"kind":"comment"},{"startLine":1485,"startCharacter":1,"endLine":1485,"endCharacter":15,"kind":"comment"},{"startLine":1526,"startCharacter":1,"endLine":1526,"endCharacter":17,"kind":"comment"},{"startLine":1566,"startCharacter":1,"endLine":1566,"endCharacter":19,"kind":"comment"},{"startLine":1606,"startCharacter":1,"endLine":1606,"endCharacter":37,"kind":"comment"},{"startLine":1660,"startCharacter":1,"endLine":1660,"endCharacter":10,"kind":"comment"},{"startLine":1733,"startCharacter":1,"endLine":1733,"endCharacter":33,"kind":"comment"},{"startLine":1813,"startCharacter":1,"endLine":1813,"endCharacter":27,"kind":"comment"},{"startLine":1829,"startCharacter":1,"endLine":1829,"endCharacter":27,"kind":"comment"},{"startLine":1925,"startCharacter":1,"endLine":1925,"endCharacter":28,"kind":"comment"},{"startLine":2016,"startCharacter":1,"endLine":2016,"endCharacter":39,"kind":"comment"},{"startLine":2105,"startCharacter":1,"endLine":2105,"endCharacter":42,"kind":"comment"},{"startLine":2107,"startCharacter":1,"endLine":2107,"endCharacter":51,"kind":"comment"},{"startLine":2109,"startCharacter":1,"endLine":2109,"endCharacter":10,"kind":"comment"},{"startLine":2111,"startCharacter":1,"endLine":2111,"endCharacter":10,"kind":"comment"},{"startLine":2117,"startCharacter":1,"endLine":2117,"endCharacter":17,"kind":"comment"},{"startLine":2125,"startCharacter":1,"endLine":2125,"endCharacter":10,"kind":"comment"},{"startLine":2127,"startCharacter":1,"endLine":2127,"endCharacter":10,"kind":"comment"},{"startLine":2134,"startCharacter":1,"endLine":2134,"endCharacter":32,"kind":"comment"},{"startLine":2173,"startCharacter":1,"endLine":2173,"endCharacter":34,"kind":"comment"},{"startLine":2175,"startCharacter":1,"endLine":2175,"endCharacter":10,"kind":"comment"},{"startLine":2178,"startCharacter":1,"endLine":2178,"endCharacter":10,"kind":"comment"},{"startLine":2183,"startCharacter":1,"endLine":2183,"endCharacter":10,"kind":"comment"},{"startLine":2185,"startCharacter":1,"endLine":2185,"endCharacter":10,"kind":"comment"},{"startLine":2198,"startCharacter":1,"endLine":2198,"endCharacter":10,"kind":"comment"},{"startLine":2220,"startCharacter":1,"endLine":2220,"endCharacter":46,"kind":"comment"},{"startLine":2249,"startCharacter":1,"endLine":2249,"endCharacter":33,"kind":"comment"},{"startLine":2276,"startCharacter":1,"endLine":2276,"endCharacter":37,"kind":"comment"},{"startLine":2284,"startCharacter":1,"endLine":2284,"endCharacter":10,"kind":"comment"},{"startLine":2304,"startCharacter":1,"endLine":2304,"endCharacter":44,"kind":"comment"},{"startLine":2320,"startCharacter":1,"endLine":2320,"endCharacter":38,"kind":"comment"},{"startLine":2322,"startCharacter":1,"endLine":2322,"endCharacter":28,"kind":"comment"},{"startLine":2332,"startCharacter":1,"endLine":2332,"endCharacter":10,"kind":"comment"},{"startLine":2343,"startCharacter":1,"endLine":2343,"endCharacter":10,"kind":"comment"},{"startLine":2351,"startCharacter":1,"endLine":2351,"endCharacter":10,"kind":"comment"},{"startLine":2355,"startCharacter":1,"endLine":2355,"endCharacter":10,"kind":"comment"},{"startLine":2359,"startCharacter":1,"endLine":2359,"endCharacter":36,"kind":"comment"},{"startLine":2373,"startCharacter":1,"endLine":2373,"endCharacter":10,"kind":"comment"},{"startLine":2378,"startCharacter":1,"endLine":2378,"endCharacter":24,"kind":"comment"},{"startLine":2398,"startCharacter":1,"endLine":2398,"endCharacter":26,"kind":"comment"},{"startLine":2433,"startCharacter":1,"endLine":2433,"endCharacter":34,"kind":"comment"},{"startLine":2456,"startCharacter":1,"endLine":2456,"endCharacter":23,"kind":"comment"},{"startLine":2468,"startCharacter":1,"endLine":2468,"endCharacter":26,"kind":"comment"},{"startLine":2480,"startCharacter":1,"endLine":2480,"endCharacter":46,"kind":"comment"},{"startLine":2492,"startCharacter":1,"endLine":2492,"endCharacter":18,"kind":"comment"},{"startLine":2504,"startCharacter":1,"endLine":2504,"endCharacter":32,"kind":"comment"}]}
2025/01/13 14:35:41 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:35:41 util.go:36: Trace | Read Content-Length: 177 from Content-Length: 177
2025/01/13 14:35:41 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf"}}}
2025/01/13 14:35:41 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:35:41 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10","result":{"data":[3,0,7,11,0,3,4,7,11,0,2,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,4,11,0,8,8,4,11,0,1,12,3,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,4,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,4,11,0,1,12,3,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,1,12,3,11,0,1,12,3,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,12,4,11,0,8,12,4,11,0,8,12,6,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,1,16,4,11,0,3,12,6,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,5,12,6,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,1,16,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,8,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,7,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,1,12,3,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,1,12,3,11,0,8,8,6,11,0,1,12,3,11,0,2,12,3,11,0,2,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,7,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,8,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,13,8,4,11,0,1,12,3,11,0,1,12,3,11,0,8,8,4,11,0,13,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,1,12,4,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,2,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,2,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,8,4,7,11,0,1,8,4,11,0,13,8,4,11,0,13,8,4,11,0,13,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,8,4,7,11,0,1,8,4,11,0,15,4,7,11,0,1,8,4,11,0,13,8,4,11,0,1,12,3,11,0,1,12,3,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,13,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,1,8,4,11,0,13,8,4,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,7,4,7,11,0,2,8,6,11,0,2,12,3,11,0,2,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,2,12,4,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,2,12,3,11,0,2,12,3,11,0,1,12,3,11,0,1,12,4,11,0,1,12,4,11,0,4,8,4,11,0,1,12,3,11,0,1,12,3,11,0,13,8,4,11,0,13,8,4,11,0,1,12,3,11,0,1,12,3,11,0,9,8,6,11,0,2,12,3,11,0,1,12,3,11,0,2,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,2,12,3,11,0,2,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,2,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,2,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,8,4,7,11,0,3,12,4,11,0,1,12,4,11,0,1,12,4,11,0,1,12,4,11,0,1,12,4,11,0,5,12,4,11,0,1,12,4,11,0,1,12,4,11,0,1,12,4,11,0,1,12,4,11,0,4,12,4,11,0,1,12,4,11,0,2,12,4,11,0,1,12,4,11,0,1,12,4,11,0,4,12,4,11,0,2,12,4,11,0,1,12,4,11,0,1,12,4,11,0,2,12,4,11,0,4,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,4,11,0,3,8,6,11,0,1,12,3,11,0,1,12,3,11,0,2,12,3,11,0,1,12,3,11,0,4,8,4,11,0,1,12,3,11,0,1,12,3,11,0,8,8,4,11,0,1,12,3,11,0,1,12,3,11,0,8,8,6,11,0,1,12,3,11,0,1,12,3,11,0,2,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,5,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,6,8,6,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0,1,12,3,11,0]}}
2025/01/13 14:38:18 util.go:36: Trace | Read Content-Length: 155 from Content-Length: 155
2025/01/13 14:38:18 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:38:18 server.go:109: INFO  | Handle Method: textDocument/didClose 
2025/01/13 14:38:19 util.go:36: Trace | Read Content-Length: 430 from Content-Length: 430
2025/01/13 14:38:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand.klein {\n        struct Tetrapack {\n            arg int i;\n\n        }\n\n        entity Apfelsaft extends Tetrapack{\n            identifier(i);\n        }\n\n}"}}}
2025/01/13 14:38:19 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:38:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:38:19 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:38:20 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:38:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"12","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:38:20 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:38:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"12","result":{"data":[3,0,7,11,0,1,8,6,11,0,1,12,3,11,0,4,8,6,11,0]}}
2025/01/13 14:38:20 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:38:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"11","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:38:20 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:38:20 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:38:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"11","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:38:20 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:38:21 util.go:36: Trace | Read Content-Length: 61 from Content-Length: 61
2025/01/13 14:38:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"13","method":"shutdown","params":null}
2025/01/13 14:38:21 server.go:93: INFO  | Received Shutdown Request
2025/01/13 14:38:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"13"}
2025/01/13 14:38:21 server.go:80: INFO  | Server Closed
2025/01/13 14:38:21 main.go:32: Server Shutdown
2025/01/13 14:38:22 fileService.go:35: Trace | FileChangeListeners: [0xc0000be0d8]
2025/01/13 14:38:22 util.go:36: Trace | Read Content-Length: 3706 from Content-Length: 3706
2025/01/13 14:38:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":193851,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 14:38:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true,"semanticTokensProvider":{"legend":{"tokenTypes":["namespace","type","enum","interface","struct","parameter","variable","property","enumMember","function","comment","keyword","modifier"],"tokenModifiers":["declaration","definition","readonly","deprecated","documentation"]},"full":true}},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 14:38:22 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/13 14:38:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/13 14:38:22 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 14:38:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 14:38:22 server.go:106: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 14:38:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 14:38:22 util.go:36: Trace | Read Content-Length: 1166 from Content-Length: 1166
2025/01/13 14:38:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand {\n    // Comment over other\n    package other {\n\n        struct Test{\n\n\n        }\n\n        // Kommentar von Ort\n        enum Ort {\n\n            VOR_HAUS(_);\n        }\n\n        //Kommentar über Person\n        entity Person  {\n            arg int i;\n            arg date d;\n            arg string me;\n            identifier(i, me);\n        }\n\n        interface Intes  {\n\n        }\n\n\n\n    }\n\n\n   package rekur {\n        // Das ist das Struct One\n        struct One  {\n        }\n\n\n        entity OneE {\n            // Kommentar\n            // Hallo\n            arg int i;\n            arg string me;\n            // Kommentar von One\n            ref One o;\n           identifier(i, me, o);\n        }\n        entity TwoE extends .OneE {\n           identifier(i, me);\n        }\n    }\n    package grund {\n         interface IGrund {\n\n         }\n    }\n}"}}}
2025/01/13 14:38:22 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:38:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:38:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 116 101 115 116 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:38:22 util.go:36: Trace | Read Content-Length: 430 from Content-Length: 430
2025/01/13 14:38:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand.klein {\n        struct Tetrapack {\n            arg int i;\n\n        }\n\n        entity Apfelsaft extends Tetrapack{\n            identifier(i);\n        }\n\n}"}}}
2025/01/13 14:38:22 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:38:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:38:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:38:22 util.go:36: Trace | Read Content-Length: 68714 from Content-Length: 68714
2025/01/13 14:38:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"smart_city_management\" version 1.0.0\n\npackage de.smart.city {\n\n    // Core infrastructure management\n    package infrastructure {\n\n        struct GeoLocation {\n            arg double latitude;\n            arg double longitude;\n            arg double altitude;\n            arg string addressString;\n            func double calculateDistance(GeoLocation other);\n        }\n\n        enum AssetStatus {\n            OPERATIONAL(_);\n            MAINTENANCE_REQUIRED(_);\n            UNDER_REPAIR(_);\n            DECOMMISSIONED(_);\n            CRITICAL(_);\n        }\n\n        enum MaintenancePriority {\n            arg int level;\n            arg string description;\n            EMERGENCY(_, 1, \"Immediate action required\");\n            HIGH(_, 2, \"Address within 24 hours\");\n            MEDIUM(_, 3, \"Address within 1 week\");\n            LOW(_, 4, \"Schedule during routine maintenance\");\n        }\n\n        entity Asset {\n            arg string assetId;\n            arg string name;\n            ref .GeoLocation location;\n            ref .AssetStatus status;\n            arg date installationDate;\n            arg date lastMaintenanceDate;\n            arg double acquisitionCost;\n            arg int expectedLifespanYears;\n\n            identifier(assetId);\n        }\n    }\n\n    // Transportation system management\n    package transportation {\n\n        enum VehicleType {\n            BUS(_);\n            TRAM(_);\n            SUBWAY(_);\n            MUNICIPAL_VEHICLE(_);\n            EMERGENCY_VEHICLE(_);\n        }\n\n        enum RouteStatus {\n            ACTIVE(_);\n            SUSPENDED(_);\n            PLANNED(_);\n            CANCELED(_);\n        }\n\n        struct RouteSegment {\n            ref ..infrastructure.GeoLocation startPoint;\n            ref ..infrastructure.GeoLocation endPoint;\n            arg double distance;\n            arg int estimatedTimeMinutes;\n            func double calculateCongestion();\n        }\n\n        entity TransportRoute {\n            arg string routeId;\n            arg string routeName;\n            ref .RouteStatus status;\n            ref .RouteSegment[] segments;\n            arg datetime firstDepartureTime;\n            arg datetime lastDepartureTime;\n            arg int frequencyMinutes;\n\n            identifier(routeId);\n        }\n\n        entity Vehicle extends ..infrastructure.Asset {\n            ref .VehicleType type;\n            arg string registrationNumber;\n            arg int capacity;\n            arg double currentFuelLevel;\n            arg int currentPassengerCount;\n            ref .TransportRoute currentRoute;\n\n            identifier(registrationNumber);\n        }\n    }\n\n    // Energy grid management\n    package energy {\n\n        enum EnergySource {\n            SOLAR(_);\n            WIND(_);\n            HYDRO(_);\n            BIOMASS(_);\n            GRID(_);\n        }\n\n        enum ConsumptionPattern {\n            arg string pattern;\n            arg double baselineKwh;\n            RESIDENTIAL(1, \"Home usage\", 10.0);\n            COMMERCIAL(2, \"Business usage\", 50.0);\n            INDUSTRIAL(3, \"Factory usage\", 200.0);\n            PUBLIC(4, \"Municipal usage\", 30.0);\n        }\n\n        entity PowerPlant extends ..infrastructure.Asset {\n            ref .EnergySource source;\n            arg double capacity;\n            arg double currentOutput;\n            arg double efficiency;\n            arg boolean isBackupSource;\n\n            identifier(assetId);\n        }\n\n        entity SmartMeter {\n            arg string meterId;\n            ref .ConsumptionPattern pattern;\n            arg double currentReading;\n            arg double peakDemand;\n            arg datetime lastReadingTime;\n            arg boolean isOnline;\n\n            identifier(meterId);\n        }\n    }\n\n    // Water management system\n    package water {\n\n        enum WaterQuality {\n            arg int level;\n            arg string description;\n            EXCELLENT(_, 1, \"Exceeds standards\");\n            GOOD(_, 2, \"Meets standards\");\n            FAIR(_, 3, \"Requires monitoring\");\n            POOR(_, 4, \"Requires action\");\n            CRITICAL(_, 5, \"Immediate action needed\");\n        }\n\n        entity WaterSource extends ..infrastructure.Asset {\n            arg double capacity;\n            arg double currentLevel;\n            ref .WaterQuality quality;\n            arg double flowRate;\n            arg boolean isActive;\n\n            identifier(assetId);\n        }\n\n        entity WaterTreatmentPlant extends ..infrastructure.Asset {\n            arg double processingCapacity;\n            arg double currentThroughput;\n            arg int treatmentStages;\n            arg boolean isOperating;\n\n            identifier(assetId);\n        }\n    }\n\n    // Waste management\n    package waste {\n\n        enum WasteType {\n            ORGANIC(_);\n            RECYCLABLE(_);\n            HAZARDOUS(_);\n            ELECTRONIC(_);\n            CONSTRUCTION(_);\n        }\n\n        entity WasteCollection {\n            arg string collectionId;\n            ref .WasteType type;\n            ref ..infrastructure.GeoLocation location;\n            arg datetime scheduledTime;\n            arg double estimatedVolume;\n            arg boolean isCompleted;\n\n            identifier(collectionId);\n        }\n\n        entity RecyclingFacility extends ..infrastructure.Asset {\n            ref .WasteType[] acceptedTypes;\n            arg double processingCapacity;\n            arg double currentStorage;\n            arg boolean isAcceptingWaste;\n\n            identifier(assetId);\n        }\n    }\n\n    // Environmental monitoring\n    package environment {\n\n        enum PollutantType {\n            CO_TWO(_);\n            NOX(_);\n            PM_TEN(_);\n            PM_TWENTY_FIVE(_);\n            SO_TWO(_);\n        }\n\n        struct AirQualityReading {\n            ref .PollutantType pollutant;\n            arg double concentration;\n            arg datetime timestamp;\n            arg boolean exceedsLimit;\n            func boolean requiresAlert();\n        }\n\n        entity MonitoringStation extends ..infrastructure.Asset {\n            arg string stationId;\n            ref .AirQualityReading[] readings;\n            arg boolean isCalibrated;\n            arg date lastCalibrationDate;\n\n            identifier(stationId);\n        }\n    }\n\n    // Emergency services management\n    package emergency {\n\n        enum EmergencyType {\n            FIRE(_);\n            MEDICAL(_);\n            POLICE(_);\n            DISASTER(_);\n            TRAFFIC(_);\n        }\n\n        enum ResponsePriority {\n            arg int code;\n            CRITICAL(1, 1);\n            HIGH(2, 2);\n            MEDIUM(3, 3);\n            LOW(4, 4);\n        }\n\n        entity EmergencyIncident {\n            arg string incidentId;\n            ref .EmergencyType type;\n            ref .ResponsePriority priority;\n            ref ..infrastructure.GeoLocation location;\n            arg datetime reportedTime;\n            arg datetime responseTime;\n            arg boolean isActive;\n\n            identifier(incidentId);\n        }\n\n        entity EmergencyTeam {\n            arg string teamId;\n            ref .EmergencyType specialty;\n            arg int memberCount;\n            ref ..infrastructure.GeoLocation currentLocation;\n            arg boolean isAvailable;\n\n            identifier(teamId);\n        }\n    }\n\n    // Smart building management\n    package buildings {\n\n        enum BuildingType {\n            RESIDENTIAL(_);\n            COMMERCIAL(_);\n            INDUSTRIAL(_);\n            GOVERNMENT(_);\n            MIXED_USE(_);\n        }\n\n        enum SecurityLevel {\n            arg int clearance;\n            HIGH(1, 1);\n            MEDIUM(2, 2);\n            LOW(3, 3);\n            PUBLIC(4, 4);\n        }\n\n        entity Building extends ..infrastructure.Asset {\n            ref .BuildingType type;\n            arg int floors;\n            arg double totalArea;\n            arg int occupancy;\n            ref .SecurityLevel securityLevel;\n            arg boolean isSmartEnabled;\n\n            identifier(assetId);\n        }\n\n        entity SmartDevice {\n            arg string deviceId;\n            ref Building building;\n            arg string deviceType;\n            arg boolean isOnline;\n            arg datetime lastPing;\n            arg string firmwareVersion;\n\n            identifier(deviceId);\n        }\n    }\n\n    // Citizen services\n    package citizens {\n\n        enum ServiceType {\n            ADMINISTRATIVE(_);\n            HEALTH(_);\n            EDUCATION(_);\n            RECREATION(_);\n            SOCIAL(_);\n        }\n\n        entity Citizen {\n            arg string citizenId;\n            arg string firstName;\n            arg string lastName;\n            ref ..infrastructure.GeoLocation residence;\n            arg date dateOfBirth;\n            arg string email;\n            arg string phone;\n\n            identifier(citizenId);\n        }\n\n        entity ServiceRequest {\n            arg string requestId;\n            ref .ServiceType type;\n            ref Citizen requester;\n            arg datetime submissionTime;\n            arg string status;\n            arg string description;\n\n            identifier(requestId);\n        }\n    }\n\n    // Data analytics and reporting\n    package analytics {\n\n        enum MetricType {\n            ENVIRONMENTAL(_);\n            TRAFFIC(_);\n            ENERGY(_);\n            SAFETY(_);\n            EFFICIENCY(_);\n        }\n\n        struct AnalyticsReport {\n            arg string reportId;\n            ref .MetricType type;\n            arg datetime generationTime;\n            arg string format;\n            arg boolean isPublic;\n            func void generatePDF();\n        }\n\n        entity DataPoint {\n            arg string dataId;\n            ref .MetricType type;\n            arg double value;\n            arg datetime timestamp;\n            arg string source;\n            arg boolean isVerified;\n\n            identifier(dataId);\n        }\n    }\n\n     // Healthcare management\n    package healthcare {\n            enum FacilityType {\n                HOSPITAL(_);\n                CLINIC(_);\n                PHARMACY(_);\n                LABORATORY(_);\n                NURSING_HOME(_);\n            }\n\n            enum MedicalSpecialty {\n                GENERAL_MEDICINE(_);\n                EMERGENCY(_);\n                PEDIATRICS(_);\n                SURGERY(_);\n                CARDIOLOGY(_);\n            }\n\n            struct PatientHistory {\n                arg string patientId;\n                arg datetime visitDate;\n                arg string diagnosis;\n                arg string treatment;\n                arg string notes;\n                func boolean isUrgent();\n            }\n\n            entity HealthcareFacility extends ..infrastructure.Asset {\n                ref .FacilityType type;\n                arg int bedCapacity;\n                arg int currentOccupancy;\n                arg boolean hasEmergencyUnit;\n                ref .MedicalSpecialty[] specialties;\n\n                identifier(assetId);\n            }\n\n            entity MedicalEquipment extends ..infrastructure.Asset {\n                arg string equipmentType;\n                arg string manufacturer;\n                arg date warrantyExpiry;\n                arg int hoursInUse;\n                arg boolean requiresCalibration;\n\n                identifier(assetId);\n            }\n        }\n\n    // Education system\n    package education {\n        enum InstitutionType {\n            PRIMARY_SCHOOL(_);\n            SECONDARY_SCHOOL(_);\n            UNIVERSITY(_);\n            VOCATIONAL(_);\n            LIBRARY(_);\n        }\n\n        enum CourseLevel {\n            BEGINNER(_);\n            INTERMEDIATE(_);\n            ADVANCED(_);\n            EXPERT(_);\n        }\n\n        entity EducationalInstitution extends ..infrastructure.Asset {\n            ref .InstitutionType type;\n            arg int studentCapacity;\n            arg int staffCount;\n            arg boolean isPublic;\n            arg string accreditationStatus;\n\n            identifier(assetId);\n        }\n\n        entity Course {\n            arg string courseId;\n            ref .CourseLevel level;\n            arg string title;\n            arg int credits;\n            arg int maxEnrollment;\n            arg boolean isOnline;\n\n            identifier(courseId);\n        }\n    }\n\n    // Smart agriculture\n    package agriculture {\n        enum CropType {\n            GRAIN(_);\n            VEGETABLE(_);\n            FRUIT(_);\n            FLOWER(_);\n            HERB(_);\n        }\n\n        enum IrrigationType {\n            DRIP(_);\n            SPRINKLER(_);\n            FLOOD(_);\n            MANUAL(_);\n        }\n\n        entity Farm extends ..infrastructure.Asset {\n            ref .CropType[] crops;\n            arg double area;\n            ref .IrrigationType irrigationType;\n            arg boolean isOrganic;\n            arg date lastHarvestDate;\n\n            identifier(assetId);\n        }\n\n        entity Sensor extends ..infrastructure.Asset {\n            arg string sensorType;\n            arg double readingValue;\n            arg string unit;\n            arg datetime lastReading;\n            arg boolean needsCalibration;\n\n            identifier(assetId);\n        }\n    }\n\n    // Tourism management\n    package tourism {\n        enum AttractionType {\n            HISTORICAL(_);\n            CULTURAL(_);\n            NATURAL(_);\n            RECREATIONAL(_);\n            COMMERCIAL(_);\n        }\n\n        enum SeasonType {\n            PEAK(_);\n            SHOULDER(_);\n            OFF_PEAK(_);\n            SPECIAL(_);\n        }\n\n        entity TouristAttraction extends ..infrastructure.Asset {\n            ref .AttractionType type;\n            arg int dailyVisitorCapacity;\n            arg double entryFee;\n            arg boolean isAccessible;\n            arg datetime[] openingHours;\n\n            identifier(assetId);\n        }\n\n        entity Event {\n            arg string eventId;\n            ref .SeasonType season;\n            arg string name;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg int expectedAttendance;\n\n            identifier(eventId);\n        }\n    }\n\n    // Smart parking\n    package parking {\n        enum ParkingType {\n            STREET(_);\n            GARAGE(_);\n            LOT(_);\n            PRIVATE(_);\n            SPECIAL(_);\n        }\n\n        enum VehicleSize {\n            COMPACT(_);\n            STANDARD(_);\n            LARGE(_);\n            MOTORCYCLE(_);\n            HANDICAP(_);\n        }\n\n        entity ParkingFacility extends ..infrastructure.Asset {\n            ref .ParkingType type;\n            arg int totalSpaces;\n            arg int availableSpaces;\n            arg double hourlyRate;\n            arg boolean hasChargingStations;\n\n            identifier(assetId);\n        }\n\n        entity ParkingTransaction {\n            arg string transactionId;\n            ref .VehicleSize vehicleSize;\n            arg datetime entryTime;\n            arg datetime exitTime;\n            arg double amount;\n            arg boolean isPaid;\n\n            identifier(transactionId);\n        }\n    }\n\n    // Weather monitoring\n    package weather {\n        enum WeatherCondition {\n            CLEAR(_);\n            CLOUDY(_);\n            RAIN(_);\n            SNOW(_);\n            STORM(_);\n        }\n\n        enum AlertLevel {\n            arg string description;\n            SEVERE(1, \"Immediate action required\");\n            WARNING(2, \"Be prepared\");\n            WATCH(3, \"Be aware\");\n            ADVISORY(4, \"For information\");\n        }\n\n        entity WeatherStation extends ..infrastructure.Asset {\n            arg double temperature;\n            arg double humidity;\n            arg double windSpeed;\n            arg double precipitation;\n            ref .WeatherCondition condition;\n\n            identifier(assetId);\n        }\n\n        entity WeatherAlert {\n            arg string alertId;\n            ref .AlertLevel level;\n            arg string message;\n            arg datetime issueTime;\n            arg datetime expiryTime;\n            arg boolean isActive;\n\n            identifier(alertId);\n        }\n    }\n\n    // Smart grid\n    package smartgrid {\n        enum GridComponent {\n            TRANSFORMER(_);\n            SUBSTATION(_);\n            SWITCHGEAR(_);\n            GENERATOR(_);\n            STORAGE(_);\n        }\n\n        enum LoadProfile {\n            arg double baseLoad;\n            RESIDENTIAL(1, 5.0);\n            COMMERCIAL(2, 20.0);\n            INDUSTRIAL(3, 100.0);\n            MUNICIPAL(4, 50.0);\n        }\n\n        entity GridNode extends ..infrastructure.Asset {\n            ref .GridComponent type;\n            arg double voltage;\n            arg double current;\n            ref .LoadProfile profile;\n            arg boolean isRedundant;\n\n            identifier(assetId);\n        }\n\n        entity PowerFlow {\n            arg string flowId;\n            ref GridNode source;\n            ref GridNode destination;\n            arg double amount;\n            arg datetime timestamp;\n            arg boolean isStable;\n\n            identifier(flowId);\n        }\n    }\n\n    // Urban planning\n    package urbanplanning {\n        enum ZoneType {\n            RESIDENTIAL(_);\n            COMMERCIAL(_);\n            INDUSTRIAL(_);\n            MIXED(_);\n            GREEN_SPACE(_);\n        }\n\n        enum DevelopmentStatus {\n            PROPOSED(_);\n            APPROVED(_);\n            UNDER_CONSTRUCTION(_);\n            COMPLETED(_);\n            SUSPENDED(_);\n        }\n\n        entity Zone extends ..infrastructure.Asset {\n            ref .ZoneType type;\n            arg double area;\n            arg double maxDensity;\n            arg int heightLimit;\n            arg boolean isHistorical;\n\n            identifier(assetId);\n        }\n\n        entity DevelopmentProject {\n            arg string projectId;\n            ref .DevelopmentStatus status;\n            arg string description;\n            arg date startDate;\n            arg date completionDate;\n            arg double budget;\n\n            identifier(projectId);\n        }\n    }\n\n    // Public safety\n    package safety {\n        enum IncidentType {\n            CRIME(_);\n            ACCIDENT(_);\n            FIRE(_);\n            MEDICAL(_);\n            INFRASTRUCTURE(_);\n        }\n\n        enum ResponseUnit {\n            POLICE(_);\n            FIRE(_);\n            AMBULANCE(_);\n            HAZMAT(_);\n            RESCUE(_);\n        }\n\n        entity SafetyIncident {\n            arg string incidentId;\n            ref .IncidentType type;\n            arg datetime reportTime;\n            arg string description;\n            arg boolean requiresEvacuation;\n            ref .ResponseUnit[] requiredUnits;\n\n            identifier(incidentId);\n        }\n\n        entity Evacuation {\n            arg string evacuationId;\n            ref SafetyIncident incident;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg int affectedPopulation;\n            arg boolean isCompleted;\n\n            identifier(evacuationId);\n        }\n    }\n\n    // Communication infrastructure\n    package communication {\n        enum NetworkType {\n            FIBER(_);\n            FIVE_G(_);\n            FOUR_G(_);\n            WIFI(_);\n            EMERGENCY(_);\n        }\n\n        enum Bandwidth {\n            arg int speed;\n            LOW(1, 10);\n            MEDIUM(2, 100);\n            HIGH(3, 1000);\n            ULTRA(4, 10000);\n        }\n\n        entity NetworkNode extends ..infrastructure.Asset {\n            ref .NetworkType type;\n            ref .Bandwidth bandwidth;\n            arg int connectedDevices;\n            arg double uptime;\n            arg boolean isRedundant;\n\n            identifier(assetId);\n        }\n\n        entity DataTransfer {\n            arg string transferId;\n            ref NetworkNode source;\n            ref NetworkNode destination;\n            arg double amount;\n            arg datetime timestamp;\n            arg boolean isEncrypted;\n\n            identifier(transferId);\n        }\n    }\n\n\n    // Cultural facilities management\n    package culture {\n        enum VenueType {\n            MUSEUM(_);\n            THEATER(_);\n            CONCERT_HALL(_);\n            ART_GALLERY(_);\n            AMPHITHEATER(_);\n        }\n\n        enum EventCategory {\n            EXHIBITION(_);\n            PERFORMANCE(_);\n            WORKSHOP(_);\n            SCREENING(_);\n            LECTURE(_);\n        }\n\n        struct TicketInfo {\n            arg double basePrice;\n            arg double discount;\n            arg int availableSeats;\n            arg boolean isRefundable;\n            func double calculateFinalPrice();\n        }\n\n        entity CulturalVenue extends ..infrastructure.Asset {\n            ref .VenueType type;\n            arg int capacity;\n            arg boolean hasAccessibility;\n            arg string[] facilities;\n            arg datetime[] operatingHours;\n\n            identifier(assetId);\n        }\n\n        entity CulturalEvent {\n            arg string eventId;\n            ref .EventCategory category;\n            ref .TicketInfo ticketing;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string curator;\n\n            identifier(eventId);\n        }\n    }\n\n    // Sports facilities\n    package sports {\n        enum FacilityType {\n            STADIUM(_);\n            GYMNASIUM(_);\n            POOL(_);\n            COURT(_);\n            FIELD(_);\n        }\n\n        enum SportType {\n            FOOTBALL(_);\n            BASKETBALL(_);\n            SWIMMING(_);\n            TENNIS(_);\n            ATHLETICS(_);\n        }\n\n        entity SportsFacility extends ..infrastructure.Asset {\n            ref .FacilityType type;\n            ref .SportType[] supportedSports;\n            arg int spectatorCapacity;\n            arg boolean hasFloodlights;\n            arg boolean isIndoor;\n\n            identifier(assetId);\n        }\n\n        entity Tournament {\n            arg string tournamentId;\n            ref .SportType sport;\n            arg date startDate;\n            arg date endDate;\n            arg int participants;\n            arg string sponsor;\n\n            identifier(tournamentId);\n        }\n    }\n\n    // Waste water management\n    package wastewater {\n        enum TreatmentStage {\n            PRIMARY(_);\n            SECONDARY(_);\n            TERTIARY(_);\n            ADVANCED(_);\n        }\n\n        enum WaterQualityMetric {\n            arg string unit;\n            BOD(1, \"mg/L\");\n            COD(2, \"mg/L\");\n            TSS(3, \"mg/L\");\n            PH(4, \"pH\");\n        }\n\n        entity TreatmentPlant extends ..infrastructure.Asset {\n            ref .TreatmentStage[] stages;\n            arg double dailyCapacity;\n            arg double currentFlow;\n            arg boolean isOperational;\n            arg date lastInspection;\n\n            identifier(assetId);\n        }\n\n        entity QualityTest {\n            arg string testId;\n            ref .WaterQualityMetric metric;\n            arg double value;\n            arg datetime timestamp;\n            arg boolean meetsStandard;\n            arg string analyst;\n\n            identifier(testId);\n        }\n    }\n\n    // Public transit payments\n    package transit_payment {\n        enum PaymentMethod {\n            CARD(_);\n            MOBILE(_);\n            TOKEN(_);\n            CASH(_);\n            SUBSCRIPTION(_);\n        }\n\n        enum FareType {\n            arg double baseRate;\n            SINGLE(1, 2.50);\n            DAY_PASS(2, 8.00);\n            WEEK_PASS(3, 30.00);\n            MONTH_PASS(4, 100.00);\n        }\n\n        entity TransitCard {\n            arg string cardId;\n            ref .PaymentMethod method;\n            ref .FareType fareType;\n            arg double balance;\n            arg date expiryDate;\n            arg boolean isActive;\n\n            identifier(cardId);\n        }\n\n        entity FareTransaction {\n            arg string transactionId;\n            ref TransitCard card;\n            arg datetime timestamp;\n            arg double amount;\n            arg string route;\n            arg boolean isRefunded;\n\n            identifier(transactionId);\n        }\n    }\n\n    // Digital signage\n    package signage {\n        enum SignType {\n            TRAFFIC(_);\n            INFORMATION(_);\n            ADVERTISING(_);\n            EMERGENCY(_);\n            WAYFINDING(_);\n        }\n\n        enum ContentType {\n            TEXT(_);\n            IMAGE(_);\n            VIDEO(_);\n            MIXED(_);\n        }\n\n        entity DigitalSign extends ..infrastructure.Asset {\n            ref .SignType type;\n            ref .ContentType contentType;\n            arg string resolution;\n            arg boolean isInteractive;\n            arg datetime[] activeHours;\n\n            identifier(assetId);\n        }\n\n        entity SignContent {\n            arg string contentId;\n            ref DigitalSign sign;\n            arg string content;\n            arg datetime startDisplay;\n            arg datetime endDisplay;\n            arg int priority;\n\n            identifier(contentId);\n        }\n    }\n\n    // Noise monitoring\n    package noise {\n        enum NoiseSource {\n            TRAFFIC(_);\n            CONSTRUCTION(_);\n            ENTERTAINMENT(_);\n            INDUSTRIAL(_);\n            URBAN(_);\n        }\n\n        enum NoiseLevel {\n            arg int decibels;\n            LOW(1, 40);\n            MODERATE(2, 60);\n            HIGH(3, 80);\n            DANGEROUS(4, 100);\n        }\n\n        entity NoiseSensor extends ..infrastructure.Asset {\n            ref .NoiseSource sources;\n            ref .NoiseLevel currentLevel;\n            arg double averageReading;\n            arg datetime lastPeak;\n            arg boolean needsCalibration;\n\n            identifier(assetId);\n        }\n\n        entity NoiseComplaint {\n            arg string complaintId;\n            ref .NoiseSource source;\n            arg datetime reportTime;\n            arg string description;\n            arg boolean isResolved;\n            arg string resolution;\n\n            identifier(complaintId);\n        }\n    }\n\n    // Smart lighting\n    package lighting {\n        enum LightType {\n            LED(_);\n            SOLAR(_);\n            HALOGEN(_);\n            SMART(_);\n            EMERGENCY(_);\n        }\n\n        enum BrightnessLevel {\n            arg int percentage;\n            OFF(0, 0);\n            DIM(1, 25);\n            MEDIUM(2, 50);\n            BRIGHT(3, 100);\n        }\n\n        entity StreetLight extends ..infrastructure.Asset {\n            ref .LightType type;\n            ref .BrightnessLevel brightness;\n            arg double energyConsumption;\n            arg boolean hasMotionSensor;\n            arg datetime[] scheduleOn;\n\n            identifier(assetId);\n        }\n\n        entity LightingZone {\n            arg string zoneId;\n            ref StreetLight[] lights;\n            arg string schedule;\n            arg boolean isDimmed;\n            arg double dailyUsage;\n\n            identifier(zoneId);\n        }\n    }\n\n    // Market management\n    package markets {\n        enum MarketType {\n            FARMERS(_);\n            FLEA(_);\n            FOOD(_);\n            CRAFT(_);\n            NIGHT(_);\n        }\n\n        enum VendorCategory {\n            PRODUCE(_);\n            PREPARED_FOOD(_);\n            CRAFTS(_);\n            SERVICES(_);\n            MIXED(_);\n        }\n\n        entity Market extends ..infrastructure.Asset {\n            ref .MarketType type;\n            arg int stallCapacity;\n            arg string[] operatingDays;\n            arg datetime openTime;\n            arg datetime closeTime;\n\n            identifier(assetId);\n        }\n\n        entity Vendor {\n            arg string vendorId;\n            ref .VendorCategory category;\n            ref Market market;\n            arg string products;\n            arg boolean isRegistered;\n            arg date licenseExpiry;\n\n            identifier(vendorId);\n        }\n    }\n\n    // Drone management\n    package drones {\n        enum DroneType {\n            SURVEILLANCE(_);\n            DELIVERY(_);\n            MAINTENANCE(_);\n            EMERGENCY(_);\n            MAPPING(_);\n        }\n\n        enum FlightStatus {\n            GROUNDED(_);\n            FLYING(_);\n            CHARGING(_);\n            MAINTENANCE(_);\n            EMERGENCY(_);\n        }\n\n        entity Drone extends ..infrastructure.Asset {\n            ref .DroneType type;\n            ref .FlightStatus flightStatus;\n            arg double batteryLevel;\n            arg double maxAltitude;\n            arg double range;\n\n            identifier(assetId);\n        }\n\n        entity FlightMission {\n            arg string missionId;\n            ref Drone drone;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string purpose;\n            arg boolean isCompleted;\n\n            identifier(missionId);\n        }\n    }\n\n    // Public furniture\n    package furniture {\n        enum FurnitureType {\n            BENCH(_);\n            BIN(_);\n            SHELTER(_);\n            KIOSK(_);\n            ART(_);\n        }\n\n        enum MaintenanceState {\n            NEW(_);\n            GOOD(_);\n            FAIR(_);\n            POOR(_);\n            REPLACE(_);\n        }\n\n        entity StreetFurniture extends ..infrastructure.Asset {\n            ref .FurnitureType type;\n            ref .MaintenanceState state;\n            arg string material;\n            arg boolean needsRepair;\n\n            identifier(assetId);\n        }\n\n        entity MaintenanceRecord {\n            arg string recordId;\n            ref StreetFurniture furniture;\n            arg date maintenanceDate;\n            arg string work;\n            arg double cost;\n            arg string contractor;\n\n            identifier(recordId);\n        }\n    }\n\n    // Smart restaurant management\n    package restaurants {\n        enum CuisineType {\n            ITALIAN(_);\n            ASIAN(_);\n            AMERICAN(_);\n            MEXICAN(_);\n            FUSION(_);\n        }\n\n        enum FoodSafetyRating {\n            arg string description;\n            A(1, \"Excellent\");\n            B(2, \"Good\");\n            C(3, \"Fair\");\n            D(4, \"Poor\");\n            F(5, \"Failed\");\n        }\n\n        struct MenuSection {\n            arg string name;\n            // TODO []\n            arg string items;\n            // TODO []\n            arg double prices;\n            arg boolean isSpecial;\n            func double getAveragePrice();\n        }\n\n        entity Restaurant extends ..infrastructure.Asset {\n            ref .CuisineType type;\n            ref .FoodSafetyRating rating;\n            arg int seatingCapacity;\n            arg boolean hasDelivery;\n            arg datetime[] operatingHours;\n\n            identifier(assetId);\n        }\n\n        entity Inspection {\n            arg string inspectionId;\n            ref Restaurant restaurant;\n            arg date inspectionDate;\n            arg string[] violations;\n            arg boolean passed;\n            arg date followupDate;\n\n            identifier(inspectionId);\n        }\n    }\n\n    // Smart retail\n    package retail {\n        enum StoreType {\n            GROCERY(_);\n            CLOTHING(_);\n            ELECTRONICS(_);\n            PHARMACY(_);\n            DEPARTMENT(_);\n        }\n\n        enum CustomerSegment {\n            BUDGET(_);\n            MAINSTREAM(_);\n            PREMIUM(_);\n            LUXURY(_);\n        }\n\n        entity RetailStore extends ..infrastructure.Asset {\n            ref .StoreType type;\n            ref .CustomerSegment segment;\n            arg double floorArea;\n            arg int employeeCount;\n            arg boolean isChainStore;\n\n            identifier(assetId);\n        }\n\n        entity InventoryItem {\n            arg string itemId;\n            ref RetailStore store;\n            arg string name;\n            arg int stockLevel;\n            arg double price;\n            arg boolean isDiscounted;\n\n            identifier(itemId);\n        }\n    }\n\n    // Cemetery management\n    package cemetery {\n        enum PlotType {\n            SINGLE(_);\n            FAMILY(_);\n            MAUSOLEUM(_);\n            COLUMBARIUM(_);\n            MEMORIAL(_);\n        }\n\n        enum MaintenanceSchedule {\n            WEEKLY(_);\n            MONTHLY(_);\n            QUARTERLY(_);\n            ANNUAL(_);\n            AS_NEEDED(_);\n        }\n\n        entity Cemetery extends ..infrastructure.Asset {\n            ref .PlotType[] availableTypes;\n            arg double totalArea;\n            arg int totalPlots;\n            arg int availablePlots;\n            arg boolean hasChapel;\n\n            identifier(assetId);\n        }\n\n        entity Plot {\n            arg string plotId;\n            ref .PlotType type;\n            ref .MaintenanceSchedule schedule;\n            arg date lastMaintenance;\n            arg boolean isOccupied;\n            arg string owner;\n\n            identifier(plotId);\n        }\n    }\n\n    // Smart postal service\n    package postal {\n        enum MailType {\n            LETTER(_);\n            PACKAGE(_);\n            EXPRESS(_);\n            REGISTERED(_);\n            BULK(_);\n        }\n\n        enum DeliveryStatus {\n            RECEIVED(_);\n            SORTING(_);\n            IN_TRANSIT(_);\n            OUT_FOR_DELIVERY(_);\n            DELIVERED(_);\n        }\n\n        entity PostOffice extends ..infrastructure.Asset {\n            arg int counterCount;\n            arg int staffCount;\n            arg boolean hasAutomation;\n            arg datetime[] serviceHours;\n            arg double storageCapacity;\n\n            identifier(assetId);\n        }\n\n        entity Shipment {\n            arg string trackingId;\n            ref .MailType type;\n            ref .DeliveryStatus status;\n            arg datetime receivedTime;\n            arg datetime estimatedDelivery;\n            arg boolean isInsured;\n\n            identifier(trackingId);\n        }\n    }\n\n    // Public art\n    package public_art {\n        enum ArtType {\n            SCULPTURE(_);\n            MURAL(_);\n            INSTALLATION(_);\n            INTERACTIVE(_);\n            TEMPORARY(_);\n        }\n\n        enum ArtistType {\n            LOCAL(_);\n            NATIONAL(_);\n            INTERNATIONAL(_);\n            STUDENT(_);\n            COLLECTIVE(_);\n        }\n\n        entity Artwork extends ..infrastructure.Asset {\n            ref .ArtType type;\n            ref .ArtistType artistType;\n            arg boolean requiresRestoration;\n            arg string materials;\n\n            identifier(assetId);\n        }\n\n        entity ArtEvent {\n            arg string eventId;\n            ref Artwork artwork;\n            arg string eventType;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg int attendees;\n\n            identifier(eventId);\n        }\n    }\n\n    // Smart elevators\n    package elevators {\n        enum ElevatorType {\n            PASSENGER(_);\n            FREIGHT(_);\n            SERVICE(_);\n            PANORAMIC(_);\n            EMERGENCY(_);\n        }\n\n        enum OperationalStatus {\n            OPERATIONAL(_);\n            MAINTENANCE(_);\n            OUT_OF_SERVICE(_);\n            INSPECTION(_);\n            EMERGENCY(_);\n        }\n\n        entity Elevator extends ..infrastructure.Asset {\n            ref .ElevatorType type;\n            ref .OperationalStatus operationalStatus;\n            arg int capacity;\n            arg int currentFloor;\n            arg int totalFloors;\n\n            identifier(assetId);\n        }\n\n        entity MaintenanceLog {\n            arg string logId;\n            ref Elevator elevator;\n            arg datetime serviceTime;\n            arg string technician;\n            arg string work;\n            arg boolean resolved;\n\n            identifier(logId);\n        }\n    }\n\n    // Climate action\n    package climate {\n        enum EmissionSource {\n            TRANSPORT(_);\n            BUILDINGS(_);\n            INDUSTRY(_);\n            WASTE(_);\n            ENERGY(_);\n        }\n\n        enum MitigationStrategy {\n            REDUCTION(_);\n            OFFSET(_);\n            ADAPTATION(_);\n            PREVENTION(_);\n            INNOVATION(_);\n        }\n\n        entity EmissionReport {\n            arg string reportId;\n            ref .EmissionSource source;\n            arg double amount;\n            arg string unit;\n            arg date measurementDate;\n            arg boolean verified;\n\n            identifier(reportId);\n        }\n\n        entity ClimateProject {\n            arg string projectId;\n            ref .MitigationStrategy strategy;\n            arg string description;\n            arg date startDate;\n            arg double budget;\n            arg boolean isActive;\n\n            identifier(projectId);\n        }\n    }\n\n    // Snow removal\n    package snow_removal {\n        enum PriorityLevel {\n            EMERGENCY(_);\n            PRIMARY(_);\n            SECONDARY(_);\n            RESIDENTIAL(_);\n            SIDEWALK(_);\n        }\n\n        enum TreatmentType {\n            PLOW(_);\n            SALT(_);\n            SAND(_);\n            CHEMICAL(_);\n            MANUAL(_);\n        }\n\n        entity SnowRoute {\n            arg string routeId;\n            ref .PriorityLevel priority;\n            arg double length;\n            arg int estimatedTime;\n            arg boolean isCleared;\n            arg datetime lastCleared;\n\n            identifier(routeId);\n        }\n\n        entity TreatmentOperation {\n            arg string operationId;\n            ref .TreatmentType type;\n            ref SnowRoute route;\n            arg datetime startTime;\n            arg datetime completionTime;\n            arg double materialUsed;\n\n            identifier(operationId);\n        }\n    }\n\n    // Urban wildlife\n    package wildlife {\n        enum SpeciesType {\n            BIRD(_);\n            MAMMAL(_);\n            REPTILE(_);\n            AMPHIBIAN(_);\n            INSECT(_);\n        }\n\n        enum HabitatType {\n            PARK(_);\n            WATERWAY(_);\n            URBAN(_);\n            PROTECTED(_);\n            CORRIDOR(_);\n        }\n\n        entity WildlifeZone extends ..infrastructure.Asset {\n            ref .HabitatType type;\n            arg double area;\n            ref .SpeciesType[] presentSpecies;\n            arg boolean isProtected;\n            arg date lastSurvey;\n\n            identifier(assetId);\n        }\n\n        entity WildlifeIncident {\n            arg string incidentId;\n            ref .SpeciesType species;\n            arg datetime reportTime;\n            arg string description;\n            arg boolean requiresAction;\n            arg string resolution;\n\n            identifier(incidentId);\n        }\n    }\n\n    // Public bathrooms\n    package bathrooms {\n        enum BathroomType {\n            PERMANENT(_);\n            PORTABLE(_);\n            AUTOMATED(_);\n            ACCESSIBLE(_);\n            FAMILY(_);\n        }\n\n        enum CleaningStatus {\n            CLEAN(_);\n            NEEDS_CLEANING(_);\n            IN_PROGRESS(_);\n            OUT_OF_SERVICE(_);\n            EMERGENCY(_);\n        }\n\n        entity PublicBathroom extends ..infrastructure.Asset {\n            ref .BathroomType type;\n            ref .CleaningStatus cleaningStatus;\n            arg boolean isOccupied;\n            arg datetime lastCleaning;\n            arg boolean hasChangingTable;\n\n            identifier(assetId);\n        }\n\n        entity MaintenanceTicket {\n            arg string ticketId;\n            ref PublicBathroom bathroom;\n            arg string issue;\n            arg datetime reportTime;\n            arg boolean isUrgent;\n            arg boolean resolved;\n\n            identifier(ticketId);\n        }\n    }\n\n    // Smart Manufacturing Hub Management\n    package manufacturing {\n        enum ProductionLineType {\n            ASSEMBLY(_);\n            PACKAGING(_);\n            TESTING(_);\n            MACHINING(_);\n            FINISHING(_);\n            CHEMICAL_PROCESSING(_);\n            FOOD_PROCESSING(_);\n            ELECTRONICS(_);\n            AUTOMOTIVE(_);\n            PHARMACEUTICAL(_);\n        }\n\n        enum QualityStandard {\n            arg string code;\n            arg int level;\n            ISO_NINE_THOUSAND_ONE(1, \"ISO-9001\", 1);\n            ISO_FOURTEEN_THOUSAND_ONE(2, \"ISO-14001\", 1);\n            GMP(3, \"GMP\", 2);\n            HACCP(4, \"HACCP\", 2);\n            SIX_SIGMA(5, \"6σ\", 3);\n        }\n\n        enum MachineStatus {\n            RUNNING(_);\n            IDLE(_);\n            MAINTENANCE(_);\n            ERROR(_);\n            OFFLINE(_);\n            CALIBRATING(_);\n            WARMING_UP(_);\n            COOLING_DOWN(_);\n            EMERGENCY_STOP(_);\n            STANDBY(_);\n        }\n\n        struct ProductionMetrics {\n            arg int targetOutput;\n            arg int actualOutput;\n            arg double efficiency;\n            arg int defectRate;\n            arg double energyConsumption;\n            arg double materialWaste;\n            func double calculateOEE();\n            func boolean isOnTarget();\n            func double getVariance();\n        }\n\n        struct MaintenanceSchedule {\n            arg date lastMaintenance;\n            arg date nextMaintenance;\n            arg int frequency;\n            // TODO []\n            arg string tasks;\n            arg string responsible;\n            func boolean isOverdue();\n        }\n\n        entity ManufacturingPlant extends ..infrastructure.Asset {\n            ref .ProductionLineType[] productionTypes;\n            ref .QualityStandard[] certifications;\n            arg int employeeCount;\n            arg double productionCapacity;\n            arg boolean isTwentyFourSeven;\n            arg string[] safetyProtocols;\n            arg double totalArea;\n            arg int shiftCount;\n\n            identifier(assetId);\n        }\n\n        entity ProductionLine {\n            arg string lineId;\n            ref .ProductionLineType type;\n            ref .MachineStatus status;\n            ref .ProductionMetrics metrics;\n            arg int workerCount;\n            arg double outputRate;\n            arg string currentProduct;\n            arg datetime lastStartup;\n\n            identifier(lineId);\n        }\n\n        entity Machine {\n            arg string machineId;\n            ref .MachineStatus status;\n            ref .MaintenanceSchedule maintenance;\n            arg string manufacturer;\n            arg string model;\n            arg date installationDate;\n            arg double powerConsumption;\n            arg string[] capabilities;\n\n            identifier(machineId);\n        }\n\n        entity QualityCheck {\n            arg string checkId;\n            ref ProductionLine line;\n            arg datetime timestamp;\n            arg string inspector;\n            arg string[] parameters;\n            arg boolean passed;\n            arg string[] defects;\n            arg string action;\n\n            identifier(checkId);\n        }\n\n        entity MaterialInventory {\n            arg string inventoryId;\n            arg string materialType;\n            arg double quantity;\n            arg string unit;\n            arg date expiryDate;\n            arg string supplier;\n            arg string storageLocation;\n            arg boolean hazardous;\n\n            identifier(inventoryId);\n        }\n\n    }\n\n    // Advanced Healthcare Management\n    package healthcare_extended {\n        enum MedicalDepartment {\n            EMERGENCY(_);\n            SURGERY(_);\n            PEDIATRICS(_);\n            CARDIOLOGY(_);\n            NEUROLOGY(_);\n            ORTHOPEDICS(_);\n            ONCOLOGY(_);\n            RADIOLOGY(_);\n            ICU(_);\n            PHARMACY(_);\n        }\n\n        enum PatientStatus {\n            ADMITTED(_);\n            OUTPATIENT(_);\n            CRITICAL(_);\n            STABLE(_);\n            DISCHARGED(_);\n            TRANSFERRED(_);\n            QUARANTINE(_);\n            OBSERVATION(_);\n            RECOVERY(_);\n            EMERGENCY(_);\n        }\n\n        enum TreatmentType {\n            MEDICATION(_);\n            SURGERY(_);\n            THERAPY(_);\n            DIAGNOSTIC(_);\n            PREVENTIVE(_);\n            EMERGENCY(_);\n            PALLIATIVE(_);\n            REHABILITATION(_);\n            ALTERNATIVE(_);\n            EXPERIMENTAL(_);\n        }\n\n        struct VitalSigns {\n            arg double temperature;\n            arg int heartRate;\n            arg int bloodPressureSystolic;\n            arg int bloodPressureDiastolic;\n            arg int respiratoryRate;\n            arg double oxygenSaturation;\n            func boolean isNormal();\n            func string getStatus();\n        }\n\n        entity Patient {\n            arg string patientId;\n            ref .PatientStatus status;\n            ref .MedicalDepartment department;\n            ref .VitalSigns vitals;\n            arg string[] allergies;\n            arg string[] medications;\n            arg string bloodType;\n            arg date admissionDate;\n\n            identifier(patientId);\n        }\n\n        entity Treatment {\n            arg string treatmentId;\n            ref .TreatmentType type;\n            ref Patient patient;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string provider;\n            arg string notes;\n            arg boolean completed;\n\n            identifier(treatmentId);\n        }\n\n    }\n\n    // Smart Education Extended\n    package education_extended {\n        enum CourseType {\n            LECTURE(_);\n            SEMINAR(_);\n            LABORATORY(_);\n            WORKSHOP(_);\n            ONLINE(_);\n            HYBRID(_);\n            FIELD_WORK(_);\n            RESEARCH(_);\n            PRACTICUM(_);\n            THESIS(_);\n        }\n    }\n\n    // Smart Library Management\n    package library {\n        enum LibraryResourceType {\n            BOOK(_);\n            EBOOK(_);\n            AUDIOBOOK(_);\n            JOURNAL(_);\n            MAGAZINE(_);\n            NEWSPAPER(_);\n            MULTIMEDIA(_);\n            RESEARCH_PAPER(_);\n            ARCHIVE(_);\n            SPECIAL_COLLECTION(_);\n        }\n\n        enum MembershipLevel {\n            arg int maxBorrows;\n            arg int durationDays;\n            BASIC(1, 3, 14);\n            STANDARD(2, 5, 21);\n            PREMIUM(3, 10, 30);\n            RESEARCHER(4, 15, 45);\n            INSTITUTIONAL(5, 20, 60);\n        }\n\n        struct LoanPolicy {\n            arg int maxRenewals;\n            arg double lateFeePerDay;\n            arg int gracePeriod;\n            arg boolean allowsReservation;\n            func double calculateLateFee(int daysOverdue);\n        }\n\n        entity LibraryBranch extends ..infrastructure.Asset {\n            arg string branchName;\n            arg int capacity;\n            arg int computerStations;\n            arg boolean hasStudyRooms;\n            arg datetime[] operatingHours;\n            arg string[] facilities;\n\n            identifier(assetId);\n        }\n\n        entity LibraryResource {\n            arg string resourceId;\n            ref .LibraryResourceType type;\n            arg string title;\n            arg string[] authors;\n            arg date publicationDate;\n            arg string publisher;\n            arg string location;\n            arg boolean isAvailable;\n\n            identifier(resourceId);\n        }\n\n        entity LibraryMember {\n            arg string memberId;\n            ref .MembershipLevel level;\n            arg string name;\n            arg string email;\n            arg date joinDate;\n            arg date membershipExpiry;\n            arg boolean isActive;\n            arg int currentBorrows;\n\n            identifier(memberId);\n        }\n\n        entity LoanTransaction {\n            arg string loanId;\n            ref LibraryMember member;\n            ref LibraryResource resource;\n            arg datetime borrowDate;\n            arg datetime dueDate;\n            arg datetime returnDate;\n            arg boolean isOverdue;\n            arg double fineAmount;\n\n            identifier(loanId);\n        }\n\n        entity StudyRoom {\n            arg string roomId;\n            ref LibraryBranch branch;\n            arg int capacity;\n            arg boolean hasProjector;\n            arg boolean hasWhiteboard;\n            arg boolean isOccupied;\n            arg datetime[] reservations;\n\n            identifier(roomId);\n        }\n    }\n\n    // Pet and Animal Management\n    package animal_management {\n        enum PetType {\n            DOG(_);\n            CAT(_);\n            BIRD(_);\n            FISH(_);\n            REPTILE(_);\n            SMALL_MAMMAL(_);\n            EXOTIC(_);\n            FARM_ANIMAL(_);\n            WILDLIFE(_);\n            SERVICE_ANIMAL(_);\n        }\n\n        enum LicenseStatus {\n            ACTIVE(_);\n            EXPIRED(_);\n            PENDING(_);\n            REVOKED(_);\n            TEMPORARY(_);\n        }\n\n        struct VaccinationRecord {\n            arg string vaccineName;\n            arg date administeredDate;\n            arg date expiryDate;\n            arg string veterinarian;\n            func boolean isValid();\n        }\n\n        entity Pet {\n            arg string petId;\n            ref .PetType type;\n            arg string name;\n            arg string breed;\n            arg date birthDate;\n            ref .LicenseStatus licenseStatus;\n            arg string ownerName;\n            arg string microchipId;\n\n            identifier(petId);\n        }\n\n        entity VeterinaryClinic extends ..infrastructure.Asset {\n            arg string clinicName;\n            arg string[] services;\n            arg boolean emergencyTwentyFourHour;\n            arg int capacity;\n            arg string[] specialists;\n            arg boolean hasLaboratory;\n\n            identifier(assetId);\n        }\n\n        entity AnimalControl {\n            arg string caseId;\n            ref .PetType animalType;\n            arg datetime reportTime;\n            arg string incidentType;\n            arg string location;\n            arg boolean resolved;\n            arg string resolution;\n\n            identifier(caseId);\n        }\n\n        entity PetLicense {\n            arg string licenseId;\n            ref Pet pet;\n            ref .LicenseStatus status;\n            arg date issueDate;\n            arg date expiryDate;\n            arg double fee;\n            arg boolean rabiesVaccinated;\n\n            identifier(licenseId);\n        }\n\n        entity AnimalShelter extends ..infrastructure.Asset {\n            arg string shelterName;\n            arg int capacity;\n            arg int currentOccupancy;\n            arg boolean acceptsStrays;\n            arg boolean providesVetCare;\n            arg string[] services;\n\n            identifier(assetId);\n        }\n    }\n\n    // Film and Media Production Management\n    package media_production {\n        enum ProductionType {\n            FILM(_);\n            TV(_);\n            COMMERCIAL(_);\n            DOCUMENTARY(_);\n            MUSIC_VIDEO(_);\n            PHOTOSHOOT(_);\n            LIVE_EVENT(_);\n            STUDENT_FILM(_);\n            NEWS(_);\n            DIGITAL_CONTENT(_);\n        }\n\n        enum PermitStatus {\n            PENDING(_);\n            APPROVED(_);\n            DENIED(_);\n            MODIFIED(_);\n            EXPIRED(_);\n        }\n\n        struct LocationRequirements {\n            arg boolean needsPowerSupply;\n            arg boolean needsParking;\n            arg boolean needsTrafficControl;\n            arg boolean needsSecurityPresence;\n            func boolean checkCompliance();\n        }\n\n        entity FilmPermit {\n            arg string permitId;\n            ref .ProductionType type;\n            ref .PermitStatus status;\n            arg datetime startTime;\n            arg datetime endTime;\n            arg string location;\n            arg int crewSize;\n            arg string[] equipment;\n\n            identifier(permitId);\n        }\n\n        entity FilmLocation extends ..infrastructure.Asset {\n            arg string locationName;\n            arg string[] features;\n            arg boolean isIndoor;\n            arg double dailyRate;\n            arg int maxOccupancy;\n            arg boolean hasParking;\n\n            identifier(assetId);\n        }\n\n        entity ProductionCrew {\n            arg string crewId;\n            ref FilmPermit permit;\n            arg string productionCompany;\n            arg string contactPerson;\n            arg string[] vehicles;\n            arg string[] specialNeeds;\n\n            identifier(crewId);\n        }\n\n        entity ImpactNotification {\n            arg string notificationId;\n            ref FilmPermit permit;\n            arg datetime noticeTime;\n            arg string[] affectedAreas;\n            arg string[] mitigation;\n            arg boolean requiresEvacuation;\n\n            identifier(notificationId);\n        }\n\n        entity Equipment {\n            arg string equipmentId;\n            arg string type;\n            arg string specifications;\n            arg boolean requiresPermit;\n            arg double powerRequirement;\n            arg string[] restrictions;\n\n            identifier(equipmentId);\n        }\n    }\n\n    // Scientific Research Facility Management\n    package research_facilities {\n        // Abstract base structures for research management\n        struct ResearchMetadata {\n            // TODO []\n            arg string keywords;\n            // TODO []\n            arg string classifications;\n            arg string methodology;\n            arg date startDate;\n            arg date endDate;\n            func boolean isActive();\n            // TODO [] return\n            func string getCollaborators();\n            func double calculateProgress();\n        }\n\n        struct EquipmentSpecification {\n            arg double precision;\n            arg double accuracy;\n            // TODO []\n            arg string calibrationRequirements;\n            // TODO []\n            arg string operatingConditions;\n            arg datetime lastVerification;\n            func boolean needsCalibration();\n            func boolean meetsStandards();\n        }\n\n        // Detailed categorization enums\n        enum ResearchDomain {\n            arg string field;\n            arg int complexityLevel;\n            QUANTUM_PHYSICS(1, \"Quantum Mechanics\", 5);\n            MOLECULAR_BIOLOGY(2, \"Molecular Studies\", 4);\n            NEUROSCIENCE(3, \"Brain Research\", 5);\n            CLIMATE_SCIENCE(4, \"Climate Studies\", 4);\n            MATERIALS_SCIENCE(5, \"Materials Research\", 3);\n            COMPUTER_SCIENCE(6, \"Computing\", 4);\n            PSYCHOLOGY(7, \"Behavioral Studies\", 3);\n            GENETICS(8, \"Genetic Research\", 5);\n            ROBOTICS(9, \"Robotics Research\", 4);\n            NANOTECHNOLOGY(10, \"Nano Research\", 5);\n        }\n\n        enum ExperimentalPhase {\n            DESIGN(_);\n            SETUP(_);\n            DATA_COLLECTION(_);\n            ANALYSIS(_);\n            VERIFICATION(_);\n            PEER_REVIEW(_);\n            PUBLICATION(_);\n            REPLICATION(_);\n            ARCHIVAL(_);\n            EXTENSION(_);\n        }\n\n        enum DataClassification {\n            arg int securityLevel;\n            arg string retentionPeriod;\n            PUBLIC(1, 0, \"1Y\");\n            CONFIDENTIAL(2, 1, \"5Y\");\n            RESTRICTED(3, 2, \"10Y\");\n            CLASSIFIED(4, 3, \"25Y\");\n            TOP_SECRET(5, 4, \"50Y\");\n        }\n\n        // Core research facility entities\n        entity Laboratory extends ..infrastructure.Asset {\n            // TODO []\n            ref .ResearchDomain domains;\n            ref .DataClassification securityLevel;\n            // TODO []\n            arg string specializations;\n            arg double totalArea;\n            arg int workstationCount;\n            arg boolean hasCleanRoom;\n            // TODO []\n            arg string safetyProtocols;\n            // TODO []\n            arg string certifications;\n\n            identifier(assetId);\n        }\n\n        entity Experiment {\n            arg string experimentId;\n            ref .ExperimentalPhase phase;\n            ref .ResearchMetadata metadata;\n            ref Laboratory location;\n            arg datetime scheduledStart;\n            arg datetime scheduledEnd;\n            // TODO []\n            arg string prerequisites;\n            arg string dependencies;\n            arg boolean hasEthicalApproval;\n\n            identifier(experimentId);\n        }\n\n        entity ResearchEquipment extends ..infrastructure.Asset {\n            ref .EquipmentSpecification specs;\n            arg string manufacturer;\n            arg string model;\n            arg string serialNumber;\n            arg date purchaseDate;\n            arg date warrantyExpiry;\n            arg datetime lastCalibration;\n            arg string[] supportedExperiments;\n            arg boolean requiresSpecialTraining;\n\n            identifier(assetId);\n        }\n\n        // Specialized monitoring and control entities\n        entity EnvironmentalControl {\n            arg string controlId;\n            ref Laboratory lab;\n            arg double temperature;\n            arg double humidity;\n            arg double pressure;\n            arg double[] gasLevels;\n            arg double particleCount;\n            arg string[] alerts;\n            arg boolean withinSpecs;\n\n            identifier(controlId);\n        }\n\n        entity DataCollection {\n            arg string datasetId;\n            ref Experiment experiment;\n            ref .DataClassification classification;\n            arg datetime collectionStart;\n            arg datetime collectionEnd;\n            arg double sampleSize;\n            arg string format;\n            arg string[] validationRules;\n            arg boolean isBackedUp;\n\n            identifier(datasetId);\n        }\n\n        // Research safety and compliance\n        entity SafetyProtocol {\n            arg string protocolId;\n            ref Laboratory lab;\n            arg string hazardType;\n            arg string[] precautions;\n            arg string[] emergencyProcedures;\n            arg date lastReview;\n            arg string[] authorizedPersonnel;\n            arg boolean requiresTraining;\n\n            identifier(protocolId);\n        }\n\n        entity ComplianceAudit {\n            arg string auditId;\n            ref Laboratory lab;\n            ref SafetyProtocol[] protocols;\n            arg date auditDate;\n            arg string auditor;\n            arg string[] findings;\n            arg string[] recommendations;\n            arg boolean passed;\n\n            identifier(auditId);\n        }\n\n        // Scheduling and resource management\n        entity ResourceSchedule {\n            arg string scheduleId;\n            ref ResearchEquipment equipment;\n            ref Experiment[] experiments;\n            arg datetime[] reservedTimes;\n            arg string[] users;\n            arg boolean hasConflicts;\n            // TODO []\n            arg string maintenanceWindows;\n            arg boolean isOptimized;\n\n            identifier(scheduleId);\n        }\n\n        entity MaintenanceLog {\n            arg string logId;\n            ref ResearchEquipment equipment;\n            arg datetime maintenanceTime;\n            arg string technician;\n            arg string[] tasks;\n            arg string[] replacedParts;\n            arg double cost;\n            arg boolean requiresFollowup;\n\n            identifier(logId);\n        }\n\n        // Research collaboration and access control\n        entity AccessCredential {\n            arg string credentialId;\n            ref Laboratory lab;\n            ref .DataClassification clearanceLevel;\n            arg string holderName;\n            arg string[] authorizedAreas;\n            arg datetime validFrom;\n            arg datetime validUntil;\n            arg boolean isActive;\n\n            identifier(credentialId);\n        }\n    }\n\n\n    // Financial Technology Infrastructure\n    package fintech {\n        // Core financial interfaces\n        interface Transactional {\n            func boolean validate();\n            func string generateHash();\n            func boolean verifySignature(string signature);\n            func void logTransaction();\n            func double calculateFees();\n        }\n\n        interface Auditable {\n            // TODO []\n            func string getAuditTrail();\n            func void addAuditEntry(string entry);\n            func boolean isCompliant();\n            func date getLastAuditDate();\n            func string getAuditor();\n        }\n\n        interface Secureable {\n            func boolean encrypt();\n            func boolean decrypt();\n            // TODO []\n            func string getAccessRoles();\n            func boolean hasPermission(string role);\n            func void revokeAccess(string userId);\n        }\n\n        interface RiskAssessable {\n            func int getRiskScore();\n            // TODO []\n            func string getRiskFactors();\n            func boolean isHighRisk();\n            func void updateRiskProfile();\n            // TODO []\n            func string getMitigationStrategies();\n        }\n\n        // Complex financial data structures\n        struct TransactionMetadata implements Auditable, Secureable {\n            arg datetime timestamp;\n            arg string originatorId;\n            arg string beneficiaryId;\n            arg double amount;\n            arg string currency;\n            arg string purpose;\n            func boolean validate();\n        }\n\n        struct RiskProfile implements RiskAssessable {\n            arg int creditScore;\n            arg double defaultProbability;\n            // TODO []\n            arg string riskIndicators;\n            arg date lastAssessment;\n        }\n\n        // Detailed enumerations\n        enum TransactionType {\n            arg string category;\n            arg double feePercentage;\n            PAYMENT(1, \"Payment\", 0.1);\n            TRANSFER(2, \"Transfer\", 0.2);\n            EXCHANGE(3, \"Currency Exchange\", 0.3);\n            INVESTMENT(4, \"Investment\", 0.4);\n            LOAN(5, \"Loan Disbursement\", 0.5);\n        }\n\n        enum SecurityLevel {\n            arg int clearance;\n            arg string protocol;\n            BASIC(1, 1, \"TLS\");\n            ENHANCED(2, 2, \"TLS+2FA\");\n            ADVANCED(3, 3, \"TLS+2FA+Biometric\");\n            MAXIMUM(4, 4, \"TLS+2FA+Biometric+Hardware\");\n        }\n\n        // Core financial entities\n        entity FinancialInstitution extends ..infrastructure.Asset implements Auditable, Secureable {\n            arg string institutionId;\n            arg string[] licenses;\n            ref .SecurityLevel securityLevel;\n            arg string[] supportedCurrencies;\n            arg boolean isActive;\n\n            identifier(institutionId);\n        }\n\n        entity FinancialAccount implements Transactional, Auditable, Secureable {\n            arg string accountId;\n            ref FinancialInstitution institution;\n            arg string accountType;\n            arg double balance;\n            arg string currency;\n            arg boolean isFrozen;\n            arg date openedDate;\n\n            identifier(accountId);\n        }\n\n        entity Transaction implements Transactional, Auditable, RiskAssessable {\n            arg string transactionId;\n            ref .TransactionType type;\n            ref .TransactionMetadata metadata;\n            ref FinancialAccount source;\n            ref FinancialAccount destination;\n            arg boolean isProcessed;\n            arg string status;\n\n            identifier(transactionId);\n        }\n\n        // Specialized monitoring entities\n        entity FraudDetection implements RiskAssessable, Secureable {\n            arg string detectionId;\n            ref Transaction transaction;\n            ref .RiskProfile risk;\n            arg string[] anomalyIndicators;\n            arg boolean requiresReview;\n            arg string resolution;\n\n            identifier(detectionId);\n        }\n\n        entity ComplianceCheck implements Auditable, RiskAssessable {\n            arg string checkId;\n            ref Transaction transaction;\n            arg string[] regulations;\n            arg boolean passedKYC;\n            arg boolean passedAML;\n            arg string[] violations;\n\n            identifier(checkId);\n        }\n\n        // Regulatory reporting\n        entity RegulatoryReport implements Auditable, Secureable {\n            arg string reportId;\n            ref FinancialInstitution institution;\n            arg string reportType;\n            arg date reportingPeriod;\n            arg boolean submitted;\n            arg string[] findings;\n\n            identifier(reportId);\n        }\n\n        // Security infrastructure\n        entity SecurityIncident implements Auditable, RiskAssessable {\n            arg string incidentId;\n            ref .SecurityLevel impactLevel;\n            arg datetime detectionTime;\n            arg string description;\n            arg boolean resolved;\n            arg string[] affectedSystems;\n\n            identifier(incidentId);\n        }\n\n        // Interface implementations for audit logging\n        entity AuditLog implements Auditable {\n            arg string logId;\n            ref Transaction transaction;\n            arg datetime timestamp;\n            arg string action;\n            arg string performedBy;\n            arg string details;\n\n            identifier(logId);\n        }\n\n        // Risk management\n        entity RiskAssessment implements RiskAssessable, Auditable {\n            arg string assessmentId;\n            ref FinancialInstitution institution;\n            ref .RiskProfile profile;\n            arg date assessmentDate;\n            arg string[] findings;\n            arg string[] recommendations;\n\n            identifier(assessmentId);\n        }\n\n        // Complex authentication system\n        entity AuthenticationSystem implements Secureable {\n            arg string systemId;\n            ref .SecurityLevel level;\n            arg string[] supportedMethods;\n            arg string[] activeTokens;\n            arg boolean multiFactorEnabled;\n            arg string[] blockedIPs;\n\n            identifier(systemId);\n        }\n    }\n}"}}}
2025/01/13 14:38:22 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:38:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:38:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 114 105 101 115 105 103 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:38:23 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:38:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:38:23 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:38:23 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:38:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:38:23 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:38:26 util.go:36: Trace | Read Content-Length: 155 from Content-Length: 155
2025/01/13 14:38:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:38:26 server.go:109: INFO  | Handle Method: textDocument/didClose 
2025/01/13 14:38:26 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:38:26 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf"}}}
2025/01/13 14:38:26 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:38:26 foldingService.go:218: Trace | Found 84 Comment Ranges
2025/01/13 14:38:26 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":[{"startLine":6,"startCharacter":28,"endLine":45,"endCharacter":4},{"startLine":98,"startCharacter":20,"endLine":137,"endCharacter":4},{"startLine":385,"startCharacter":24,"endLine":430,"endCharacter":8},{"startLine":999,"startCharacter":26,"endLine":1005,"endCharacter":8},{"startLine":1798,"startCharacter":26,"endLine":1809,"endCharacter":8},{"startLine":1940,"startCharacter":28,"endLine":1946,"endCharacter":8},{"startLine":2250,"startCharacter":31,"endLine":2261,"endCharacter":8},{"startLine":550,"startCharacter":26,"endLine":556,"endCharacter":8},{"startLine":669,"startCharacter":27,"endLine":706,"endCharacter":4},{"startLine":777,"startCharacter":29,"endLine":786,"endCharacter":8},{"startLine":2060,"startCharacter":60,"endLine":2069,"endCharacter":8},{"startLine":2291,"startCharacter":31,"endLine":2302,"endCharacter":8},{"startLine":183,"startCharacter":32,"endLine":192,"endCharacter":8},{"startLine":449,"startCharacter":70,"endLine":457,"endCharacter":8},{"startLine":1446,"startCharacter":29,"endLine":1452,"endCharacter":8},{"startLine":2434,"startCharacter":69,"endLine":2443,"endCharacter":8},{"startLine":58,"startCharacter":26,"endLine":63,"endCharacter":8},{"startLine":286,"startCharacter":28,"endLine":292,"endCharacter":8},{"startLine":318,"startCharacter":22,"endLine":350,"endCharacter":4},{"startLine":792,"startCharacter":24,"endLine":798,"endCharacter":8},{"startLine":879,"startCharacter":24,"endLine":915,"endCharacter":4},{"startLine":1313,"startCharacter":21,"endLine":1322,"endCharacter":8},{"startLine":1077,"startCharacter":21,"endLine":1114,"endCharacter":4},{"startLine":1367,"startCharacter":22,"endLine":1373,"endCharacter":8},{"startLine":140,"startCharacter":19,"endLine":170,"endCharacter":4},{"startLine":856,"startCharacter":62,"endLine":864,"endCharacter":8},{"startLine":880,"startCharacter":29,"endLine":885,"endCharacter":8},{"startLine":1015,"startCharacter":59,"endLine":1023,"endCharacter":8},{"startLine":1303,"startCharacter":56,"endLine":1311,"endCharacter":8},{"startLine":1656,"startCharacter":36,"endLine":1664,"endCharacter":8},{"startLine":1854,"startCharacter":27,"endLine":1860,"endCharacter":8},{"startLine":320,"startCharacter":26,"endLine":326,"endCharacter":8},{"startLine":558,"startCharacter":26,"endLine":564,"endCharacter":8},{"startLine":848,"startCharacter":24,"endLine":854,"endCharacter":8},{"startLine":1326,"startCharacter":20,"endLine":1363,"endCharacter":4},{"startLine":1454,"startCharacter":33,"endLine":1460,"endCharacter":8},{"startLine":1785,"startCharacter":24,"endLine":1796,"endCharacter":8},{"startLine":472,"startCharacter":25,"endLine":507,"endCharacter":4},{"startLine":1065,"startCharacter":29,"endLine":1073,"endCharacter":8},{"startLine":162,"startCharacter":67,"endLine":169,"endCharacter":8},{"startLine":207,"startCharacter":28,"endLine":213,"endCharacter":8},{"startLine":656,"startCharacter":26,"endLine":665,"endCharacter":8},{"startLine":918,"startCharacter":29,"endLine":956,"endCharacter":4},{"startLine":1007,"startCharacter":25,"endLine":1013,"endCharacter":8},{"startLine":2093,"startCharacter":26,"endLine":2102,"endCharacter":8},{"startLine":117,"startCharacter":58,"endLine":125,"endCharacter":8},{"startLine":1666,"startCharacter":66,"endLine":1677,"endCharacter":8},{"startLine":2031,"startCharacter":27,"endLine":2037,"endCharacter":8},{"startLine":85,"startCharacter":55,"endLine":94,"endCharacter":8},{"startLine":2340,"startCharacter":30,"endLine":2347,"endCharacter":8},{"startLine":750,"startCharacter":27,"endLine":787,"endCharacter":4},{"startLine":1117,"startCharacter":20,"endLine":1154,"endCharacter":4},{"startLine":1286,"startCharacter":22,"endLine":1323,"endCharacter":4},{"startLine":1544,"startCharacter":60,"endLine":1552,"endCharacter":8},{"startLine":2039,"startCharacter":37,"endLine":2045,"endCharacter":8},{"startLine":2047,"startCharacter":27,"endLine":2058,"endCharacter":8},{"startLine":73,"startCharacter":31,"endLine":83,"endCharacter":8},{"startLine":710,"startCharacter":27,"endLine":716,"endCharacter":8},{"startLine":1273,"startCharacter":30,"endLine":1282,"endCharacter":8},{"startLine":1405,"startCharacter":23,"endLine":1442,"endCharacter":4},{"startLine":236,"startCharacter":28,"endLine":242,"endCharacter":8},{"startLine":598,"startCharacter":25,"endLine":604,"endCharacter":8},{"startLine":1256,"startCharacter":30,"endLine":1261,"endCharacter":8},{"startLine":1748,"startCharacter":28,"endLine":1759,"endCharacter":8},{"startLine":1774,"startCharacter":27,"endLine":1783,"endCharacter":8},{"startLine":839,"startCharacter":20,"endLine":876,"endCharacter":4},{"startLine":1536,"startCharacter":26,"endLine":1542,"endCharacter":8},{"startLine":1873,"startCharacter":32,"endLine":1884,"endCharacter":8},{"startLine":2106,"startCharacter":33,"endLine":2317,"endCharacter":4},{"startLine":234,"startCharacter":23,"endLine":273,"endCharacter":4},{"startLine":488,"startCharacter":52,"endLine":496,"endCharacter":8},{"startLine":519,"startCharacter":25,"endLine":524,"endCharacter":8},{"startLine":2399,"startCharacter":101,"endLine":2407,"endCharacter":8},{"startLine":33,"startCharacter":22,"endLine":44,"endCharacter":8},{"startLine":276,"startCharacter":23,"endLine":315,"endCharacter":4},{"startLine":353,"startCharacter":23,"endLine":382,"endCharacter":4},{"startLine":1567,"startCharacter":23,"endLine":1604,"endCharacter":4},{"startLine":1844,"startCharacter":30,"endLine":1852,"endCharacter":8},{"startLine":2108,"startCharacter":33,"endLine":2120,"endCharacter":8},{"startLine":2263,"startCharacter":32,"endLine":2274,"endCharacter":8},{"startLine":16,"startCharacter":26,"endLine":22,"endCharacter":8},{"startLine":2445,"startCharacter":69,"endLine":2454,"endCharacter":8},{"startLine":142,"startCharacter":27,"endLine":150,"endCharacter":8},{"startLine":340,"startCharacter":31,"endLine":349,"endCharacter":8},{"startLine":536,"startCharacter":22,"endLine":545,"endCharacter":8},{"startLine":1248,"startCharacter":24,"endLine":1254,"endCharacter":8},{"startLine":1608,"startCharacter":33,"endLine":1619,"endCharacter":8},{"startLine":2082,"startCharacter":35,"endLine":2091,"endCharacter":8},{"startLine":2481,"startCharacter":46,"endLine":2490,"endCharacter":8},{"startLine":826,"startCharacter":30,"endLine":835,"endCharacter":8},{"startLine":2305,"startCharacter":33,"endLine":2316,"endCharacter":8},{"startLine":935,"startCharacter":28,"endLine":944,"endCharacter":8},{"startLine":1104,"startCharacter":23,"endLine":1113,"endCharacter":8},{"startLine":1263,"startCharacter":59,"endLine":1271,"endCharacter":8},{"startLine":1462,"startCharacter":31,"endLine":1471,"endCharacter":8},{"startLine":1486,"startCharacter":26,"endLine":1524,"endCharacter":4},{"startLine":1607,"startCharacter":27,"endLine":1731,"endCharacter":4},{"startLine":511,"startCharacter":29,"endLine":517,"endCharacter":8},{"startLine":194,"startCharacter":65,"endLine":201,"endCharacter":8},{"startLine":616,"startCharacter":29,"endLine":625,"endCharacter":8},{"startLine":2469,"startCharacter":70,"endLine":2478,"endCharacter":8},{"startLine":629,"startCharacter":23,"endLine":666,"endCharacter":4},{"startLine":1183,"startCharacter":34,"endLine":1192,"endCharacter":8},{"startLine":459,"startCharacter":23,"endLine":468,"endCharacter":8},{"startLine":816,"startCharacter":61,"endLine":824,"endCharacter":8},{"startLine":1214,"startCharacter":28,"endLine":1222,"endCharacter":8},{"startLine":1234,"startCharacter":27,"endLine":1243,"endCharacter":8},{"startLine":1335,"startCharacter":29,"endLine":1341,"endCharacter":8},{"startLine":127,"startCharacter":27,"endLine":136,"endCharacter":8},{"startLine":215,"startCharacter":34,"endLine":221,"endCharacter":8},{"startLine":510,"startCharacter":21,"endLine":546,"endCharacter":4},{"startLine":638,"startCharacter":26,"endLine":644,"endCharacter":8},{"startLine":646,"startCharacter":56,"endLine":654,"endCharacter":8},{"startLine":905,"startCharacter":28,"endLine":914,"endCharacter":8},{"startLine":1445,"startCharacter":21,"endLine":1483,"endCharacter":4},{"startLine":2174,"startCharacter":58,"endLine":2189,"endCharacter":8},{"startLine":800,"startCharacter":28,"endLine":806,"endCharacter":8},{"startLine":1527,"startCharacter":22,"endLine":1564,"endCharacter":4},{"startLine":791,"startCharacter":21,"endLine":836,"endCharacter":4},{"startLine":998,"startCharacter":19,"endLine":1035,"endCharacter":4},{"startLine":1055,"startCharacter":59,"endLine":1063,"endCharacter":8},{"startLine":1584,"startCharacter":62,"endLine":1592,"endCharacter":8},{"startLine":108,"startCharacter":33,"endLine":115,"endCharacter":8},{"startLine":223,"startCharacter":65,"endLine":230,"endCharacter":8},{"startLine":305,"startCharacter":28,"endLine":314,"endCharacter":8},{"startLine":355,"startCharacter":25,"endLine":361,"endCharacter":8},{"startLine":590,"startCharacter":31,"endLine":596,"endCharacter":8},{"startLine":1392,"startCharacter":25,"endLine":1401,"endCharacter":8},{"startLine":1912,"startCharacter":26,"endLine":1922,"endCharacter":8},{"startLine":2370,"startCharacter":54,"endLine":2376,"endCharacter":8},{"startLine":606,"startCharacter":62,"endLine":614,"endCharacter":8},{"startLine":1078,"startCharacter":25,"endLine":1084,"endCharacter":8},{"startLine":1528,"startCharacter":26,"endLine":1534,"endCharacter":8},{"startLine":1631,"startCharacter":28,"endLine":1642,"endCharacter":8},{"startLine":2018,"startCharacter":29,"endLine":2029,"endCharacter":8},{"startLine":2421,"startCharacter":80,"endLine":2431,"endCharacter":8},{"startLine":3,"startCharacter":23,"endLine":2516,"endCharacter":0},{"startLine":589,"startCharacter":21,"endLine":626,"endCharacter":4},{"startLine":709,"startCharacter":20,"endLine":747,"endCharacter":4},{"startLine":960,"startCharacter":23,"endLine":966,"endCharacter":8},{"startLine":1927,"startCharacter":22,"endLine":1938,"endCharacter":8},{"startLine":686,"startCharacter":52,"endLine":694,"endCharacter":8},{"startLine":1406,"startCharacter":27,"endLine":1412,"endCharacter":8},{"startLine":2277,"startCharacter":33,"endLine":2289,"endCharacter":8},{"startLine":726,"startCharacter":31,"endLine":735,"endCharacter":8},{"startLine":1503,"startCharacter":26,"endLine":1512,"endCharacter":8},{"startLine":252,"startCharacter":34,"endLine":262,"endCharacter":8},{"startLine":959,"startCharacter":21,"endLine":995,"endCharacter":4},{"startLine":1287,"startCharacter":23,"endLine":1293,"endCharacter":8},{"startLine":1576,"startCharacter":29,"endLine":1582,"endCharacter":8},{"startLine":1735,"startCharacter":32,"endLine":1746,"endCharacter":8},{"startLine":1899,"startCharacter":32,"endLine":1910,"endCharacter":8},{"startLine":975,"startCharacter":59,"endLine":983,"endCharacter":8},{"startLine":1126,"startCharacter":27,"endLine":1132,"endCharacter":8},{"startLine":2017,"startCharacter":30,"endLine":2103,"endCharacter":4},{"startLine":2323,"startCharacter":33,"endLine":2329,"endCharacter":8},{"startLine":328,"startCharacter":24,"endLine":338,"endCharacter":8},{"startLine":718,"startCharacter":27,"endLine":724,"endCharacter":8},{"startLine":1157,"startCharacter":23,"endLine":1193,"endCharacter":4},{"startLine":1830,"startCharacter":21,"endLine":1923,"endCharacter":4},{"startLine":1118,"startCharacter":24,"endLine":1124,"endCharacter":8},{"startLine":1205,"startCharacter":31,"endLine":1212,"endCharacter":8},{"startLine":1327,"startCharacter":23,"endLine":1333,"endCharacter":8},{"startLine":1514,"startCharacter":35,"endLine":1523,"endCharacter":8},{"startLine":372,"startCharacter":26,"endLine":381,"endCharacter":8},{"startLine":481,"startCharacter":29,"endLine":486,"endCharacter":8},{"startLine":866,"startCharacter":27,"endLine":875,"endCharacter":8},{"startLine":985,"startCharacter":28,"endLine":994,"endCharacter":8},{"startLine":1594,"startCharacter":34,"endLine":1603,"endCharacter":8},{"startLine":50,"startCharacter":26,"endLine":56,"endCharacter":8},{"startLine":278,"startCharacter":27,"endLine":284,"endCharacter":8},{"startLine":1432,"startCharacter":31,"endLine":1441,"endCharacter":8},{"startLine":1969,"startCharacter":64,"endLine":1978,"endCharacter":8},{"startLine":1980,"startCharacter":30,"endLine":1990,"endCharacter":8},{"startLine":2122,"startCharacter":39,"endLine":2132,"endCharacter":8},{"startLine":2360,"startCharacter":69,"endLine":2368,"endCharacter":8},{"startLine":678,"startCharacter":32,"endLine":684,"endCharacter":8},{"startLine":1134,"startCharacter":53,"endLine":1142,"endCharacter":8},{"startLine":1166,"startCharacter":31,"endLine":1172,"endCharacter":8},{"startLine":1422,"startCharacter":56,"endLine":1430,"endCharacter":8},{"startLine":1734,"startCharacter":33,"endLine":1811,"endCharacter":4},{"startLine":1814,"startCharacter":32,"endLine":1827,"endCharacter":4},{"startLine":2135,"startCharacter":29,"endLine":2148,"endCharacter":8},{"startLine":946,"startCharacter":32,"endLine":955,"endCharacter":8},{"startLine":1025,"startCharacter":31,"endLine":1034,"endCharacter":8},{"startLine":2505,"startCharacter":59,"endLine":2514,"endCharacter":8},{"startLine":294,"startCharacter":56,"endLine":303,"endCharacter":8},{"startLine":526,"startCharacter":65,"endLine":534,"endCharacter":8},{"startLine":1038,"startCharacter":22,"endLine":1074,"endCharacter":4},{"startLine":1247,"startCharacter":20,"endLine":1283,"endCharacter":4},{"startLine":1621,"startCharacter":30,"endLine":1629,"endCharacter":8},{"startLine":1948,"startCharacter":34,"endLine":1954,"endCharacter":8},{"startLine":65,"startCharacter":29,"endLine":71,"endCharacter":8},{"startLine":919,"startCharacter":28,"endLine":925,"endCharacter":8},{"startLine":1487,"startCharacter":28,"endLine":1493,"endCharacter":8},{"startLine":2191,"startCharacter":27,"endLine":2204,"endCharacter":8},{"startLine":264,"startCharacter":30,"endLine":272,"endCharacter":8},{"startLine":411,"startCharacter":70,"endLine":419,"endCharacter":12},{"startLine":751,"startCharacter":26,"endLine":757,"endCharacter":8},{"startLine":1353,"startCharacter":25,"endLine":1362,"endCharacter":8},{"startLine":1383,"startCharacter":55,"endLine":1390,"endCharacter":8},{"startLine":1761,"startCharacter":28,"endLine":1772,"endCharacter":8},{"startLine":175,"startCharacter":24,"endLine":181,"endCharacter":8},{"startLine":433,"startCharacter":23,"endLine":469,"endCharacter":4},{"startLine":442,"startCharacter":26,"endLine":447,"endCharacter":8},{"startLine":767,"startCharacter":59,"endLine":775,"endCharacter":8},{"startLine":1295,"startCharacter":34,"endLine":1301,"endCharacter":8},{"startLine":1886,"startCharacter":30,"endLine":1897,"endCharacter":8},{"startLine":8,"startCharacter":28,"endLine":14,"endCharacter":8},{"startLine":394,"startCharacter":35,"endLine":400,"endCharacter":12},{"startLine":1862,"startCharacter":61,"endLine":1871,"endCharacter":8},{"startLine":48,"startCharacter":28,"endLine":95,"endCharacter":4},{"startLine":421,"startCharacter":68,"endLine":429,"endCharacter":12},{"startLine":566,"startCharacter":63,"endLine":574,"endCharacter":8},{"startLine":670,"startCharacter":23,"endLine":676,"endCharacter":8},{"startLine":759,"startCharacter":24,"endLine":765,"endCharacter":8},{"startLine":1086,"startCharacter":29,"endLine":1092,"endCharacter":8},{"startLine":1343,"startCharacter":58,"endLine":1351,"endCharacter":8},{"startLine":2071,"startCharacter":31,"endLine":2080,"endCharacter":8},{"startLine":2331,"startCharacter":29,"endLine":2338,"endCharacter":8},{"startLine":2389,"startCharacter":28,"endLine":2396,"endCharacter":8},{"startLine":434,"startCharacter":30,"endLine":440,"endCharacter":8},{"startLine":696,"startCharacter":35,"endLine":705,"endCharacter":8},{"startLine":840,"startCharacter":27,"endLine":846,"endCharacter":8},{"startLine":1039,"startCharacter":24,"endLine":1045,"endCharacter":8},{"startLine":1094,"startCharacter":54,"endLine":1102,"endCharacter":8},{"startLine":402,"startCharacter":35,"endLine":409,"endCharacter":12},{"startLine":1196,"startCharacter":25,"endLine":1244,"endCharacter":4},{"startLine":1644,"startCharacter":34,"endLine":1654,"endCharacter":8},{"startLine":1718,"startCharacter":34,"endLine":1729,"endCharacter":8},{"startLine":473,"startCharacter":23,"endLine":479,"endCharacter":8},{"startLine":498,"startCharacter":54,"endLine":506,"endCharacter":8},{"startLine":1473,"startCharacter":31,"endLine":1482,"endCharacter":8},{"startLine":2163,"startCharacter":33,"endLine":2171,"endCharacter":8},{"startLine":173,"startCharacter":19,"endLine":202,"endCharacter":4},{"startLine":808,"startCharacter":27,"endLine":814,"endCharacter":8},{"startLine":1174,"startCharacter":63,"endLine":1181,"endCharacter":8},{"startLine":1554,"startCharacter":33,"endLine":1563,"endCharacter":8},{"startLine":1815,"startCharacter":25,"endLine":1826,"endCharacter":8},{"startLine":2457,"startCharacter":66,"endLine":2466,"endCharacter":8},{"startLine":1047,"startCharacter":30,"endLine":1053,"endCharacter":8},{"startLine":1144,"startCharacter":30,"endLine":1153,"endCharacter":8},{"startLine":244,"startCharacter":31,"endLine":250,"endCharacter":8},{"startLine":1197,"startCharacter":26,"endLine":1203,"endCharacter":8},{"startLine":2235,"startCharacter":31,"endLine":2247,"endCharacter":8},{"startLine":2349,"startCharacter":34,"endLine":2357,"endCharacter":8},{"startLine":895,"startCharacter":62,"endLine":903,"endCharacter":8},{"startLine":1366,"startCharacter":24,"endLine":1402,"endCharacter":4},{"startLine":1692,"startCharacter":24,"endLine":1703,"endCharacter":8},{"startLine":363,"startCharacter":32,"endLine":370,"endCharacter":8},{"startLine":968,"startCharacter":26,"endLine":973,"endCharacter":8},{"startLine":1158,"startCharacter":28,"endLine":1164,"endCharacter":8},{"startLine":1568,"startCharacter":27,"endLine":1574,"endCharacter":8},{"startLine":1831,"startCharacter":34,"endLine":1842,"endCharacter":8},{"startLine":1956,"startCharacter":20,"endLine":1967,"endCharacter":8},{"startLine":2379,"startCharacter":30,"endLine":2387,"endCharacter":8},{"startLine":100,"startCharacter":27,"endLine":106,"endCharacter":8},{"startLine":152,"startCharacter":59,"endLine":160,"endCharacter":8},{"startLine":549,"startCharacter":21,"endLine":586,"endCharacter":4},{"startLine":737,"startCharacter":27,"endLine":746,"endCharacter":8},{"startLine":887,"startCharacter":33,"endLine":893,"endCharacter":8},{"startLine":1224,"startCharacter":58,"endLine":1232,"endCharacter":8},{"startLine":1495,"startCharacter":28,"endLine":1501,"endCharacter":8},{"startLine":1705,"startCharacter":29,"endLine":1716,"endCharacter":8},{"startLine":2004,"startCharacter":61,"endLine":2013,"endCharacter":8},{"startLine":2206,"startCharacter":65,"endLine":2218,"endCharacter":8},{"startLine":630,"startCharacter":28,"endLine":636,"endCharacter":8},{"startLine":1679,"startCharacter":31,"endLine":1690,"endCharacter":8},{"startLine":2321,"startCharacter":21,"endLine":2515,"endCharacter":4},{"startLine":2493,"startCharacter":68,"endLine":2502,"endCharacter":8},{"startLine":576,"startCharacter":35,"endLine":585,"endCharacter":8},{"startLine":1375,"startCharacter":25,"endLine":1381,"endCharacter":8},{"startLine":24,"startCharacter":34,"endLine":31,"endCharacter":8},{"startLine":386,"startCharacter":31,"endLine":392,"endCharacter":12},{"startLine":927,"startCharacter":23,"endLine":933,"endCharacter":8},{"startLine":1926,"startCharacter":31,"endLine":2014,"endCharacter":4},{"startLine":1992,"startCharacter":27,"endLine":2002,"endCharacter":8},{"startLine":2221,"startCharacter":37,"endLine":2233,"endCharacter":8},{"startLine":1414,"startCharacter":32,"endLine":1420,"endCharacter":8},{"startLine":2150,"startCharacter":32,"endLine":2161,"endCharacter":8},{"startLine":2409,"startCharacter":81,"endLine":2419,"endCharacter":8},{"startLine":205,"startCharacter":25,"endLine":231,"endCharacter":4},{"startLine":5,"startCharacter":1,"endLine":5,"endCharacter":33,"kind":"comment"},{"startLine":47,"startCharacter":1,"endLine":47,"endCharacter":35,"kind":"comment"},{"startLine":97,"startCharacter":1,"endLine":97,"endCharacter":25,"kind":"comment"},{"startLine":139,"startCharacter":1,"endLine":139,"endCharacter":26,"kind":"comment"},{"startLine":172,"startCharacter":1,"endLine":172,"endCharacter":19,"kind":"comment"},{"startLine":204,"startCharacter":1,"endLine":204,"endCharacter":27,"kind":"comment"},{"startLine":233,"startCharacter":1,"endLine":233,"endCharacter":32,"kind":"comment"},{"startLine":275,"startCharacter":1,"endLine":275,"endCharacter":28,"kind":"comment"},{"startLine":317,"startCharacter":1,"endLine":317,"endCharacter":19,"kind":"comment"},{"startLine":352,"startCharacter":1,"endLine":352,"endCharacter":31,"kind":"comment"},{"startLine":384,"startCharacter":1,"endLine":384,"endCharacter":24,"kind":"comment"},{"startLine":432,"startCharacter":1,"endLine":432,"endCharacter":19,"kind":"comment"},{"startLine":471,"startCharacter":1,"endLine":471,"endCharacter":20,"kind":"comment"},{"startLine":509,"startCharacter":1,"endLine":509,"endCharacter":21,"kind":"comment"},{"startLine":548,"startCharacter":1,"endLine":548,"endCharacter":16,"kind":"comment"},{"startLine":588,"startCharacter":1,"endLine":588,"endCharacter":21,"kind":"comment"},{"startLine":628,"startCharacter":1,"endLine":628,"endCharacter":13,"kind":"comment"},{"startLine":668,"startCharacter":1,"endLine":668,"endCharacter":17,"kind":"comment"},{"startLine":708,"startCharacter":1,"endLine":708,"endCharacter":16,"kind":"comment"},{"startLine":749,"startCharacter":1,"endLine":749,"endCharacter":31,"kind":"comment"},{"startLine":790,"startCharacter":1,"endLine":790,"endCharacter":33,"kind":"comment"},{"startLine":838,"startCharacter":1,"endLine":838,"endCharacter":20,"kind":"comment"},{"startLine":878,"startCharacter":1,"endLine":878,"endCharacter":25,"kind":"comment"},{"startLine":917,"startCharacter":1,"endLine":917,"endCharacter":26,"kind":"comment"},{"startLine":958,"startCharacter":1,"endLine":958,"endCharacter":18,"kind":"comment"},{"startLine":997,"startCharacter":1,"endLine":997,"endCharacter":19,"kind":"comment"},{"startLine":1037,"startCharacter":1,"endLine":1037,"endCharacter":17,"kind":"comment"},{"startLine":1076,"startCharacter":1,"endLine":1076,"endCharacter":20,"kind":"comment"},{"startLine":1116,"startCharacter":1,"endLine":1116,"endCharacter":19,"kind":"comment"},{"startLine":1156,"startCharacter":1,"endLine":1156,"endCharacter":19,"kind":"comment"},{"startLine":1195,"startCharacter":1,"endLine":1195,"endCharacter":30,"kind":"comment"},{"startLine":1216,"startCharacter":1,"endLine":1216,"endCharacter":10,"kind":"comment"},{"startLine":1218,"startCharacter":1,"endLine":1218,"endCharacter":10,"kind":"comment"},{"startLine":1246,"startCharacter":1,"endLine":1246,"endCharacter":15,"kind":"comment"},{"startLine":1285,"startCharacter":1,"endLine":1285,"endCharacter":22,"kind":"comment"},{"startLine":1325,"startCharacter":1,"endLine":1325,"endCharacter":23,"kind":"comment"},{"startLine":1365,"startCharacter":1,"endLine":1365,"endCharacter":13,"kind":"comment"},{"startLine":1404,"startCharacter":1,"endLine":1404,"endCharacter":18,"kind":"comment"},{"startLine":1444,"startCharacter":1,"endLine":1444,"endCharacter":17,"kind":"comment"},{"startLine":1485,"startCharacter":1,"endLine":1485,"endCharacter":15,"kind":"comment"},{"startLine":1526,"startCharacter":1,"endLine":1526,"endCharacter":17,"kind":"comment"},{"startLine":1566,"startCharacter":1,"endLine":1566,"endCharacter":19,"kind":"comment"},{"startLine":1606,"startCharacter":1,"endLine":1606,"endCharacter":37,"kind":"comment"},{"startLine":1660,"startCharacter":1,"endLine":1660,"endCharacter":10,"kind":"comment"},{"startLine":1733,"startCharacter":1,"endLine":1733,"endCharacter":33,"kind":"comment"},{"startLine":1813,"startCharacter":1,"endLine":1813,"endCharacter":27,"kind":"comment"},{"startLine":1829,"startCharacter":1,"endLine":1829,"endCharacter":27,"kind":"comment"},{"startLine":1925,"startCharacter":1,"endLine":1925,"endCharacter":28,"kind":"comment"},{"startLine":2016,"startCharacter":1,"endLine":2016,"endCharacter":39,"kind":"comment"},{"startLine":2105,"startCharacter":1,"endLine":2105,"endCharacter":42,"kind":"comment"},{"startLine":2107,"startCharacter":1,"endLine":2107,"endCharacter":51,"kind":"comment"},{"startLine":2109,"startCharacter":1,"endLine":2109,"endCharacter":10,"kind":"comment"},{"startLine":2111,"startCharacter":1,"endLine":2111,"endCharacter":10,"kind":"comment"},{"startLine":2117,"startCharacter":1,"endLine":2117,"endCharacter":17,"kind":"comment"},{"startLine":2125,"startCharacter":1,"endLine":2125,"endCharacter":10,"kind":"comment"},{"startLine":2127,"startCharacter":1,"endLine":2127,"endCharacter":10,"kind":"comment"},{"startLine":2134,"startCharacter":1,"endLine":2134,"endCharacter":32,"kind":"comment"},{"startLine":2173,"startCharacter":1,"endLine":2173,"endCharacter":34,"kind":"comment"},{"startLine":2175,"startCharacter":1,"endLine":2175,"endCharacter":10,"kind":"comment"},{"startLine":2178,"startCharacter":1,"endLine":2178,"endCharacter":10,"kind":"comment"},{"startLine":2183,"startCharacter":1,"endLine":2183,"endCharacter":10,"kind":"comment"},{"startLine":2185,"startCharacter":1,"endLine":2185,"endCharacter":10,"kind":"comment"},{"startLine":2198,"startCharacter":1,"endLine":2198,"endCharacter":10,"kind":"comment"},{"startLine":2220,"startCharacter":1,"endLine":2220,"endCharacter":46,"kind":"comment"},{"startLine":2249,"startCharacter":1,"endLine":2249,"endCharacter":33,"kind":"comment"},{"startLine":2276,"startCharacter":1,"endLine":2276,"endCharacter":37,"kind":"comment"},{"startLine":2284,"startCharacter":1,"endLine":2284,"endCharacter":10,"kind":"comment"},{"startLine":2304,"startCharacter":1,"endLine":2304,"endCharacter":44,"kind":"comment"},{"startLine":2320,"startCharacter":1,"endLine":2320,"endCharacter":38,"kind":"comment"},{"startLine":2322,"startCharacter":1,"endLine":2322,"endCharacter":28,"kind":"comment"},{"startLine":2332,"startCharacter":1,"endLine":2332,"endCharacter":10,"kind":"comment"},{"startLine":2343,"startCharacter":1,"endLine":2343,"endCharacter":10,"kind":"comment"},{"startLine":2351,"startCharacter":1,"endLine":2351,"endCharacter":10,"kind":"comment"},{"startLine":2355,"startCharacter":1,"endLine":2355,"endCharacter":10,"kind":"comment"},{"startLine":2359,"startCharacter":1,"endLine":2359,"endCharacter":36,"kind":"comment"},{"startLine":2373,"startCharacter":1,"endLine":2373,"endCharacter":10,"kind":"comment"},{"startLine":2378,"startCharacter":1,"endLine":2378,"endCharacter":24,"kind":"comment"},{"startLine":2398,"startCharacter":1,"endLine":2398,"endCharacter":26,"kind":"comment"},{"startLine":2433,"startCharacter":1,"endLine":2433,"endCharacter":34,"kind":"comment"},{"startLine":2456,"startCharacter":1,"endLine":2456,"endCharacter":23,"kind":"comment"},{"startLine":2468,"startCharacter":1,"endLine":2468,"endCharacter":26,"kind":"comment"},{"startLine":2480,"startCharacter":1,"endLine":2480,"endCharacter":46,"kind":"comment"},{"startLine":2492,"startCharacter":1,"endLine":2492,"endCharacter":18,"kind":"comment"},{"startLine":2504,"startCharacter":1,"endLine":2504,"endCharacter":32,"kind":"comment"}]}
2025/01/13 14:38:26 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:38:27 util.go:36: Trace | Read Content-Length: 156 from Content-Length: 156
2025/01/13 14:38:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/riesig.dmf"}}}
2025/01/13 14:38:27 server.go:109: INFO  | Handle Method: textDocument/didClose 
2025/01/13 14:38:27 util.go:36: Trace | Read Content-Length: 167 from Content-Length: 167
2025/01/13 14:38:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"}}}
2025/01/13 14:38:27 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:38:27 foldingService.go:218: Trace | Found 6 Comment Ranges
2025/01/13 14:38:27 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":[{"startLine":7,"startCharacter":20,"endLine":10,"endCharacter":8},{"startLine":13,"startCharacter":18,"endLine":16,"endCharacter":8},{"startLine":35,"startCharacter":18,"endLine":53,"endCharacter":4},{"startLine":50,"startCharacter":35,"endLine":52,"endCharacter":8},{"startLine":54,"startCharacter":19,"endLine":58,"endCharacter":4},{"startLine":55,"startCharacter":27,"endLine":57,"endCharacter":9},{"startLine":3,"startCharacter":23,"endLine":59,"endCharacter":0},{"startLine":5,"startCharacter":19,"endLine":32,"endCharacter":4},{"startLine":37,"startCharacter":21,"endLine":38,"endCharacter":8},{"startLine":41,"startCharacter":21,"endLine":49,"endCharacter":8},{"startLine":19,"startCharacter":24,"endLine":24,"endCharacter":8},{"startLine":26,"startCharacter":26,"endLine":28,"endCharacter":8},{"startLine":4,"startCharacter":1,"endLine":4,"endCharacter":21,"kind":"comment"},{"startLine":12,"startCharacter":1,"endLine":12,"endCharacter":20,"kind":"comment"},{"startLine":18,"startCharacter":1,"endLine":18,"endCharacter":24,"kind":"comment"},{"startLine":36,"startCharacter":1,"endLine":36,"endCharacter":25,"kind":"comment"},{"startLine":42,"startCharacter":14,"endLine":43,"endCharacter":20,"kind":"comment"},{"startLine":46,"startCharacter":1,"endLine":46,"endCharacter":20,"kind":"comment"}]}
2025/01/13 14:38:27 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:38:27 util.go:36: Trace | Read Content-Length: 154 from Content-Length: 154
2025/01/13 14:38:27 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/test.dmf"}}}
2025/01/13 14:38:27 server.go:109: INFO  | Handle Method: textDocument/didClose 
2025/01/13 14:38:28 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 14:38:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 14:38:28 server.go:106: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 14:38:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 14:38:28 util.go:36: Trace | Read Content-Length: 430 from Content-Length: 430
2025/01/13 14:38:28 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand.klein {\n        struct Tetrapack {\n            arg int i;\n\n        }\n\n        entity Apfelsaft extends Tetrapack{\n            identifier(i);\n        }\n\n}"}}}
2025/01/13 14:38:28 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:38:28 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:38:28 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:38:29 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:38:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:38:29 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:38:29 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:38:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":[{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:38:29 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:38:29 util.go:36: Trace | Read Content-Length: 175 from Content-Length: 175
2025/01/13 14:38:29 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:38:29 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:38:29 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,0,8,2,11,0,0,3,4,11,0,0,5,5,11,0,0,6,5,11,0,1,8,6,11,0,0,7,9,11,0,1,12,3,11,0,0,4,3,11,0,0,4,1,11,0,4,8,6,11,0,0,7,9,11,0,0,10,7,11,0,0,8,9,11,0,1,12,10,11,0,0,11,1,11,0]}}
2025/01/13 14:40:05 util.go:36: Trace | Read Content-Length: 60 from Content-Length: 60
2025/01/13 14:40:05 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"shutdown","params":null}
2025/01/13 14:40:05 server.go:93: INFO  | Received Shutdown Request
2025/01/13 14:40:05 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7"}
2025/01/13 14:40:05 server.go:80: INFO  | Server Closed
2025/01/13 14:40:05 main.go:32: Server Shutdown
2025/01/13 14:40:06 fileService.go:35: Trace | FileChangeListeners: [0xc0000120f0]
2025/01/13 14:40:06 util.go:36: Trace | Read Content-Length: 3706 from Content-Length: 3706
2025/01/13 14:40:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"1","method":"initialize","params":{"processId":193851,"rootPath":"/home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","rootUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","initializationOptions":{},"capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","delete","rename"]},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{},"executeCommand":{"dynamicRegistration":true},"workspaceFolders":true,"configuration":true,"semanticTokens":{"refreshSupport":true},"codeLens":{"refreshSupport":true},"fileOperations":{"didRename":true,"willRename":true,"dynamicRegistration":true},"inlayHint":{"refreshSupport":true}},"textDocument":{"synchronization":{"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"completionItem":{"snippetSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"insertTextModeSupport":{"valueSet":[1,2]},"labelDetailsSupport":true},"completionList":{"itemDefaults":["editRange"]},"dynamicRegistration":true},"hover":{"contentFormat":["markdown","plaintext"],"dynamicRegistration":true},"signatureHelp":{"signatureInformation":{"parameterInformation":{"labelOffsetSupport":true}},"dynamicRegistration":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"symbolKind":{"valueSet":[18,17,5,14,9,10,22,24,8,1,12,11,20,6,2,3,21,16,19,25,4,7,15,23,26,13]},"hierarchicalDocumentSymbolSupport":true,"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"declaration":{"linkSupport":true,"dynamicRegistration":true},"definition":{"linkSupport":true,"dynamicRegistration":true},"typeDefinition":{"linkSupport":true,"dynamicRegistration":true},"implementation":{"linkSupport":true,"dynamicRegistration":true},"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"resolveSupport":{"properties":["edit"]},"dynamicRegistration":true},"codeLens":{"dynamicRegistration":true},"documentLink":{"dynamicRegistration":true},"colorProvider":{"dynamicRegistration":true},"rename":{"prepareSupport":true,"dynamicRegistration":true},"publishDiagnostics":{"relatedInformation":true,"tagSupport":{"valueSet":[1,2]},"codeDescriptionSupport":true,"dataSupport":true},"foldingRange":{"dynamicRegistration":true},"typeHierarchy":{"dynamicRegistration":true},"callHierarchy":{"dynamicRegistration":true},"semanticTokens":{"requests":{"range":false,"full":true},"tokenTypes":["namespace","type","class","enum","interface","struct","typeParameter","parameter","variable","property","enumMember","event","function","method","macro","keyword","modifier","comment","string","number","regexp","operator","decorator","label"],"tokenModifiers":["declaration","definition","readonly","static"],"formats":["relative"],"multilineTokenSupport":true,"serverCancelSupport":true,"dynamicRegistration":true},"inlayHint":{"dynamicRegistration":true}},"window":{"workDoneProgress":true,"showMessage":{},"showDocument":{"support":true}},"general":{"staleRequestSupport":{"cancel":true,"retryOnContentModified":[]},"positionEncodings":["utf-16"]}},"clientInfo":{"name":"IntelliJ","version":"IntelliJ IDEA (build IU-243.22562.145)"},"trace":"off","workspaceFolders":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest","name":"intellijTest"}]}}
2025/01/13 14:40:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"1","result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2},"declarationProvider":true,"referencesProvider":true,"foldingRangeProvider":true,"semanticTokensProvider":{"legend":{"tokenTypes":["namespace","type","enum","interface","struct","parameter","variable","property","enumMember","function","comment","keyword","modifier"],"tokenModifiers":["declaration","definition","readonly","deprecated","documentation"]},"full":true}},"serverInfo":{"name":"DMF LSP Server","version":"0.0.1"}}}
2025/01/13 14:40:06 util.go:36: Trace | Read Content-Length: 52 from Content-Length: 52
2025/01/13 14:40:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"initialized","params":{}}
2025/01/13 14:40:06 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 14:40:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 14:40:06 server.go:106: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 14:40:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 14:40:06 util.go:36: Trace | Read Content-Length: 430 from Content-Length: 430
2025/01/13 14:40:06 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand.klein {\n        struct Tetrapack {\n            arg int i;\n\n        }\n\n        entity Apfelsaft extends Tetrapack{\n            identifier(i);\n        }\n\n}"}}}
2025/01/13 14:40:06 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:40:06 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:40:06 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:40:07 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:40:07 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"2","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:07 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:07 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:07 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"2","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0}]}
2025/01/13 14:40:07 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:08 util.go:36: Trace | Read Content-Length: 155 from Content-Length: 155
2025/01/13 14:40:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:08 server.go:109: INFO  | Handle Method: textDocument/didClose 
2025/01/13 14:40:09 util.go:36: Trace | Read Content-Length: 86 from Content-Length: 86
2025/01/13 14:40:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{}}}
2025/01/13 14:40:09 server.go:106: ERROR | Method not Found: {2.0 [] workspace/didChangeConfiguration [123 34 115 101 116 116 105 110 103 115 34 58 123 125 125] <nil> <nil>}
2025/01/13 14:40:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","error":{"code":-32601,"message":"method not found"}}
2025/01/13 14:40:09 util.go:36: Trace | Read Content-Length: 430 from Content-Length: 430
2025/01/13 14:40:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","languageId":"text","version":1,"text":"dmf 1.0.0\nmodel \"dp_success\" version 0.0.0\n\npackage de.alex.brand.klein {\n        struct Tetrapack {\n            arg int i;\n\n        }\n\n        entity Apfelsaft extends Tetrapack{\n            identifier(i);\n        }\n\n}"}}}
2025/01/13 14:40:09 server.go:109: INFO  | Handle Method: textDocument/didOpen 
2025/01/13 14:40:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":1,"diagnostics":[]}}
2025/01/13 14:40:09 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:40:09 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:40:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"4","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:09 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:09 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"4","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0}]}
2025/01/13 14:40:09 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:09 util.go:36: Trace | Read Content-Length: 175 from Content-Length: 175
2025/01/13 14:40:09 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"3","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:09 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:09 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"3","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:16 util.go:36: Trace | Read Content-Length: 305 from Content-Length: 305
2025/01/13 14:40:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":2,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":22},"end":{"line":5,"character":22}},"rangeLength":0,"text":"\n            "}]}}
2025/01/13 14:40:16 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":2,"diagnostics":[]}}
2025/01/13 14:40:16 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:40:16 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":3,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":12}},"rangeLength":0,"text":"r"}]}}
2025/01/13 14:40:16 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":3,"diagnostics":[{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":13}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nstruct Tetrapack {\n            arg int i;\n            r\n\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:16 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 105 110 116 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 92 110 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:16 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:40:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"5","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:16 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:16 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"5","result":[{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8}]}
2025/01/13 14:40:16 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:16 util.go:36: Trace | Read Content-Length: 175 from Content-Length: 175
2025/01/13 14:40:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"6","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:16 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"6","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,5,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:16 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":4,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:40:16 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":4,"diagnostics":[{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":14}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nstruct Tetrapack {\n            arg int i;\n            re\n\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:16 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 105 110 116 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 92 110 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:16 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:40:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"7","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:16 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:16 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"7","result":[{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0}]}
2025/01/13 14:40:16 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:16 util.go:36: Trace | Read Content-Length: 175 from Content-Length: 175
2025/01/13 14:40:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"8","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:16 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"8","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,5,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:16 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:16 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":5,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":14},"end":{"line":6,"character":14}},"rangeLength":0,"text":"f"}]}}
2025/01/13 14:40:16 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:16 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":5,"diagnostics":[{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":15}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nstruct Tetrapack {\n            arg int i;\n            ref\n\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:16 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 53 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 105 110 116 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 92 110 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:17 util.go:36: Trace | Read Content-Length: 168 from Content-Length: 168
2025/01/13 14:40:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"9","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:17 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:17 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"9","result":[{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8}]}
2025/01/13 14:40:17 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:17 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"10","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:17 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"10","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:17 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":6,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"rangeLength":0,"text":" "}]}}
2025/01/13 14:40:17 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":6,"diagnostics":[{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":15}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nstruct Tetrapack {\n            arg int i;\n            ref \n\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:17 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 53 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 105 110 116 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 92 110 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:17 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"11","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:17 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:17 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"11","result":[{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0}]}
2025/01/13 14:40:17 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:17 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:17 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"12","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:17 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:17 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"12","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:18 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:18 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":7,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":16}},"rangeLength":0,"text":"."}]}}
2025/01/13 14:40:18 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:18 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":7,"diagnostics":[{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":17}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nstruct Tetrapack {\n            arg int i;\n            ref .\n\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:18 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 105 110 116 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 46 92 110 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:18 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:18 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"13","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:18 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:18 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:18 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"13","result":[{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8}]}
2025/01/13 14:40:18 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:18 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:18 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"14","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:18 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:18 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"14","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:19 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":8,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":17},"end":{"line":6,"character":17}},"rangeLength":0,"text":"A"}]}}
2025/01/13 14:40:19 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":8,"diagnostics":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":18}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:16\nref .A\n    ^^\nReferenzierter Typ nicht gefunden!\n","message":"Referenzierter Typ nicht gefunden!"},{"range":{"start":{"line":6,"character":18},"end":{"line":6,"character":18}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:18\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":18}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .A\n^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:19 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 56 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 54 92 110 114 101 102 32 46 65 92 110 32 32 32 32 94 94 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 56 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 56 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 56 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 56 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 92 110 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:19 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"15","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:19 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:19 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"15","result":[{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8}]}
2025/01/13 14:40:19 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:19 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:19 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"16","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:19 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:19 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"16","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:20 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":9,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":18},"end":{"line":6,"character":18}},"rangeLength":0,"text":"p"}]}}
2025/01/13 14:40:20 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":9,"diagnostics":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":19}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:16\nref .Ap\n    ^^^\nReferenzierter Typ nicht gefunden!\n","message":"Referenzierter Typ nicht gefunden!"},{"range":{"start":{"line":6,"character":19},"end":{"line":6,"character":19}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:19\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":19}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .Ap\n^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:20 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 54 92 110 114 101 102 32 46 65 112 92 110 32 32 32 32 94 94 94 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 57 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 57 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 112 92 110 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:20 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"17","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:20 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:20 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"17","result":[{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8}]}
2025/01/13 14:40:20 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:20 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"18","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:20 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"18","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:20 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":10,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":19},"end":{"line":6,"character":19}},"rangeLength":0,"text":"f"}]}}
2025/01/13 14:40:20 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":10,"diagnostics":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":20}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:16\nref .Apf\n    ^^^^\nReferenzierter Typ nicht gefunden!\n","message":"Referenzierter Typ nicht gefunden!"},{"range":{"start":{"line":6,"character":20},"end":{"line":6,"character":20}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:20\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":20}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .Apf\n^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:20 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 48 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 54 92 110 114 101 102 32 46 65 112 102 92 110 32 32 32 32 94 94 94 94 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 48 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 48 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 50 48 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 48 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 112 102 92 110 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:20 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"20","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:20 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"20","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:20 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"19","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:20 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:20 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"19","result":[{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8}]}
2025/01/13 14:40:20 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:20 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":11,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":20},"end":{"line":6,"character":20}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:40:20 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":11,"diagnostics":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":21}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:16\nref .Apfe\n    ^^^^^\nReferenzierter Typ nicht gefunden!\n","message":"Referenzierter Typ nicht gefunden!"},{"range":{"start":{"line":6,"character":21},"end":{"line":6,"character":21}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:21\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":21}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .Apfe\n^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:20 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 49 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 54 92 110 114 101 102 32 46 65 112 102 101 92 110 32 32 32 32 94 94 94 94 94 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 49 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 49 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 50 49 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 49 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 112 102 101 92 110 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:20 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"21","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:20 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:20 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"21","result":[{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8}]}
2025/01/13 14:40:20 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:20 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:20 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"22","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:20 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:20 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"22","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:21 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":12,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":21},"end":{"line":6,"character":21}},"rangeLength":0,"text":"h"}]}}
2025/01/13 14:40:21 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":12,"diagnostics":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":22}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:16\nref .Apfeh\n    ^^^^^^\nReferenzierter Typ nicht gefunden!\n","message":"Referenzierter Typ nicht gefunden!"},{"range":{"start":{"line":6,"character":22},"end":{"line":6,"character":22}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:22\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":22}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .Apfeh\n^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:21 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 54 92 110 114 101 102 32 46 65 112 102 101 104 92 110 32 32 32 32 94 94 94 94 94 94 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 50 50 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 112 102 101 104 92 110 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:21 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"23","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:21 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:21 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"23","result":[{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8}]}
2025/01/13 14:40:21 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:21 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"24","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:21 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"24","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:21 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":13,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":21},"end":{"line":6,"character":22}},"rangeLength":1,"text":""}]}}
2025/01/13 14:40:21 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":13,"diagnostics":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":21}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:16\nref .Apfe\n    ^^^^^\nReferenzierter Typ nicht gefunden!\n","message":"Referenzierter Typ nicht gefunden!"},{"range":{"start":{"line":6,"character":21},"end":{"line":6,"character":21}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:21\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":21}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .Apfe\n^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:21 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 49 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 54 92 110 114 101 102 32 46 65 112 102 101 92 110 32 32 32 32 94 94 94 94 94 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 49 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 49 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 50 49 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 49 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 112 102 101 92 110 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:21 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"25","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:21 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:21 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"25","result":[{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8}]}
2025/01/13 14:40:21 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:21 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"26","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:21 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"26","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:21 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":14,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":21},"end":{"line":6,"character":21}},"rangeLength":0,"text":"l"}]}}
2025/01/13 14:40:21 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":14,"diagnostics":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":22}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:16\nref .Apfel\n    ^^^^^^\nReferenzierter Typ nicht gefunden!\n","message":"Referenzierter Typ nicht gefunden!"},{"range":{"start":{"line":6,"character":22},"end":{"line":6,"character":22}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:22\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":22}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .Apfel\n^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:21 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 54 92 110 114 101 102 32 46 65 112 102 101 108 92 110 32 32 32 32 94 94 94 94 94 94 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 50 50 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 50 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 112 102 101 108 92 110 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:21 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"27","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:21 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:21 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"27","result":[{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8}]}
2025/01/13 14:40:21 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:21 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:21 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"28","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:21 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:21 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"28","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:22 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":15,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":22},"end":{"line":6,"character":22}},"rangeLength":0,"text":"s"}]}}
2025/01/13 14:40:22 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":15,"diagnostics":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":23}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:16\nref .Apfels\n    ^^^^^^^\nReferenzierter Typ nicht gefunden!\n","message":"Referenzierter Typ nicht gefunden!"},{"range":{"start":{"line":6,"character":23},"end":{"line":6,"character":23}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:23\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":23}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .Apfels\n^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 54 92 110 114 101 102 32 46 65 112 102 101 108 115 92 110 32 32 32 32 94 94 94 94 94 94 94 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 50 51 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 112 102 101 108 115 92 110 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:22 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"29","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:22 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:22 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"29","result":[{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0}]}
2025/01/13 14:40:22 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:22 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"30","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:22 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"30","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:22 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":16,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":23},"end":{"line":6,"character":23}},"rangeLength":0,"text":"a"}]}}
2025/01/13 14:40:22 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":16,"diagnostics":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:16\nref .Apfelsa\n    ^^^^^^^^\nReferenzierter Typ nicht gefunden!\n","message":"Referenzierter Typ nicht gefunden!"},{"range":{"start":{"line":6,"character":24},"end":{"line":6,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:24\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .Apfelsa\n^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 54 92 110 114 101 102 32 46 65 112 102 101 108 115 97 92 110 32 32 32 32 94 94 94 94 94 94 94 94 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 50 52 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 112 102 101 108 115 97 92 110 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:22 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"31","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:22 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:22 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"31","result":[{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8}]}
2025/01/13 14:40:22 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:22 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"32","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:22 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"32","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:22 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":17,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":24},"end":{"line":6,"character":24}},"rangeLength":0,"text":"r"}]}}
2025/01/13 14:40:22 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":17,"diagnostics":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":25}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:16\nref .Apfelsar\n    ^^^^^^^^^\nReferenzierter Typ nicht gefunden!\n","message":"Referenzierter Typ nicht gefunden!"},{"range":{"start":{"line":6,"character":25},"end":{"line":6,"character":25}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:25\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":25}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .Apfelsar\n^^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 54 92 110 114 101 102 32 46 65 112 102 101 108 115 97 114 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 50 53 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 112 102 101 108 115 97 114 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:22 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"33","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:22 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"33","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:22 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"34","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:22 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:22 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"34","result":[{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8}]}
2025/01/13 14:40:22 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:22 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":18,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":24},"end":{"line":6,"character":25}},"rangeLength":1,"text":""}]}}
2025/01/13 14:40:22 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":18,"diagnostics":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:16\nref .Apfelsa\n    ^^^^^^^^\nReferenzierter Typ nicht gefunden!\n","message":"Referenzierter Typ nicht gefunden!"},{"range":{"start":{"line":6,"character":24},"end":{"line":6,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:24\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .Apfelsa\n^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 54 92 110 114 101 102 32 46 65 112 102 101 108 115 97 92 110 32 32 32 32 94 94 94 94 94 94 94 94 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 50 52 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 112 102 101 108 115 97 92 110 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:22 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:22 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":19,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":24},"end":{"line":6,"character":24}},"rangeLength":0,"text":"f"}]}}
2025/01/13 14:40:22 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:22 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":19,"diagnostics":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":25}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:16\nref .Apfelsaf\n    ^^^^^^^^^\nReferenzierter Typ nicht gefunden!\n","message":"Referenzierter Typ nicht gefunden!"},{"range":{"start":{"line":6,"character":25},"end":{"line":6,"character":25}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:25\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":25}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .Apfelsaf\n^^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:22 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 49 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 54 92 110 114 101 102 32 46 65 112 102 101 108 115 97 102 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 114 32 84 121 112 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 50 53 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 112 102 101 108 115 97 102 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:23 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"35","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:23 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:23 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"35","result":[{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8}]}
2025/01/13 14:40:23 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:23 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"36","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:23 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"36","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:23 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":20,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":25},"end":{"line":6,"character":25}},"rangeLength":0,"text":"t"}]}}
2025/01/13 14:40:23 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":20,"diagnostics":[{"range":{"start":{"line":6,"character":26},"end":{"line":6,"character":26}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:26\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":26}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .Apfelsaft\n^^^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 54 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 50 54 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 54 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 112 102 101 108 115 97 102 116 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:23 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"37","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:23 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:23 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"37","result":[{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8}]}
2025/01/13 14:40:23 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:23 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"38","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:23 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"38","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:23 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":21,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":26},"end":{"line":6,"character":26}},"rangeLength":0,"text":" "}]}}
2025/01/13 14:40:23 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":21,"diagnostics":[{"range":{"start":{"line":6,"character":26},"end":{"line":6,"character":26}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:26\n\n\nIdentifier Node ist missing\n","message":"Identifier Node ist missing"},{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":26}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .Apfelsaft\n^^^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 54 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 54 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 50 54 92 110 92 110 92 110 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 73 100 101 110 116 105 102 105 101 114 32 78 111 100 101 32 105 115 116 32 109 105 115 115 105 110 103 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 54 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 112 102 101 108 115 97 102 116 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:23 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"39","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:23 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:23 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"39","result":[{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8}]}
2025/01/13 14:40:23 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:23 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"40","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:23 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"40","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:23 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":22,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":27},"end":{"line":6,"character":27}},"rangeLength":0,"text":"a"}]}}
2025/01/13 14:40:23 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":22,"diagnostics":[{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":28}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:7:12\nref .Apfelsaft a\n^^^^^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:23 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 56 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 55 58 49 50 92 110 114 101 102 32 46 65 112 102 101 108 115 97 102 116 32 97 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:23 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"41","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:23 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:23 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"41","result":[{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8}]}
2025/01/13 14:40:23 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:23 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:23 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"42","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:23 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:23 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"42","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:24 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":23,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":28},"end":{"line":6,"character":28}},"rangeLength":0,"text":";"}]}}
2025/01/13 14:40:24 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":23,"diagnostics":[]}}
2025/01/13 14:40:24 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:40:24 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"43","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:24 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:24 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"43","result":[{"startLine":3,"startCharacter":29,"endLine":14,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":8,"endCharacter":8},{"startLine":10,"startCharacter":43,"endLine":12,"endCharacter":8}]}
2025/01/13 14:40:24 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:24 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:24 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"44","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:24 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:24 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"44","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:25 util.go:36: Trace | Read Content-Length: 291 from Content-Length: 291
2025/01/13 14:40:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":24,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":6,"character":29},"end":{"line":7,"character":0}},"rangeLength":1,"text":""}]}}
2025/01/13 14:40:25 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":24,"diagnostics":[]}}
2025/01/13 14:40:25 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:40:25 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"45","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:25 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:25 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"45","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:40:25 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:25 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:25 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"46","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:25 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:25 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"46","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,3,11,0,1,12,3,11,0,3,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:33 util.go:36: Trace | Read Content-Length: 206 from Content-Length: 206
2025/01/13 14:40:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"47","method":"textDocument/declaration","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"position":{"line":10,"character":24}}}
2025/01/13 14:40:33 server.go:109: INFO  | Handle Method: textDocument/declaration 
2025/01/13 14:40:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"47","result":[{"originSelectionRange":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"targetUri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","targetRange":{"start":{"line":5,"character":12},"end":{"line":5,"character":22}},"targetSelectionRange":{"start":{"line":5,"character":12},"end":{"line":5,"character":22}}}]}
2025/01/13 14:40:33 util.go:36: Trace | Read Content-Length: 243 from Content-Length: 243
2025/01/13 14:40:33 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"48","method":"textDocument/references","params":{"context":{"includeDeclaration":true},"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"position":{"line":10,"character":24}}}
2025/01/13 14:40:33 server.go:109: INFO  | Handle Method: textDocument/references 
2025/01/13 14:40:33 referenceService.go:91: Trace | Found Nodes for References: [0xc0001e8680 <nil> <nil> 0xc0001e86e0]
2025/01/13 14:40:33 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"48","result":[{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","range":{"start":{"line":5,"character":12},"end":{"line":5,"character":22}}},{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}}}]}
2025/01/13 14:40:33 referenceService.go:102: Trace | Finished References request
2025/01/13 14:40:37 util.go:36: Trace | Read Content-Length: 397 from Content-Length: 397
2025/01/13 14:40:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":25,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":16},"end":{"line":5,"character":19}},"rangeLength":3,"text":""},{"range":{"start":{"line":5,"character":16},"end":{"line":5,"character":16}},"rangeLength":0,"text":"d"}]}}
2025/01/13 14:40:37 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":25,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":6,"character":29}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg d i;\n            ref .Apfelsaft a;\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 100 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 46 65 112 102 101 108 115 97 102 116 32 97 59 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:37 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"49","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:37 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"49","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:37 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"50","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:37 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:37 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"50","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:40:37 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:37 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":26,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":17},"end":{"line":5,"character":17}},"rangeLength":0,"text":"a"}]}}
2025/01/13 14:40:37 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":26,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":6,"character":29}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg da i;\n            ref .Apfelsaft a;\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:37 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 100 97 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 46 65 112 102 101 108 115 97 102 116 32 97 59 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:37 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"51","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:37 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:37 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"51","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0}]}
2025/01/13 14:40:37 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:37 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:37 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"52","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:37 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:37 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"52","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:38 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":27,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":17},"end":{"line":5,"character":18}},"rangeLength":1,"text":""}]}}
2025/01/13 14:40:38 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":27,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":6,"character":29}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg d i;\n            ref .Apfelsaft a;\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:38 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 100 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 46 65 112 102 101 108 115 97 102 116 32 97 59 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:38 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"53","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:38 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"53","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:38 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"54","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:38 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:38 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"54","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:40:38 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:38 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":28,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":17},"end":{"line":5,"character":17}},"rangeLength":0,"text":"p"}]}}
2025/01/13 14:40:38 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":28,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":6,"character":29}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg dp i;\n            ref .Apfelsaft a;\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:38 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 100 112 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 46 65 112 102 101 108 115 97 102 116 32 97 59 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:38 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":29,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":18},"end":{"line":5,"character":18}},"rangeLength":0,"text":"o"}]}}
2025/01/13 14:40:38 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":29,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":6,"character":29}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg dpo i;\n            ref .Apfelsaft a;\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:38 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 50 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 100 112 111 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 46 65 112 102 101 108 115 97 102 116 32 97 59 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:38 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"55","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:38 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:38 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"55","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0}]}
2025/01/13 14:40:38 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:38 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:38 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"56","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:38 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:38 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"56","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":30,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":18},"end":{"line":5,"character":19}},"rangeLength":1,"text":""}]}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":30,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":6,"character":29}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg dp i;\n            ref .Apfelsaft a;\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:39 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 100 112 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 46 65 112 102 101 108 115 97 102 116 32 97 59 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"57","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"57","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"58","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:39 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"58","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0}]}
2025/01/13 14:40:39 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":31,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":17},"end":{"line":5,"character":18}},"rangeLength":1,"text":""}]}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":31,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":6,"character":29}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg d i;\n            ref .Apfelsaft a;\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:39 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 100 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 46 65 112 102 101 108 115 97 102 116 32 97 59 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"59","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:39 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"59","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:40:39 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"60","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"60","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":32,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":17},"end":{"line":5,"character":17}},"rangeLength":0,"text":"o"}]}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":32,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":6,"character":29}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg do i;\n            ref .Apfelsaft a;\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:39 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 100 111 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 46 65 112 102 101 108 115 97 102 116 32 97 59 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"61","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:39 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"61","result":[{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:40:39 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"62","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"62","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":33,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":18},"end":{"line":5,"character":18}},"rangeLength":0,"text":"u"}]}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":33,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":6,"character":29}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg dou i;\n            ref .Apfelsaft a;\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:39 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 100 111 117 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 46 65 112 102 101 108 115 97 102 116 32 97 59 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"63","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:39 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"63","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:40:39 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"64","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"64","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":34,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":19},"end":{"line":5,"character":19}},"rangeLength":0,"text":"b"}]}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":34,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":6,"character":29}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg doub i;\n            ref .Apfelsaft a;\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:39 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 100 111 117 98 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 46 65 112 102 101 108 115 97 102 116 32 97 59 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"65","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:39 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"65","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:40:39 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:39 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:39 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"66","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:39 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:39 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"66","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:40 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":35,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":20},"end":{"line":5,"character":20}},"rangeLength":0,"text":"l"}]}}
2025/01/13 14:40:40 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":35,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":6,"character":29}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg doubl i;\n            ref .Apfelsaft a;\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:40 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 100 111 117 98 108 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 46 65 112 102 101 108 115 97 102 116 32 97 59 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:40 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":36,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":21},"end":{"line":5,"character":21}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:40:40 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":36,"diagnostics":[]}}
2025/01/13 14:40:40 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:40:40 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"67","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:40 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:40 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"67","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:40:40 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:40 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:40 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"68","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:40 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:40 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"68","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,6,11,0,1,12,3,11,0,3,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:42 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":37,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":21},"end":{"line":5,"character":22}},"rangeLength":1,"text":""}]}}
2025/01/13 14:40:42 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":37,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":6,"character":29}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg doubl i;\n            ref .Apfelsaft a;\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:42 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 100 111 117 98 108 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 46 65 112 102 101 108 115 97 102 116 32 97 59 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:42 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"69","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:42 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:42 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"69","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:40:42 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:42 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"70","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:42 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"70","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:42 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":38,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":21},"end":{"line":5,"character":21}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:40:42 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":38,"diagnostics":[]}}
2025/01/13 14:40:42 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:40:42 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"71","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:42 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:42 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"71","result":[{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0}]}
2025/01/13 14:40:42 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:42 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:42 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"72","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:42 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:42 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"72","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,6,11,0,1,12,3,11,0,3,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:43 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":39,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":22},"end":{"line":5,"character":22}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:40:43 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":39,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":24},"end":{"line":5,"character":25}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:24\ni\n^\nSemikolon ist error\n","message":"Semikolon ist error"}]}}
2025/01/13 14:40:43 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 51 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 50 52 92 110 105 92 110 94 92 110 83 101 109 105 107 111 108 111 110 32 105 115 116 32 101 114 114 111 114 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 83 101 109 105 107 111 108 111 110 32 105 115 116 32 101 114 114 111 114 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:43 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"73","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:43 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:43 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"73","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:40:43 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:43 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"74","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:43 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"74","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,6,11,0,1,12,3,11,0,3,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:43 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":40,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":22},"end":{"line":5,"character":23}},"rangeLength":1,"text":""}]}}
2025/01/13 14:40:43 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":40,"diagnostics":[]}}
2025/01/13 14:40:43 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:40:43 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"76","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:43 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"76","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,6,11,0,1,12,3,11,0,3,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:43 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"75","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:43 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:43 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"75","result":[{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:40:43 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:43 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":41,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":21},"end":{"line":5,"character":22}},"rangeLength":1,"text":""}]}}
2025/01/13 14:40:43 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":41,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":6,"character":29}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\nstruct Tetrapack {\n            arg doubl i;\n            ref .Apfelsaft a;\n        }\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nunbekannte Node\n","message":"unbekannte Node"}]}}
2025/01/13 14:40:43 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 49 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 54 44 34 99 104 97 114 97 99 116 101 114 34 58 50 57 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 115 116 114 117 99 116 32 84 101 116 114 97 112 97 99 107 32 123 92 110 32 32 32 32 32 32 32 32 32 32 32 32 97 114 103 32 100 111 117 98 108 32 105 59 92 110 32 32 32 32 32 32 32 32 32 32 32 32 114 101 102 32 46 65 112 102 101 108 115 97 102 116 32 97 59 92 110 32 32 32 32 32 32 32 32 125 92 110 32 32 32 32 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 117 110 98 101 107 97 110 110 116 101 32 78 111 100 101 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:43 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"77","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:43 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:43 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"77","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:40:43 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:43 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:43 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"78","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:43 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:43 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"78","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,4,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:45 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:40:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":42,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":21},"end":{"line":5,"character":21}},"rangeLength":0,"text":"e"}]}}
2025/01/13 14:40:45 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":42,"diagnostics":[]}}
2025/01/13 14:40:45 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 50 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:40:45 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"79","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:45 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:45 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"79","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:40:45 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:45 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:45 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"80","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:45 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:45 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"80","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,6,11,0,1,12,3,11,0,3,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:40:52 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:40:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":43,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":24},"end":{"line":5,"character":25}},"rangeLength":1,"text":""}]}}
2025/01/13 14:40:52 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:40:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":43,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\narg double i\n^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:40:52 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 51 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 97 114 103 32 100 111 117 98 108 101 32 105 92 110 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:40:52 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:40:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"81","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:52 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:40:52 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:40:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"81","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:40:52 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:40:52 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:40:52 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"82","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:40:52 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:40:52 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"82","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,6,11,0,1,12,3,11,0,3,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:41:00 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:41:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":44,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":24},"end":{"line":5,"character":24}},"rangeLength":0,"text":"s"}]}}
2025/01/13 14:41:00 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:41:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":44,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":25}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\narg double is\n^^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:41:00 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 52 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 97 114 103 32 100 111 117 98 108 101 32 105 115 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:41:00 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:41:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"83","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:41:00 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:41:00 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:41:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"83","result":[{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:41:00 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:41:00 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:41:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"84","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:41:00 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:41:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"84","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,6,11,0,1,12,3,11,0,3,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:41:00 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:41:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":45,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":25}},"rangeLength":0,"text":"a"}]}}
2025/01/13 14:41:00 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:41:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":45,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":26}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\narg double isa\n^^^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:41:00 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 53 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 50 54 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 97 114 103 32 100 111 117 98 108 101 32 105 115 97 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:41:00 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:41:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":46,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":26},"end":{"line":5,"character":26}},"rangeLength":0,"text":"d"}]}}
2025/01/13 14:41:00 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:41:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":46,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":27}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\narg double isad\n^^^^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:41:00 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 54 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 50 55 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 97 114 103 32 100 111 117 98 108 101 32 105 115 97 100 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:41:00 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:41:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"85","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:41:00 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:41:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"85","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,6,11,0,1,12,3,11,0,3,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:41:00 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:41:00 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"86","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:41:00 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:41:00 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:41:00 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"86","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:41:00 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:41:02 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:41:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":47,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":26},"end":{"line":5,"character":27}},"rangeLength":1,"text":""}]}}
2025/01/13 14:41:02 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:41:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":47,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":26}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\narg double isa\n^^^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:41:02 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 55 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 50 54 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 97 114 103 32 100 111 117 98 108 101 32 105 115 97 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:41:02 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:41:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"87","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:41:02 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:41:02 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:41:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"87","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:41:02 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:41:02 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:41:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"88","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:41:02 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:41:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"88","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,6,11,0,1,12,3,11,0,3,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:41:02 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:41:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":48,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":25},"end":{"line":5,"character":26}},"rangeLength":1,"text":""}]}}
2025/01/13 14:41:02 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:41:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":48,"diagnostics":[{"range":{"start":{"line":10,"character":23},"end":{"line":10,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:11:23\nidentifier(i);\n           ^  \nReferenzierte Variable nicht gefunden!\n","message":"Referenzierte Variable nicht gefunden!"},{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":25}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\narg double is\n^^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:41:02 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 56 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 51 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 49 48 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 49 49 58 50 51 92 110 105 100 101 110 116 105 102 105 101 114 40 105 41 59 92 110 32 32 32 32 32 32 32 32 32 32 32 94 32 32 92 110 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 82 101 102 101 114 101 110 122 105 101 114 116 101 32 86 97 114 105 97 98 108 101 32 110 105 99 104 116 32 103 101 102 117 110 100 101 110 33 34 125 44 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 50 53 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 97 114 103 32 100 111 117 98 108 101 32 105 115 92 110 94 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:41:02 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:41:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"89","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:41:02 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:41:02 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:41:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"89","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:41:02 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:41:02 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:41:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"90","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:41:02 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:41:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"90","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,6,11,0,1,12,3,11,0,3,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:41:02 util.go:36: Trace | Read Content-Length: 292 from Content-Length: 292
2025/01/13 14:41:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":49,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":24},"end":{"line":5,"character":25}},"rangeLength":1,"text":""}]}}
2025/01/13 14:41:02 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:41:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":49,"diagnostics":[{"range":{"start":{"line":5,"character":12},"end":{"line":5,"character":24}},"severity":1,"source":"FehlerStelle in Position file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf:6:12\narg double i\n^^^^^^^^^^^^\nes fehlt ein Semikolon\n","message":"es fehlt ein Semikolon"}]}}
2025/01/13 14:41:02 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 52 57 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 123 34 114 97 110 103 101 34 58 123 34 115 116 97 114 116 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 49 50 125 44 34 101 110 100 34 58 123 34 108 105 110 101 34 58 53 44 34 99 104 97 114 97 99 116 101 114 34 58 50 52 125 125 44 34 115 101 118 101 114 105 116 121 34 58 49 44 34 115 111 117 114 99 101 34 58 34 70 101 104 108 101 114 83 116 101 108 108 101 32 105 110 32 80 111 115 105 116 105 111 110 32 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 58 54 58 49 50 92 110 97 114 103 32 100 111 117 98 108 101 32 105 92 110 94 94 94 94 94 94 94 94 94 94 94 94 92 110 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 92 110 34 44 34 109 101 115 115 97 103 101 34 58 34 101 115 32 102 101 104 108 116 32 101 105 110 32 83 101 109 105 107 111 108 111 110 34 125 93 125] <nil> <nil>}
2025/01/13 14:41:02 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:41:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"91","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:41:02 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:41:02 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:41:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"91","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8}]}
2025/01/13 14:41:02 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:41:02 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:41:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"92","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:41:02 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:41:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"92","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,6,11,0,1,12,3,11,0,3,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:41:02 util.go:36: Trace | Read Content-Length: 293 from Content-Length: 293
2025/01/13 14:41:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"version":50,"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"},"contentChanges":[{"range":{"start":{"line":5,"character":24},"end":{"line":5,"character":24}},"rangeLength":0,"text":";"}]}}
2025/01/13 14:41:02 server.go:109: INFO  | Handle Method: textDocument/didChange 
2025/01/13 14:41:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf","version":50,"diagnostics":[]}}
2025/01/13 14:41:02 diagsnosticsService.go:102: INFO  | Published Diagnostics: {2.0 [] textDocument/publishDiagnostics [123 34 117 114 105 34 58 34 102 105 108 101 58 47 47 47 104 111 109 101 47 97 108 101 120 47 76 111 99 97 108 78 65 83 47 66 97 99 104 101 108 111 114 97 114 98 101 105 116 47 68 77 70 47 105 110 116 101 108 108 105 106 84 101 115 116 47 107 108 101 105 110 46 100 109 102 34 44 34 118 101 114 115 105 111 110 34 58 53 48 44 34 100 105 97 103 110 111 115 116 105 99 115 34 58 91 93 125] <nil> <nil>}
2025/01/13 14:41:02 util.go:36: Trace | Read Content-Length: 169 from Content-Length: 169
2025/01/13 14:41:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"93","method":"textDocument/foldingRange","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:41:02 server.go:109: INFO  | Handle Method: textDocument/foldingRange 
2025/01/13 14:41:02 foldingService.go:218: Trace | Found 0 Comment Ranges
2025/01/13 14:41:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"93","result":[{"startLine":3,"startCharacter":29,"endLine":13,"endCharacter":0},{"startLine":4,"startCharacter":26,"endLine":7,"endCharacter":8},{"startLine":9,"startCharacter":43,"endLine":11,"endCharacter":8}]}
2025/01/13 14:41:02 foldingService.go:92: Trace | Finished Folding Range
2025/01/13 14:41:02 util.go:36: Trace | Read Content-Length: 176 from Content-Length: 176
2025/01/13 14:41:02 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"94","method":"textDocument/semanticTokens/full","params":{"textDocument":{"uri":"file:///home/alex/LocalNAS/Bachelorarbeit/DMF/intellijTest/klein.dmf"}}}
2025/01/13 14:41:02 server.go:109: INFO  | Handle Method: textDocument/semanticTokens/full 
2025/01/13 14:41:02 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"94","result":{"data":[0,0,3,11,0,1,0,5,11,0,0,19,7,11,0,2,0,7,11,0,1,8,6,11,0,1,12,3,11,0,0,4,6,11,0,1,12,3,11,0,3,8,6,11,0,0,17,7,11,0]}}
2025/01/13 14:41:08 util.go:36: Trace | Read Content-Length: 61 from Content-Length: 61
2025/01/13 14:41:08 util.go:46: Trace | Read content: {"jsonrpc":"2.0","id":"95","method":"shutdown","params":null}
2025/01/13 14:41:08 server.go:93: INFO  | Received Shutdown Request
2025/01/13 14:41:08 util.go:62: INFO  | Sending message: {"jsonrpc":"2.0","id":"95"}
2025/01/13 14:41:08 server.go:80: INFO  | Server Closed
2025/01/13 14:41:08 main.go:32: Server Shutdown
